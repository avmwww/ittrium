TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE    1

    5029              ; Temporary Registers Used: None
       1              ;*******************************************************************************
       2              ;* TMS320C55x C/C++ Codegen                                        Unix v4.4.1 *
       3              ;* Date/Time created: Tue Feb 18 12:16:36 2025                                 *
       4              ;*******************************************************************************
       5                      .compiler_opts --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --si
       6                      .mmregs
       7                      .cpl_on
       8                      .arms_on
       9                      .c54cm_off
      10                      .asg AR6, FP
      11                      .asg XAR6, XFP
      12                      .asg DPH, MDP
      13                      .model call=c55_std
      14                      .model mem=large
      15                      .noremark 5549  ; code avoids SE CPU_28
      16                      .noremark 5558  ; code avoids SE CPU_33
      17                      .noremark 5570  ; code avoids SE CPU_40
      18                      .noremark 5571  ; code avoids SE CPU_41
      19                      .noremark 5573  ; code avoids SE CPU_43
      20                      .noremark 5584  ; code avoids SE CPU_47
      21                      .noremark 5599  ; code avoids SE CPU_55
      22                      .noremark 5650  ; code avoids SE CPU_68
      23                      .noremark 5503  ; code avoids SE CPU_84 MMR write
      24                      .noremark 5505  ; code avoids SE CPU_84 MMR read
      25                      .noremark 5673  ; code avoids SE CPU_89
      26                      .noremark 5684  ; code avoids SE CPU_116 indirect write
      27                      .noremark 5002  ; code respects overwrite rules
      28              ;*******************************************************************************
      29              ;* GLOBAL FILE PARAMETERS                                                      *
      30              ;*                                                                             *
      31              ;*   Architecture       : TMS320C55x                                           *
      32              ;*   Optimizing for     : Speed                                                *
      33              ;*   Memory             : Large Model (23-Bit Data Pointers)                   *
      34              ;*   Calls              : Normal Library ASM calls                             *
      35              ;*   Debug Info         : Optimized TI Debug Information                       *
      36              ;*******************************************************************************
      37              
      38              $C$DW$CU        .dwtag  DW_TAG_compile_unit
      39                      .dwattr $C$DW$CU, DW_AT_name("/data/projects/crt/ittrium/sample/c55x/../../kernel/ittrium.c")
      40                      .dwattr $C$DW$CU, DW_AT_producer("TMS320C55x C/C++ Codegen Unix v4.4.1 Copyright (c) 1996-2012 Texas 
      41                      .dwattr $C$DW$CU, DW_AT_TI_version(0x01)
      42                      .dwattr $C$DW$CU, DW_AT_comp_dir("/data/projects/crt/ittrium/sample/c55x/kernel")
      43              
      44              ;******************************************************************************
      45              ;* FUNCTION SYNONYMS                                                          *
      46              ;******************************************************************************
      47                      .global _iset_flg
      48              _iset_flg       .set __set_flg
      49                      .global _twai_flg
      50              _twai_flg       .set ___wai_flg
      51              
      52              $C$DW$1 .dwtag  DW_TAG_subprogram, DW_AT_name("_install_handler")
      53                      .dwattr $C$DW$1, DW_AT_TI_symbol_name("__install_handler")
      54                      .dwattr $C$DW$1, DW_AT_declaration
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE    2

      55                      .dwattr $C$DW$1, DW_AT_external
      56              $C$DW$2 .dwtag  DW_TAG_formal_parameter
      57                      .dwattr $C$DW$2, DW_AT_type(*$C$DW$T$55)
      58              $C$DW$3 .dwtag  DW_TAG_formal_parameter
      59                      .dwattr $C$DW$3, DW_AT_type(*$C$DW$T$87)
      60                      .dwendtag $C$DW$1
      61              
      62              
      63              $C$DW$4 .dwtag  DW_TAG_subprogram, DW_AT_name("init_tsk")
      64                      .dwattr $C$DW$4, DW_AT_TI_symbol_name("_init_tsk")
      65                      .dwattr $C$DW$4, DW_AT_declaration
      66                      .dwattr $C$DW$4, DW_AT_external
      67              $C$DW$5 .dwtag  DW_TAG_formal_parameter
      68                      .dwattr $C$DW$5, DW_AT_type(*$C$DW$T$3)
      69                      .dwendtag $C$DW$4
      70              
      71              
      72              $C$DW$6 .dwtag  DW_TAG_subprogram, DW_AT_name("start_hw_timer")
      73                      .dwattr $C$DW$6, DW_AT_TI_symbol_name("_start_hw_timer")
      74                      .dwattr $C$DW$6, DW_AT_declaration
      75                      .dwattr $C$DW$6, DW_AT_external
      76              
      77              $C$DW$7 .dwtag  DW_TAG_subprogram, DW_AT_name("terminate_hw_timer")
      78                      .dwattr $C$DW$7, DW_AT_TI_symbol_name("_terminate_hw_timer")
      79                      .dwattr $C$DW$7, DW_AT_declaration
      80                      .dwattr $C$DW$7, DW_AT_external
      81              
      82              $C$DW$8 .dwtag  DW_TAG_subprogram, DW_AT_name("make_task_context")
      83                      .dwattr $C$DW$8, DW_AT_TI_symbol_name("_make_task_context")
      84                      .dwattr $C$DW$8, DW_AT_declaration
      85                      .dwattr $C$DW$8, DW_AT_external
      86              $C$DW$9 .dwtag  DW_TAG_formal_parameter
      87                      .dwattr $C$DW$9, DW_AT_type(*$C$DW$T$47)
      88                      .dwendtag $C$DW$8
      89              
      90              
      91              $C$DW$10        .dwtag  DW_TAG_subprogram, DW_AT_name("timer_hw_enter")
      92                      .dwattr $C$DW$10, DW_AT_TI_symbol_name("_timer_hw_enter")
      93                      .dwattr $C$DW$10, DW_AT_type(*$C$DW$T$10)
      94                      .dwattr $C$DW$10, DW_AT_declaration
      95                      .dwattr $C$DW$10, DW_AT_external
      96              
      97              $C$DW$11        .dwtag  DW_TAG_subprogram, DW_AT_name("timer_hw_exit")
      98                      .dwattr $C$DW$11, DW_AT_TI_symbol_name("_timer_hw_exit")
      99                      .dwattr $C$DW$11, DW_AT_declaration
     100                      .dwattr $C$DW$11, DW_AT_external
     101              $C$DW$12        .dwtag  DW_TAG_variable, DW_AT_name("init_tsk_stack")
     102                      .dwattr $C$DW$12, DW_AT_TI_symbol_name("_init_tsk_stack")
     103                      .dwattr $C$DW$12, DW_AT_type(*$C$DW$T$149)
     104                      .dwattr $C$DW$12, DW_AT_declaration
     105                      .dwattr $C$DW$12, DW_AT_external
     106              $C$DW$13        .dwtag  DW_TAG_variable, DW_AT_name("init_tsk_sys_stack")
     107                      .dwattr $C$DW$13, DW_AT_TI_symbol_name("_init_tsk_sys_stack")
     108                      .dwattr $C$DW$13, DW_AT_type(*$C$DW$T$149)
     109                      .dwattr $C$DW$13, DW_AT_declaration
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE    3

     110                      .dwattr $C$DW$13, DW_AT_external
     111 000000               .bss    _flgcb_table,12,0,2
     112              $C$DW$14        .dwtag  DW_TAG_variable, DW_AT_name("flgcb_table")
     113                      .dwattr $C$DW$14, DW_AT_TI_symbol_name("_flgcb_table")
     114                      .dwattr $C$DW$14, DW_AT_type(*$C$DW$T$185)
     115                      .dwattr $C$DW$14, DW_AT_location[DW_OP_addr _flgcb_table]
     116                      .global _runtsk
     117 00000c               .bss    _runtsk,2,0,2
     118              $C$DW$15        .dwtag  DW_TAG_variable, DW_AT_name("runtsk")
     119                      .dwattr $C$DW$15, DW_AT_TI_symbol_name("_runtsk")
     120                      .dwattr $C$DW$15, DW_AT_location[DW_OP_addr _runtsk]
     121                      .dwattr $C$DW$15, DW_AT_type(*$C$DW$T$47)
     122                      .dwattr $C$DW$15, DW_AT_external
     123                      .global _schedtsk
     124 00000e               .bss    _schedtsk,2,0,2
     125              $C$DW$16        .dwtag  DW_TAG_variable, DW_AT_name("schedtsk")
     126                      .dwattr $C$DW$16, DW_AT_TI_symbol_name("_schedtsk")
     127                      .dwattr $C$DW$16, DW_AT_location[DW_OP_addr _schedtsk]
     128                      .dwattr $C$DW$16, DW_AT_type(*$C$DW$T$47)
     129                      .dwattr $C$DW$16, DW_AT_external
     130                      .global _tcb_table
     131 000010               .bss    _tcb_table,96,0,2
     132              $C$DW$17        .dwtag  DW_TAG_variable, DW_AT_name("tcb_table")
     133                      .dwattr $C$DW$17, DW_AT_TI_symbol_name("_tcb_table")
     134                      .dwattr $C$DW$17, DW_AT_location[DW_OP_addr _tcb_table]
     135                      .dwattr $C$DW$17, DW_AT_type(*$C$DW$T$208)
     136                      .dwattr $C$DW$17, DW_AT_external
     137                      .global _free_tcb
     138 000070               .bss    _free_tcb,4,0,2
     139              $C$DW$18        .dwtag  DW_TAG_variable, DW_AT_name("free_tcb")
     140                      .dwattr $C$DW$18, DW_AT_TI_symbol_name("_free_tcb")
     141                      .dwattr $C$DW$18, DW_AT_location[DW_OP_addr _free_tcb]
     142                      .dwattr $C$DW$18, DW_AT_type(*$C$DW$T$37)
     143                      .dwattr $C$DW$18, DW_AT_external
     144                      .global _ready_queue
     145 000074               .bss    _ready_queue,50,0,2
     146              $C$DW$19        .dwtag  DW_TAG_variable, DW_AT_name("ready_queue")
     147                      .dwattr $C$DW$19, DW_AT_TI_symbol_name("_ready_queue")
     148                      .dwattr $C$DW$19, DW_AT_location[DW_OP_addr _ready_queue]
     149                      .dwattr $C$DW$19, DW_AT_type(*$C$DW$T$110)
     150                      .dwattr $C$DW$19, DW_AT_external
     151              $C$DW$20        .dwtag  DW_TAG_variable, DW_AT_name("_system_ticks")
     152                      .dwattr $C$DW$20, DW_AT_TI_symbol_name("__system_ticks")
     153                      .dwattr $C$DW$20, DW_AT_type(*$C$DW$T$74)
     154                      .dwattr $C$DW$20, DW_AT_declaration
     155                      .dwattr $C$DW$20, DW_AT_external
     156 0000a6               .bss    _timer_queue,4,0,2
     157              $C$DW$21        .dwtag  DW_TAG_variable, DW_AT_name("timer_queue")
     158                      .dwattr $C$DW$21, DW_AT_TI_symbol_name("_timer_queue")
     159                      .dwattr $C$DW$21, DW_AT_type(*$C$DW$T$37)
     160                      .dwattr $C$DW$21, DW_AT_location[DW_OP_addr _timer_queue]
     161              ;       opt55 /tmp/12992UBjjoI /tmp/12992yQ8rRO 
     162 000000               .sect   ".text"
     163                      .global _wait_tskid
     164              
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE    4

     165              $C$DW$22        .dwtag  DW_TAG_subprogram, DW_AT_name("wait_tskid")
     166                      .dwattr $C$DW$22, DW_AT_low_pc(_wait_tskid)
     167                      .dwattr $C$DW$22, DW_AT_high_pc(0x00)
     168                      .dwattr $C$DW$22, DW_AT_TI_symbol_name("_wait_tskid")
     169                      .dwattr $C$DW$22, DW_AT_external
     170                      .dwattr $C$DW$22, DW_AT_type(*$C$DW$T$38)
     171                      .dwattr $C$DW$22, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
     172                      .dwattr $C$DW$22, DW_AT_TI_begin_line(0x4b)
     173                      .dwattr $C$DW$22, DW_AT_TI_begin_column(0x04)
     174                      .dwattr $C$DW$22, DW_AT_TI_max_frame_size(0x01)
     175                      .dwattr $C$DW$22, DW_AT_frame_base[DW_OP_bregx 0x24 1]
     176                      .dwattr $C$DW$22, DW_AT_TI_skeletal
     177                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 76,column 1,is_stmt,ad
     178              $C$DW$23        .dwtag  DW_TAG_formal_parameter, DW_AT_name("wait_queue")
     179                      .dwattr $C$DW$23, DW_AT_TI_symbol_name("_wait_queue")
     180                      .dwattr $C$DW$23, DW_AT_type(*$C$DW$T$96)
     181                      .dwattr $C$DW$23, DW_AT_location[DW_OP_reg17]
     182              ;*******************************************************************************
     183              ;* FUNCTION NAME: wait_tskid                                                   *
     184              ;*                                                                             *
     185              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,T0,AR0,XAR0,AR3,XAR3,SP,TC1, *
     186              ;*                        M40,SATA,SATD,RDM,FRCT,SMUL                          *
     187              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
     188              ;*   Total Frame Size   : 1 word                                               *
     189              ;*                        (1 return address/alignment)                         *
     190              ;*   Min System Stack   : 1 word                                               *
     191              ;*******************************************************************************
     192 000000       _wait_tskid:
     193 000000 9081          MOV XAR0, AC1
     194 000002 901B          MOV AC1, XAR3
     195 000004 ED61          MOV dbl(*AR3), XAR3
         000006 BF   
     196 000007 90B0          MOV XAR3, AC0
     197 000009 1A00          OR #0, AC0, AC2
         00000b 20   
     198 00000c 122C          CMPU AC2 != AC1, TC1 ; |110| 
         00000e 14   
     199 00000f 3C04          MOV #0, T0
     200 000011 9664          XCC TC1
     201 000013 A46D             MOV *AR3(#17), T0 ; |80| 
         000015 0011 
     202                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 81,column 1,is_stmt
     203              $C$DW$24        .dwtag  DW_TAG_TI_branch
     204                      .dwattr $C$DW$24, DW_AT_low_pc(0x00)
     205                      .dwattr $C$DW$24, DW_AT_TI_return
     206 000017 4804          RET
     207                                                      ; return occurs
     208                      .dwattr $C$DW$22, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
     209                      .dwattr $C$DW$22, DW_AT_TI_end_line(0x51)
     210                      .dwattr $C$DW$22, DW_AT_TI_end_column(0x01)
     211                      .dwendtag $C$DW$22
     212              
     213 000019               .sect   ".text"
     214                      .global _move_to_ready_state
     215              
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE    5

     216              $C$DW$25        .dwtag  DW_TAG_subprogram, DW_AT_name("move_to_ready_state")
     217                      .dwattr $C$DW$25, DW_AT_low_pc(_move_to_ready_state)
     218                      .dwattr $C$DW$25, DW_AT_high_pc(0x00)
     219                      .dwattr $C$DW$25, DW_AT_TI_symbol_name("_move_to_ready_state")
     220                      .dwattr $C$DW$25, DW_AT_external
     221                      .dwattr $C$DW$25, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
     222                      .dwattr $C$DW$25, DW_AT_TI_begin_line(0x74)
     223                      .dwattr $C$DW$25, DW_AT_TI_begin_column(0x06)
     224                      .dwattr $C$DW$25, DW_AT_TI_max_frame_size(0x01)
     225                      .dwattr $C$DW$25, DW_AT_frame_base[DW_OP_bregx 0x24 1]
     226                      .dwattr $C$DW$25, DW_AT_TI_skeletal
     227                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 117,column 1,is_stmt,a
     228              $C$DW$26        .dwtag  DW_TAG_formal_parameter, DW_AT_name("tcb")
     229                      .dwattr $C$DW$26, DW_AT_TI_symbol_name("_tcb")
     230                      .dwattr $C$DW$26, DW_AT_type(*$C$DW$T$47)
     231                      .dwattr $C$DW$26, DW_AT_location[DW_OP_reg17]
     232              ;*******************************************************************************
     233              ;* FUNCTION NAME: move_to_ready_state                                          *
     234              ;*                                                                             *
     235              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,T1,AR0,XAR0,AR1,AR2,XAR2,AR3,XAR3,   *
     236              ;*                        AR4,XAR4,SP,CARRY,TC1,M40,SATA,SATD,RDM,FRCT,SMUL    *
     237              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
     238              ;*   Total Frame Size   : 1 word                                               *
     239              ;*                        (1 return address/alignment)                         *
     240              ;*   Min System Stack   : 1 word                                               *
     241              ;*******************************************************************************
     242 000019       _move_to_ready_state:
     243 000019 A90D          MOV *AR0(#22), AR1 ; |138| 
         00001b 0016 
     244 00001d EC31          AMOV #_ready_queue, XAR3 ; |140| 
         00001f BE00 
         000021 0074-
     245 000023 2291          MOV AR1, AC1
     246 000025 90B0          MOV XAR3, AC0
     247 000027 1055          SFTS AC1, #2, AC1 ; |140| 
         000029 02   
     248 00002a 4021          ADD #2, AC1 ; |140| 
     249 00002c 2410          ADD AC1, AC0 ; |140| 
     250 00002e 900A          MOV AC0, XAR2
     251 000030 E60D          MOV #2, *AR0(#24) ; |118| 
         000032 0200 
         000034 18   
     252 000035 2290          MOV AR1, AC0
     253 000037 ED55          MOV dbl(*AR2(short(#2))), XAR4
         000039 CF   
     254 00003a 1005          SFTS AC0, #-4, AC0 ; |46| 
         00003c 3C   
     255 00003d EB15          MOV XAR4, dbl(*AR0(short(#2)))
         00003f C5   
     256 000040 A010          MOV mmap(AC0L), AC0 ; |46| 
         000042 98   
     257 000043 ED55          MOV dbl(*AR2(short(#2))), XAR4
         000045 CF   
     258 000046 7B00          ADD #48, AC0, AC1 ; |46| 
         000048 3010 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE    6

     259 00004a 90B0          MOV XAR3, AC0
     260 00004c 2410          ADD AC1, AC0 ; |46| 
     261 00004e 900B          MOV AC0, XAR3
     262 000050 EB01          MOV XAR2, dbl(*AR0)
         000052 A5   
     263              
     264 000053 EB81          MOV XAR0, dbl(*AR4)
         000055 85   
     265 000056 190F  ||      AND #0x000f, AR1, T1 ; |46| 
         000058 59   
     266              
     267 00005c 3D10          MOV #1, AC0
     268 000059 EB55  ||      MOV XAR0, dbl(*AR2(short(#2)))
         00005b 85   
     269              
     270 00005e 5C05          SFTS AC0, T1, AC0 ; |46| 
     271 000060 DA61          OR *AR3, AC0, AR2 ; |46| 
         000062 A0   
     272 000063 CA61          MOV AR2, *AR3 ; |46| 
     273 000065 AA31          MOV *(#_ready_queue), AR2 ; |142| 
         000067 0000 
         000069 74-  
     274              
     275 00006a 1298          CMP AR1 >= AR2, TC1 ; |142| 
         00006c A0   
     276 00006d 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
     277              
     278 00006e 9674          XCC !TC1
     279 000070 EB31             MOV XAR0, dbl(*(#_schedtsk))
         000072 8500 
         000074 000E-
     280 000076 9674          XCC !TC1
     281 000078 C931             MOV AR1, *(#_ready_queue) ; |143| 
         00007a 0000 
         00007c 74-  
     282                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 121,column 1,is_stmt
     283              $C$DW$27        .dwtag  DW_TAG_TI_branch
     284                      .dwattr $C$DW$27, DW_AT_low_pc(0x00)
     285                      .dwattr $C$DW$27, DW_AT_TI_return
     286 00007d 4804          RET
     287                                                      ; return occurs
     288                      .dwattr $C$DW$25, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
     289                      .dwattr $C$DW$25, DW_AT_TI_end_line(0x79)
     290                      .dwattr $C$DW$25, DW_AT_TI_end_column(0x01)
     291                      .dwendtag $C$DW$25
     292              
     293 00007f               .sect   ".text"
     294                      .global _wait_release_tmout
     295              
     296              $C$DW$28        .dwtag  DW_TAG_subprogram, DW_AT_name("wait_release_tmout")
     297                      .dwattr $C$DW$28, DW_AT_low_pc(_wait_release_tmout)
     298                      .dwattr $C$DW$28, DW_AT_high_pc(0x00)
     299                      .dwattr $C$DW$28, DW_AT_TI_symbol_name("_wait_release_tmout")
     300                      .dwattr $C$DW$28, DW_AT_external
     301                      .dwattr $C$DW$28, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE    7

     302                      .dwattr $C$DW$28, DW_AT_TI_begin_line(0x21)
     303                      .dwattr $C$DW$28, DW_AT_TI_begin_column(0x06)
     304                      .dwattr $C$DW$28, DW_AT_TI_max_frame_size(0x02)
     305                      .dwattr $C$DW$28, DW_AT_frame_base[DW_OP_bregx 0x24 2]
     306                      .dwattr $C$DW$28, DW_AT_TI_skeletal
     307                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 34,column 1,is_stmt,ad
     308              $C$DW$29        .dwtag  DW_TAG_formal_parameter, DW_AT_name("tcb")
     309                      .dwattr $C$DW$29, DW_AT_TI_symbol_name("_tcb")
     310                      .dwattr $C$DW$29, DW_AT_type(*$C$DW$T$47)
     311                      .dwattr $C$DW$29, DW_AT_location[DW_OP_reg17]
     312              ;*******************************************************************************
     313              ;* FUNCTION NAME: wait_release_tmout                                           *
     314              ;*                                                                             *
     315              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,AC3,AC3,AR0,XAR0,AR2,XAR2,   *
     316              ;*                        AR3,XAR3,SP,TC1,M40,SATA,SATD,RDM,FRCT,SMUL          *
     317              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
     318              ;*   Total Frame Size   : 2 words                                              *
     319              ;*                        (2 return address/alignment)                         *
     320              ;*   Min System Stack   : 1 word                                               *
     321              ;*******************************************************************************
     322 00007f       _wait_release_tmout:
     323 00007f 9080          MOV XAR0, AC0
     324 000081 900B          MOV AC0, XAR3
     325 000083 4EFF          AADD #-1, SP
     326 000085 ED61          MOV dbl(*AR3), XAR3
         000087 BF   
     327 000088 1A00          OR #0, AC0, AC2
         00008a 20   
     328 00008b 90B1          MOV XAR3, AC1
     329 00008d 1A00          OR #0, AC1, AC3
         00008f 31   
     330 000090 1230          CMPU AC3 == AC2, TC1 ; |63| 
         000092 24   
     331 000093 0464          BCC $C$L1,TC1 ; |63| 
         000095 13   
     332                                                      ; branchcc occurs ; |63| 
     333 000096 900B          MOV AC0, XAR3
     334 000098 ED75          MOV dbl(*AR3(short(#2))), XAR3
         00009a BF   
     335 00009b EB61          MOV AC1, dbl(*AR3)
         00009d 18   
     336 00009e 900B          MOV AC0, XAR3
     337 0000a0 ED75          MOV dbl(*AR3(short(#2))), XAR2
         0000a2 AF   
     338 0000a3 ED61          MOV dbl(*AR3), XAR3
         0000a5 BF   
     339 0000a6 EB75          MOV XAR2, dbl(*AR3(short(#2)))
         0000a8 A5   
     340 0000a9       $C$L1:    
     341 0000a9 900B          MOV AC0, XAR3
     342 0000ab F06D          CMP *AR3(#24) == #4, TC1 ; |40| 
         0000ad 0004 
         0000af 0018 
     343 0000b1 9674          XCC !TC1
     344 0000b3 E66D             MOV #8, *AR3(#24) ; |43| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE    8

         0000b5 0800 
         0000b7 18   
     345 0000b8 61F4          BCC $C$L2,!TC1 ; |43| 
     346                                                      ; branchcc occurs ; |43| 
     347              $C$DW$30        .dwtag  DW_TAG_TI_branch
     348                      .dwattr $C$DW$30, DW_AT_low_pc(0x00)
     349                      .dwattr $C$DW$30, DW_AT_name("_move_to_ready_state")
     350                      .dwattr $C$DW$30, DW_AT_TI_call
     351 0000ba 08FF          CALL #_move_to_ready_state ; |41| 
         0000bc 5C   
     352                                                      ; call occurs [#_move_to_ready_state] ; |41| 
     353 0000bd       $C$L2:    
     354 0000bd 4E01          AADD #1, SP
     355                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 37,column 1,is_stmt
     356              $C$DW$31        .dwtag  DW_TAG_TI_branch
     357                      .dwattr $C$DW$31, DW_AT_low_pc(0x00)
     358                      .dwattr $C$DW$31, DW_AT_TI_return
     359 0000bf 4804          RET
     360                                                      ; return occurs
     361                      .dwattr $C$DW$28, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
     362                      .dwattr $C$DW$28, DW_AT_TI_end_line(0x25)
     363                      .dwattr $C$DW$28, DW_AT_TI_end_column(0x01)
     364                      .dwendtag $C$DW$28
     365              
     366 0000c1               .sect   ".text"
     367                      .global _wait_release_ok
     368              
     369              $C$DW$32        .dwtag  DW_TAG_subprogram, DW_AT_name("wait_release_ok")
     370                      .dwattr $C$DW$32, DW_AT_low_pc(_wait_release_ok)
     371                      .dwattr $C$DW$32, DW_AT_high_pc(0x00)
     372                      .dwattr $C$DW$32, DW_AT_TI_symbol_name("_wait_release_ok")
     373                      .dwattr $C$DW$32, DW_AT_external
     374                      .dwattr $C$DW$32, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
     375                      .dwattr $C$DW$32, DW_AT_TI_begin_line(0x18)
     376                      .dwattr $C$DW$32, DW_AT_TI_begin_column(0x06)
     377                      .dwattr $C$DW$32, DW_AT_TI_max_frame_size(0x04)
     378                      .dwattr $C$DW$32, DW_AT_frame_base[DW_OP_bregx 0x24 4]
     379                      .dwattr $C$DW$32, DW_AT_TI_skeletal
     380                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 25,column 1,is_stmt,ad
     381              $C$DW$33        .dwtag  DW_TAG_formal_parameter, DW_AT_name("tcb")
     382                      .dwattr $C$DW$33, DW_AT_TI_symbol_name("_tcb")
     383                      .dwattr $C$DW$33, DW_AT_type(*$C$DW$T$47)
     384                      .dwattr $C$DW$33, DW_AT_location[DW_OP_reg17]
     385              ;*******************************************************************************
     386              ;* FUNCTION NAME: wait_release_ok                                              *
     387              ;*                                                                             *
     388              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,AC3,AC3,AR0,XAR0,AR2,XAR2,   *
     389              ;*                        AR3,XAR3,SP,TC1,M40,SATA,SATD,RDM,FRCT,SMUL          *
     390              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
     391              ;*   Total Frame Size   : 4 words                                              *
     392              ;*                        (2 return address/alignment)                         *
     393              ;*                        (2 local values)                                     *
     394              ;*   Min System Stack   : 1 word                                               *
     395              ;*******************************************************************************
     396 0000c1       _wait_release_ok:
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE    9

     397 0000c1 9080          MOV XAR0, AC0
     398 0000c3 900B          MOV AC0, XAR3
     399 0000c5 4EFD          AADD #-3, SP
     400 0000c7 E66D          MOV #0, *AR3(#32) ; |26| 
         0000c9 0000 
         0000cb 20   
     401 0000cc 1426          AADD #38, AR3 ; |63| 
         0000ce B4   
     402 0000cf 90B1          MOV XAR3, AC1
     403 0000d1 900B          MOV AC0, XAR3
     404 0000d3 ED6D          MOV dbl(*AR3(#38)), XAR3
         0000d5 BF00 
         0000d7 26   
     405 0000d8 EB00          MOV XAR3, dbl(*SP(#0))
         0000da B5   
     406              
     407 0000db ED00          MOV dbl(*SP(#0)), AC2 ; |63| 
         0000dd 28   
     408 0000de 1B00  ||      OR #0, AC1, AC3
         0000e0 31   
     409              
     410 0000e1 1220          CMPU AC2 == AC3, TC1 ; |63| 
         0000e3 34   
     411 0000e4 0464          BCC $C$L3,TC1 ; |63| 
         0000e6 16   
     412                                                      ; branchcc occurs ; |63| 
     413 0000e7 901B          MOV AC1, XAR3
     414 0000e9 ED75          MOV dbl(*AR3(short(#2))), XAR2
         0000eb AF   
     415 0000ec ED00          MOV dbl(*SP(#0)), XAR3
         0000ee BF   
     416 0000ef EB41          MOV XAR3, dbl(*AR2)
         0000f1 B5   
     417 0000f2 901B          MOV AC1, XAR3
     418 0000f4 ED75          MOV dbl(*AR3(short(#2))), XAR2
         0000f6 AF   
     419 0000f7 ED61          MOV dbl(*AR3), XAR3
         0000f9 BF   
     420 0000fa EB75          MOV XAR2, dbl(*AR3(short(#2)))
         0000fc A5   
     421 0000fd       $C$L3:    
     422 0000fd 900B          MOV AC0, XAR3
     423 0000ff ED61          MOV dbl(*AR3), XAR3
         000101 BF   
     424 000102 1A00          OR #0, AC0, AC2
         000104 20   
     425 000105 90B1          MOV XAR3, AC1
     426 000107 1A00          OR #0, AC1, AC3
         000109 31   
     427 00010a 1230          CMPU AC3 == AC2, TC1 ; |63| 
         00010c 24   
     428 00010d 0464          BCC $C$L4,TC1 ; |63| 
         00010f 13   
     429                                                      ; branchcc occurs ; |63| 
     430 000110 900B          MOV AC0, XAR3
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   10

     431 000112 ED75          MOV dbl(*AR3(short(#2))), XAR3
         000114 BF   
     432 000115 EB61          MOV AC1, dbl(*AR3)
         000117 18   
     433 000118 900B          MOV AC0, XAR3
     434 00011a ED75          MOV dbl(*AR3(short(#2))), XAR2
         00011c AF   
     435 00011d ED61          MOV dbl(*AR3), XAR3
         00011f BF   
     436 000120 EB75          MOV XAR2, dbl(*AR3(short(#2)))
         000122 A5   
     437 000123       $C$L4:    
     438 000123 900B          MOV AC0, XAR3
     439 000125 F06D          CMP *AR3(#24) == #4, TC1 ; |40| 
         000127 0004 
         000129 0018 
     440 00012b 9674          XCC !TC1
     441 00012d E66D             MOV #8, *AR3(#24) ; |43| 
         00012f 0800 
         000131 18   
     442 000132 61F4          BCC $C$L5,!TC1 ; |43| 
     443                                                      ; branchcc occurs ; |43| 
     444              $C$DW$34        .dwtag  DW_TAG_TI_branch
     445                      .dwattr $C$DW$34, DW_AT_low_pc(0x00)
     446                      .dwattr $C$DW$34, DW_AT_name("_move_to_ready_state")
     447                      .dwattr $C$DW$34, DW_AT_TI_call
     448 000134 08FE          CALL #_move_to_ready_state ; |41| 
         000136 E2   
     449                                                      ; call occurs [#_move_to_ready_state] ; |41| 
     450 000137       $C$L5:    
     451 000137 4E03          AADD #3, SP
     452                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 28,column 1,is_stmt
     453              $C$DW$35        .dwtag  DW_TAG_TI_branch
     454                      .dwattr $C$DW$35, DW_AT_low_pc(0x00)
     455                      .dwattr $C$DW$35, DW_AT_TI_return
     456 000139 4804          RET
     457                                                      ; return occurs
     458                      .dwattr $C$DW$32, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
     459                      .dwattr $C$DW$32, DW_AT_TI_end_line(0x1c)
     460                      .dwattr $C$DW$32, DW_AT_TI_end_column(0x01)
     461                      .dwendtag $C$DW$32
     462              
     463 00013b               .sect   ".text"
     464                      .global _wait_delete
     465              
     466              $C$DW$36        .dwtag  DW_TAG_subprogram, DW_AT_name("wait_delete")
     467                      .dwattr $C$DW$36, DW_AT_low_pc(_wait_delete)
     468                      .dwattr $C$DW$36, DW_AT_high_pc(0x00)
     469                      .dwattr $C$DW$36, DW_AT_TI_symbol_name("_wait_delete")
     470                      .dwattr $C$DW$36, DW_AT_external
     471                      .dwattr $C$DW$36, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
     472                      .dwattr $C$DW$36, DW_AT_TI_begin_line(0x3d)
     473                      .dwattr $C$DW$36, DW_AT_TI_begin_column(0x06)
     474                      .dwattr $C$DW$36, DW_AT_TI_max_frame_size(0x06)
     475                      .dwattr $C$DW$36, DW_AT_frame_base[DW_OP_bregx 0x24 6]
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   11

     476                      .dwattr $C$DW$36, DW_AT_TI_skeletal
     477                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 62,column 1,is_stmt,ad
     478              $C$DW$37        .dwtag  DW_TAG_formal_parameter, DW_AT_name("wait_queue")
     479                      .dwattr $C$DW$37, DW_AT_TI_symbol_name("_wait_queue")
     480                      .dwattr $C$DW$37, DW_AT_type(*$C$DW$T$96)
     481                      .dwattr $C$DW$37, DW_AT_location[DW_OP_reg17]
     482              ;*******************************************************************************
     483              ;* FUNCTION NAME: wait_delete                                                  *
     484              ;*                                                                             *
     485              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,AC3,AC3,AR0,XAR0,AR2,XAR2,   *
     486              ;*                        AR3,XAR3,SP,TC1,M40,SATA,SATD,RDM,FRCT,SMUL          *
     487              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
     488              ;*   Total Frame Size   : 6 words                                              *
     489              ;*                        (2 return address/alignment)                         *
     490              ;*                        (4 local values)                                     *
     491              ;*   Min System Stack   : 1 word                                               *
     492              ;*******************************************************************************
     493 00013b       _wait_delete:
     494 00013b 4EFB          AADD #-5, SP
     495 00013d EB00          MOV XAR0, dbl(*SP(#0))
         00013f 85   
     496 000140 ED00          MOV dbl(*SP(#0)), XAR3
         000142 BF   
     497 000143 ED61          MOV dbl(*AR3), XAR3
         000145 BF   
     498 000146 90B0          MOV XAR3, AC0
     499              
     500 00014b 1B00          OR #0, AC0, AC2
         00014d 20   
     501 000148 ED00  ||      MOV dbl(*SP(#0)), AC1 ; |110| 
         00014a 18   
     502              
     503 00014e 1220          CMPU AC2 == AC1, TC1 ; |110| 
         000150 14   
     504 000151 6D64          BCC $C$L10,TC1 ; |110| 
         000153 0090 
     505                                                      ; branchcc occurs ; |110| 
     506 000155       $C$L6:    
     507 000155       $C$DW$L$_wait_delete$2$B:
     508                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 65,column 0,is_stmt
     509 000155 ED6D          MOV dbl(*AR3(#36)), XAR3
         000157 BF00 
         000159 24   
     510 00015a E661          MOV #-51, *AR3 ; |67| 
         00015c CD   
     511 00015d 900B          MOV AC0, XAR3
     512 00015f 1426          AADD #38, AR3 ; |63| 
         000161 B4   
     513 000162 90B1          MOV XAR3, AC1
     514 000164 900B          MOV AC0, XAR3
     515 000166 ED6D          MOV dbl(*AR3(#38)), XAR3
         000168 BF00 
         00016a 26   
     516 00016b EB04          MOV XAR3, dbl(*SP(#2))
         00016d B5   
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   12

     517              
     518 00016e ED04          MOV dbl(*SP(#2)), AC2 ; |63| 
         000170 28   
     519 000171 1B00  ||      OR #0, AC1, AC3
         000173 31   
     520              
     521 000174 1220          CMPU AC2 == AC3, TC1 ; |63| 
         000176 34   
     522 000177 0464          BCC $C$L7,TC1 ; |63| 
         000179 1C   
     523                                                      ; branchcc occurs ; |63| 
     524 00017a       $C$DW$L$_wait_delete$2$E:
     525 00017a       $C$DW$L$_wait_delete$3$B:
     526 00017a 900B          MOV AC0, XAR3
     527 00017c ED6D          MOV dbl(*AR3(#40)), XAR2
         00017e AF00 
         000180 28   
     528 000181 ED04          MOV dbl(*SP(#2)), XAR3
         000183 BF   
     529 000184 EB41          MOV XAR3, dbl(*AR2)
         000186 B5   
     530 000187 900B          MOV AC0, XAR3
     531 000189 ED6D          MOV dbl(*AR3(#40)), XAR2
         00018b AF00 
         00018d 28   
     532 00018e 901B          MOV AC1, XAR3
     533 000190 ED61          MOV dbl(*AR3), XAR3
         000192 BF   
     534 000193 EB75          MOV XAR2, dbl(*AR3(short(#2)))
         000195 A5   
     535 000196       $C$DW$L$_wait_delete$3$E:
     536 000196       $C$L7:    
     537 000196       $C$DW$L$_wait_delete$4$B:
     538 000196 900B          MOV AC0, XAR3
     539 000198 ED61          MOV dbl(*AR3), XAR3
         00019a BF   
     540 00019b 1A00          OR #0, AC0, AC2
         00019d 20   
     541 00019e 90B1          MOV XAR3, AC1
     542 0001a0 1A00          OR #0, AC1, AC3
         0001a2 31   
     543 0001a3 1230          CMPU AC3 == AC2, TC1 ; |63| 
         0001a5 24   
     544 0001a6 0464          BCC $C$L8,TC1 ; |63| 
         0001a8 13   
     545                                                      ; branchcc occurs ; |63| 
     546 0001a9       $C$DW$L$_wait_delete$4$E:
     547 0001a9       $C$DW$L$_wait_delete$5$B:
     548 0001a9 900B          MOV AC0, XAR3
     549 0001ab ED75          MOV dbl(*AR3(short(#2))), XAR3
         0001ad BF   
     550 0001ae EB61          MOV AC1, dbl(*AR3)
         0001b0 18   
     551 0001b1 900B          MOV AC0, XAR3
     552 0001b3 ED75          MOV dbl(*AR3(short(#2))), XAR2
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   13

         0001b5 AF   
     553 0001b6 ED61          MOV dbl(*AR3), XAR3
         0001b8 BF   
     554 0001b9 EB75          MOV XAR2, dbl(*AR3(short(#2)))
         0001bb A5   
     555 0001bc       $C$DW$L$_wait_delete$5$E:
     556 0001bc       $C$L8:    
     557 0001bc       $C$DW$L$_wait_delete$6$B:
     558 0001bc 9008          MOV AC0, XAR0
     559 0001be F00D          CMP *AR0(#24) == #4, TC1 ; |40| 
         0001c0 0004 
         0001c2 0018 
     560 0001c4 9674          XCC !TC1
     561 0001c6 E60D             MOV #8, *AR0(#24) ; |43| 
         0001c8 0800 
         0001ca 18   
     562 0001cb 61F4          BCC $C$L9,!TC1 ; |43| 
     563                                                      ; branchcc occurs ; |43| 
     564              $C$DW$L$_wait_delete$6$E:
     565              $C$DW$L$_wait_delete$7$B:
     566              $C$DW$38        .dwtag  DW_TAG_TI_branch
     567                      .dwattr $C$DW$38, DW_AT_low_pc(0x00)
     568                      .dwattr $C$DW$38, DW_AT_name("_move_to_ready_state")
     569                      .dwattr $C$DW$38, DW_AT_TI_call
     570 0001cd 08FE          CALL #_move_to_ready_state ; |41| 
         0001cf 49   
     571                                                      ; call occurs [#_move_to_ready_state] ; |41| 
     572 0001d0       $C$DW$L$_wait_delete$7$E:
     573 0001d0       $C$L9:    
     574 0001d0       $C$DW$L$_wait_delete$8$B:
     575 0001d0 ED00          MOV dbl(*SP(#0)), XAR3
         0001d2 BF   
     576 0001d3 ED61          MOV dbl(*AR3), XAR3
         0001d5 BF   
     577 0001d6 90B0          MOV XAR3, AC0
     578              
     579 0001db 1B00          OR #0, AC0, AC2
         0001dd 20   
     580 0001d8 ED00  ||      MOV dbl(*SP(#0)), AC1 ; |110| 
         0001da 18   
     581              
     582 0001de 122C          CMPU AC2 != AC1, TC1 ; |110| 
         0001e0 14   
     583                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 69,column 0,is_stmt
     584 0001e1 6D64          BCC $C$L6,TC1 ; |110| 
         0001e3 FF70 
     585                                                      ; branchcc occurs ; |110| 
     586 0001e5       $C$DW$L$_wait_delete$8$E:
     587 0001e5       $C$L10:    
     588 0001e5 4E05          AADD #5, SP
     589                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 70,column 1,is_stmt
     590              $C$DW$39        .dwtag  DW_TAG_TI_branch
     591                      .dwattr $C$DW$39, DW_AT_low_pc(0x00)
     592                      .dwattr $C$DW$39, DW_AT_TI_return
     593 0001e7 4804          RET
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   14

     594                                                      ; return occurs
     595              
     596              $C$DW$40        .dwtag  DW_TAG_TI_loop
     597                      .dwattr $C$DW$40, DW_AT_name("/tmp/129924KNrf8:$C$L6:1:1739870196")
     598                      .dwattr $C$DW$40, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/queue.h")
     599                      .dwattr $C$DW$40, DW_AT_TI_begin_line(0x41)
     600                      .dwattr $C$DW$40, DW_AT_TI_end_line(0x6e)
     601              $C$DW$41        .dwtag  DW_TAG_TI_loop_range
     602                      .dwattr $C$DW$41, DW_AT_low_pc($C$DW$L$_wait_delete$2$B)
     603                      .dwattr $C$DW$41, DW_AT_high_pc($C$DW$L$_wait_delete$2$E)
     604              $C$DW$42        .dwtag  DW_TAG_TI_loop_range
     605                      .dwattr $C$DW$42, DW_AT_low_pc($C$DW$L$_wait_delete$3$B)
     606                      .dwattr $C$DW$42, DW_AT_high_pc($C$DW$L$_wait_delete$3$E)
     607              $C$DW$43        .dwtag  DW_TAG_TI_loop_range
     608                      .dwattr $C$DW$43, DW_AT_low_pc($C$DW$L$_wait_delete$4$B)
     609                      .dwattr $C$DW$43, DW_AT_high_pc($C$DW$L$_wait_delete$4$E)
     610              $C$DW$44        .dwtag  DW_TAG_TI_loop_range
     611                      .dwattr $C$DW$44, DW_AT_low_pc($C$DW$L$_wait_delete$5$B)
     612                      .dwattr $C$DW$44, DW_AT_high_pc($C$DW$L$_wait_delete$5$E)
     613              $C$DW$45        .dwtag  DW_TAG_TI_loop_range
     614                      .dwattr $C$DW$45, DW_AT_low_pc($C$DW$L$_wait_delete$6$B)
     615                      .dwattr $C$DW$45, DW_AT_high_pc($C$DW$L$_wait_delete$6$E)
     616              $C$DW$46        .dwtag  DW_TAG_TI_loop_range
     617                      .dwattr $C$DW$46, DW_AT_low_pc($C$DW$L$_wait_delete$7$B)
     618                      .dwattr $C$DW$46, DW_AT_high_pc($C$DW$L$_wait_delete$7$E)
     619              $C$DW$47        .dwtag  DW_TAG_TI_loop_range
     620                      .dwattr $C$DW$47, DW_AT_low_pc($C$DW$L$_wait_delete$8$B)
     621                      .dwattr $C$DW$47, DW_AT_high_pc($C$DW$L$_wait_delete$8$E)
     622                      .dwendtag $C$DW$40
     623              
     624                      .dwattr $C$DW$36, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
     625                      .dwattr $C$DW$36, DW_AT_TI_end_line(0x46)
     626                      .dwattr $C$DW$36, DW_AT_TI_end_column(0x01)
     627                      .dwendtag $C$DW$36
     628              
     629 0001e9               .sect   ".text"
     630                      .global _move_from_ready_state
     631              
     632              $C$DW$48        .dwtag  DW_TAG_subprogram, DW_AT_name("move_from_ready_state")
     633                      .dwattr $C$DW$48, DW_AT_low_pc(_move_from_ready_state)
     634                      .dwattr $C$DW$48, DW_AT_high_pc(0x00)
     635                      .dwattr $C$DW$48, DW_AT_TI_symbol_name("_move_from_ready_state")
     636                      .dwattr $C$DW$48, DW_AT_external
     637                      .dwattr $C$DW$48, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
     638                      .dwattr $C$DW$48, DW_AT_TI_begin_line(0x7e)
     639                      .dwattr $C$DW$48, DW_AT_TI_begin_column(0x06)
     640                      .dwattr $C$DW$48, DW_AT_TI_max_frame_size(0x01)
     641                      .dwattr $C$DW$48, DW_AT_frame_base[DW_OP_bregx 0x24 1]
     642                      .dwattr $C$DW$48, DW_AT_TI_skeletal
     643                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 127,column 1,is_stmt,a
     644              $C$DW$49        .dwtag  DW_TAG_formal_parameter, DW_AT_name("tcb")
     645                      .dwattr $C$DW$49, DW_AT_TI_symbol_name("_tcb")
     646                      .dwattr $C$DW$49, DW_AT_type(*$C$DW$T$47)
     647                      .dwattr $C$DW$49, DW_AT_location[DW_OP_reg17]
     648              ;*******************************************************************************
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   15

     649              ;* FUNCTION NAME: move_from_ready_state                                        *
     650              ;*                                                                             *
     651              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,AC3,AC3,T1,AR0,XAR0,AR1,AR2, *
     652              ;*                        XAR2,AR3,XAR3,AR4,SP,BRC0,CARRY,TC1,M40,SATA,SATD,   *
     653              ;*                        RDM,FRCT,SMUL                                        *
     654              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
     655              ;*   Total Frame Size   : 1 word                                               *
     656              ;*                        (1 return address/alignment)                         *
     657              ;*   Min System Stack   : 1 word                                               *
     658              ;*******************************************************************************
     659 0001e9       _move_from_ready_state:
     660 0001e9 9080          MOV XAR0, AC0
     661 0001eb 900B          MOV AC0, XAR3
     662 0001ed A96D          MOV *AR3(#22), AR1 ; |179| 
         0001ef 0016 
     663 0001f1 ED61          MOV dbl(*AR3), XAR3
         0001f3 BF   
     664 0001f4 1A00          OR #0, AC0, AC2
         0001f6 20   
     665 0001f7 90B1          MOV XAR3, AC1
     666 0001f9 1A00          OR #0, AC1, AC3
         0001fb 31   
     667 0001fc 1230          CMPU AC3 == AC2, TC1 ; |63| 
         0001fe 24   
     668 0001ff 0464          BCC $C$L11,TC1 ; |63| 
         000201 13   
     669                                                      ; branchcc occurs ; |63| 
     670 000202 900B          MOV AC0, XAR3
     671 000204 ED75          MOV dbl(*AR3(short(#2))), XAR3
         000206 BF   
     672 000207 EB61          MOV AC1, dbl(*AR3)
         000209 18   
     673 00020a 900B          MOV AC0, XAR3
     674 00020c ED75          MOV dbl(*AR3(short(#2))), XAR2
         00020e AF   
     675 00020f ED61          MOV dbl(*AR3), XAR3
         000211 BF   
     676 000212 EB75          MOV XAR2, dbl(*AR3(short(#2)))
         000214 A5   
     677 000215       $C$L11:    
     678 000215 EC31          AMOV #_ready_queue, XAR3 ; |110| 
         000217 BE00 
         000219 0074-
     679 00021b 2292          MOV AR1, AC2
     680 00021d 90B1          MOV XAR3, AC1
     681 00021f 10A5          SFTS AC2, #2, AC2 ; |110| 
         000221 02   
     682 000222 4022          ADD #2, AC2 ; |110| 
     683 000224 2421          ADD AC2, AC1 ; |110| 
     684 000226 901A          MOV AC1, XAR2
     685 000228 ED41          MOV dbl(*AR2), XAR2
         00022a AF   
     686 00022b 90A2          MOV XAR2, AC2
     687 00022d 122C          CMPU AC2 != AC1, TC1 ; |110| 
         00022f 14   
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   16

     688 000230 0464          BCC $C$L18,TC1 ; |110| 
         000232 78   
     689                                                      ; branchcc occurs ; |110| 
     690 000233 2291          MOV AR1, AC1
     691 000235 1055          SFTS AC1, #-4, AC1 ; |56| 
         000237 3C   
     692              
     693 000238 7B00          ADD #48, AC1, AC2 ; |56| 
         00023a 3021 
     694 00023c 231C  ||      MOV AC1, AR4 ; |56| 
     695              
     696 00023e 90B1          MOV XAR3, AC1
     697 000240 2421          ADD AC2, AC1 ; |56| 
     698 000242 901A          MOV AC1, XAR2
     699 000244 180F          AND #0x000f, AR1, T1 ; |56| 
         000246 59   
     700 000247 3C11          MOV #1, AC1
     701 000249 5C55          SFTS AC1, T1, AC1 ; |56| 
     702 00024b 3615          NOT AC1, T1 ; |56| 
     703 00024d D941          AND *AR2, T1, AC1 ; |56| 
         00024f 15   
     704 000250 C141          MOV AC1, *AR2 ; |56| 
     705 000252 A531          MOV *(#_ready_queue), T1 ; |191| 
         000254 0000 
         000256 74-  
     706              
     707 000257 129C          CMP AR1 != T1, TC1 ; |191| 
         000259 50   
     708 00025a 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
     709              
     710 00025b 0464          BCC $C$L18,TC1 ; |191| 
         00025d 4D   
     711                                                      ; branchcc occurs ; |191| 
     712              
     713 00025e 7600          MOV #16, AR4 ; |196| 
         000260 10C8 
     714 000262 23C1  ||      MOV AR4, AC1 ; |196| 
     715              
     716 000264 1298          CMP AR1 >= AR4, TC1 ; |196| 
         000266 C0   
     717 000267 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
     718              
     719 000268 0464          BCC $C$L17,TC1 ; |196| 
         00026a 3A   
     720                                                      ; branchcc occurs ; |196| 
     721 00026b 3419          NEG AC1, AR1
     722 00026d 529E          MOV AR1, BRC0
     723                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queue.h",line 196,column 0,is
     724 ****** PORT          RPTB $C$L13-1
     724 00026f 0E00          RPTB $C$L13-1; port of RPTB $C$L13-1
         000271 04   
     725                                                          ; loop starts
     726 000272       $C$L12:    
     727 000272       $C$DW$L$_move_from_ready_state$7$B:
     728 000272 A941              MOV *AR2, AR1 ; |197| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   17

     729 000274 6319              BCC $C$L14,AR1 != #0 ; |197| 
     730                                                          ; branchcc occurs ; |197| 
     731 000276       $C$DW$L$_move_from_ready_state$7$E:
     732 000276       $C$DW$L$_move_from_ready_state$8$B:
     733                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queue.h",line 201,column 0,is
     734              
     735 000276 B443              AMAR *AR2+
     736 000278 4111  ||          ADD #1, AC1 ; |196| 
     724                                   ; port of RPTB $C$L13-1
     737              
     738                                                      ; loop ends ; |196| 
     739 00027a       $C$DW$L$_move_from_ready_state$8$E:
     740 00027a       $C$L13:    
     741 00027a 4A29          B $C$L17  ; |196| 
     742                                                      ; branch occurs ; |196| 
     743 00027c       $C$L14:    
     744 00027c EC00          BTST @#0, AR1, TC1 ; |72| 
         00027e 98   
     745 00027f 3C02          MOV #0, AC2
     746 000281 6564          BCC $C$L16,TC1 ; |72| 
     747                                                      ; branchcc occurs ; |72| 
     748 000283       $C$L15:    
     749 000283       $C$DW$L$_move_from_ready_state$11$B:
     750                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queue.h",line 72,column 0,is_
     751 000283 4012          ADD #1, AC2 ; |74| 
     752 000285 5091          SFTL AR1, #-1 ; |72| 
     753 000287 EC00          BTST @#0, AR1, TC1 ; |72| 
         000289 98   
     754                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queue.h",line 75,column 0,is_
     755 00028a 0474          BCC $C$L15,!TC1 ; |72| 
         00028c F6   
     756                                                      ; branchcc occurs ; |72| 
     757 00028d       $C$DW$L$_move_from_ready_state$11$E:
     758 00028d       $C$L16:    
     759 00028d ED31          MOV dbl(*(#_schedtsk)), XAR2
         00028f AF00 
         000291 000E-
     760 000293 1093          ADD AC1 << #4, AC2 ; |198| 
         000295 04   
     761 000296 90A1          MOV XAR2, AC1
     762 000298 1210          CMPU AC1 == AC0, TC1 ; |129| 
         00029a 04   
     763 00029b C231          MOV AC2, *(#_ready_queue) ; |198| 
         00029d 0000 
         00029f 74-  
     764 0002a0 0464          BCC $C$L19,TC1 ; |129| 
         0002a2 16   
     765                                                      ; branchcc occurs ; |129| 
     766 0002a3 4A2D          B $C$L20  ; |129| 
     767                                                      ; branch occurs ; |129| 
     768 0002a5       $C$L17:    
     769 0002a5 E631          MOV #11, *(#_ready_queue) ; |205| 
         0002a7 0B00 
         0002a9 0074-
     770 0002ab       $C$L18:    
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   18

     771 0002ab ED31          MOV dbl(*(#_schedtsk)), XAR2
         0002ad AF00 
         0002af 000E-
     772 0002b1 90A1          MOV XAR2, AC1
     773 0002b3 121C          CMPU AC1 != AC0, TC1 ; |129| 
         0002b5 04   
     774 0002b6 0464          BCC $C$L20,TC1 ; |129| 
         0002b8 19   
     775                                                      ; branchcc occurs ; |129| 
     776 0002b9       $C$L19:    
     777 0002b9 A031          MOV *(#_ready_queue), AC0 ; |110| 
         0002bb 0000 
         0002bd 74-  
     778 0002be 1045          SFTS AC0, #2, AC1 ; |110| 
         0002c0 02   
     779 0002c1 90B0          MOV XAR3, AC0
     780 0002c3 4021          ADD #2, AC1 ; |110| 
     781 0002c5 2410          ADD AC1, AC0 ; |110| 
     782 0002c7 900B          MOV AC0, XAR3
     783 0002c9 ED61          MOV dbl(*AR3), XAR3
         0002cb BF   
     784 0002cc EB31          MOV XAR3, dbl(*(#_schedtsk))
         0002ce B500 
         0002d0 000E-
     785 0002d2       $C$L20:    
     786                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 131,column 1,is_stmt
     787              $C$DW$50        .dwtag  DW_TAG_TI_branch
     788                      .dwattr $C$DW$50, DW_AT_low_pc(0x00)
     789                      .dwattr $C$DW$50, DW_AT_TI_return
     790 0002d2 4804          RET
     791                                                      ; return occurs
     792              
     793              $C$DW$51        .dwtag  DW_TAG_TI_loop
     794                      .dwattr $C$DW$51, DW_AT_name("/tmp/129924KNrf8:$C$L15:1:1739870196")
     795                      .dwattr $C$DW$51, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queu
     796                      .dwattr $C$DW$51, DW_AT_TI_begin_line(0x48)
     797                      .dwattr $C$DW$51, DW_AT_TI_end_line(0x4b)
     798              $C$DW$52        .dwtag  DW_TAG_TI_loop_range
     799                      .dwattr $C$DW$52, DW_AT_low_pc($C$DW$L$_move_from_ready_state$11$B)
     800                      .dwattr $C$DW$52, DW_AT_high_pc($C$DW$L$_move_from_ready_state$11$E)
     801                      .dwendtag $C$DW$51
     802              
     803              
     804              $C$DW$53        .dwtag  DW_TAG_TI_loop
     805                      .dwattr $C$DW$53, DW_AT_name("/tmp/129924KNrf8:$C$L12:1:1739870196")
     806                      .dwattr $C$DW$53, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queu
     807                      .dwattr $C$DW$53, DW_AT_TI_begin_line(0xc4)
     808                      .dwattr $C$DW$53, DW_AT_TI_end_line(0xc9)
     809              $C$DW$54        .dwtag  DW_TAG_TI_loop_range
     810                      .dwattr $C$DW$54, DW_AT_low_pc($C$DW$L$_move_from_ready_state$7$B)
     811                      .dwattr $C$DW$54, DW_AT_high_pc($C$DW$L$_move_from_ready_state$7$E)
     812              $C$DW$55        .dwtag  DW_TAG_TI_loop_range
     813                      .dwattr $C$DW$55, DW_AT_low_pc($C$DW$L$_move_from_ready_state$8$B)
     814                      .dwattr $C$DW$55, DW_AT_high_pc($C$DW$L$_move_from_ready_state$8$E)
     815                      .dwendtag $C$DW$53
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   19

     816              
     817                      .dwattr $C$DW$48, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
     818                      .dwattr $C$DW$48, DW_AT_TI_end_line(0x83)
     819                      .dwattr $C$DW$48, DW_AT_TI_end_column(0x01)
     820                      .dwendtag $C$DW$48
     821              
     822 0002d4               .sect   ".text"
     823                      .global _timer_insert
     824              
     825              $C$DW$56        .dwtag  DW_TAG_subprogram, DW_AT_name("timer_insert")
     826                      .dwattr $C$DW$56, DW_AT_low_pc(_timer_insert)
     827                      .dwattr $C$DW$56, DW_AT_high_pc(0x00)
     828                      .dwattr $C$DW$56, DW_AT_TI_symbol_name("_timer_insert")
     829                      .dwattr $C$DW$56, DW_AT_external
     830                      .dwattr $C$DW$56, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c")
     831                      .dwattr $C$DW$56, DW_AT_TI_begin_line(0x26)
     832                      .dwattr $C$DW$56, DW_AT_TI_begin_column(0x06)
     833                      .dwattr $C$DW$56, DW_AT_TI_max_frame_size(0x01)
     834                      .dwattr $C$DW$56, DW_AT_frame_base[DW_OP_bregx 0x24 1]
     835                      .dwattr $C$DW$56, DW_AT_TI_skeletal
     836                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c",line 39,column 1,is_stmt,a
     837              $C$DW$57        .dwtag  DW_TAG_formal_parameter, DW_AT_name("event")
     838                      .dwattr $C$DW$57, DW_AT_TI_symbol_name("_event")
     839                      .dwattr $C$DW$57, DW_AT_type(*$C$DW$T$101)
     840                      .dwattr $C$DW$57, DW_AT_location[DW_OP_reg17]
     841              $C$DW$58        .dwtag  DW_TAG_formal_parameter, DW_AT_name("tmout")
     842                      .dwattr $C$DW$58, DW_AT_TI_symbol_name("_tmout")
     843                      .dwattr $C$DW$58, DW_AT_type(*$C$DW$T$120)
     844                      .dwattr $C$DW$58, DW_AT_location[DW_OP_reg12]
     845              $C$DW$59        .dwtag  DW_TAG_formal_parameter, DW_AT_name("callback")
     846                      .dwattr $C$DW$59, DW_AT_TI_symbol_name("_callback")
     847                      .dwattr $C$DW$59, DW_AT_type(*$C$DW$T$72)
     848                      .dwattr $C$DW$59, DW_AT_location[DW_OP_reg1]
     849              $C$DW$60        .dwtag  DW_TAG_formal_parameter, DW_AT_name("arg")
     850                      .dwattr $C$DW$60, DW_AT_TI_symbol_name("_arg")
     851                      .dwattr $C$DW$60, DW_AT_type(*$C$DW$T$19)
     852                      .dwattr $C$DW$60, DW_AT_location[DW_OP_reg19]
     853              ;*******************************************************************************
     854              ;* FUNCTION NAME: timer_insert                                                 *
     855              ;*                                                                             *
     856              ;*   Function Uses Regs : AC0,AC0,T0,AR0,XAR0,AR1,XAR1,AR3,XAR3,SP,TC1,M40,    *
     857              ;*                        SATA,SATD,RDM,FRCT,SMUL                              *
     858              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
     859              ;*   Total Frame Size   : 1 word                                               *
     860              ;*                        (1 return address/alignment)                         *
     861              ;*   Min System Stack   : 1 word                                               *
     862              ;*******************************************************************************
     863 0002d4       _timer_insert:
     864 0002d4 EB0D          MOV XAR1, dbl(*AR0(#8))
         0002d6 9500 
         0002d8 08   
     865 0002d9 3E19          MOV #-1, AR1
     866              
     867 0002db 1240          CMP T0 == AR1, TC1 ; |43| 
         0002dd 90   
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   20

     868 0002de 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
     869              
     870 0002df EB1D          MOV AC0, dbl(*AR0(short(#6))) ; |40| 
         0002e1 08   
     871 0002e2 0464          BCC $C$L21,TC1 ; |43| 
         0002e4 28   
     872                                                      ; branchcc occurs ; |43| 
     873 0002e5 ED31          MOV dbl(*(#(_timer_queue+2))), XAR3
         0002e7 BF00 
         0002e9 00A8-
     874 0002eb EB15          MOV XAR3, dbl(*AR0(short(#2)))
         0002ed B5   
     875 0002ee 20            NOP       ;                     avoids Silicon Exception CPU_7
     876 0002ef 20            NOP       ;                     avoids Silicon Exception CPU_7
     877 0002f0 20            NOP       ;                     avoids Silicon Exception CPU_7
     878 0002f1 EC31          AMOV #_timer_queue, XAR3 ; |48| 
         0002f3 BE00 
         0002f5 00A6-
     879 0002f7 EB01          MOV XAR3, dbl(*AR0)
         0002f9 B5   
     880 0002fa ED31          MOV dbl(*(#(_timer_queue+2))), XAR3
         0002fc BF00 
         0002fe 00A8-
     881 000300 C419          MOV T0, *AR0(short(#4)) ; |49| 
     882 000302 EB31          MOV XAR0, dbl(*(#(_timer_queue+2)))
         000304 8500 
         000306 00A8-
     883 000308 EB61          MOV XAR0, dbl(*AR3)
         00030a 85   
     884 00030b 4A06          B $C$L22  ; |51| 
     885                                                      ; branch occurs ; |51| 
     886 00030d       $C$L21:    
     887 00030d EB01          MOV XAR0, dbl(*AR0)
         00030f 85   
     888 000310 EB15          MOV XAR0, dbl(*AR0(short(#2)))
         000312 85   
     889 000313       $C$L22:    
     890                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c",line 52,column 1,is_stmt
     891              $C$DW$61        .dwtag  DW_TAG_TI_branch
     892                      .dwattr $C$DW$61, DW_AT_low_pc(0x00)
     893                      .dwattr $C$DW$61, DW_AT_TI_return
     894 000313 4804          RET
     895                                                      ; return occurs
     896                      .dwattr $C$DW$56, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c")
     897                      .dwattr $C$DW$56, DW_AT_TI_end_line(0x34)
     898                      .dwattr $C$DW$56, DW_AT_TI_end_column(0x01)
     899                      .dwendtag $C$DW$56
     900              
     901 000315               .sect   ".text"
     902                      .global _make_wait
     903              
     904              $C$DW$62        .dwtag  DW_TAG_subprogram, DW_AT_name("make_wait")
     905                      .dwattr $C$DW$62, DW_AT_low_pc(_make_wait)
     906                      .dwattr $C$DW$62, DW_AT_high_pc(0x00)
     907                      .dwattr $C$DW$62, DW_AT_TI_symbol_name("_make_wait")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   21

     908                      .dwattr $C$DW$62, DW_AT_external
     909                      .dwattr $C$DW$62, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
     910                      .dwattr $C$DW$62, DW_AT_TI_begin_line(0x2a)
     911                      .dwattr $C$DW$62, DW_AT_TI_begin_column(0x06)
     912                      .dwattr $C$DW$62, DW_AT_TI_max_frame_size(0x02)
     913                      .dwattr $C$DW$62, DW_AT_frame_base[DW_OP_bregx 0x24 2]
     914                      .dwattr $C$DW$62, DW_AT_TI_skeletal
     915                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 43,column 1,is_stmt,ad
     916              $C$DW$63        .dwtag  DW_TAG_formal_parameter, DW_AT_name("tmout")
     917                      .dwattr $C$DW$63, DW_AT_TI_symbol_name("_tmout")
     918                      .dwattr $C$DW$63, DW_AT_type(*$C$DW$T$120)
     919                      .dwattr $C$DW$63, DW_AT_location[DW_OP_reg12]
     920              ;*******************************************************************************
     921              ;* FUNCTION NAME: make_wait                                                    *
     922              ;*                                                                             *
     923              ;*   Function Uses Regs : AC0,AC0,T0,AR0,XAR0,AR1,XAR1,AR2,AR3,XAR3,SP,CARRY,  *
     924              ;*                        TC1,M40,SATA,SATD,RDM,FRCT,SMUL                      *
     925              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
     926              ;*   Total Frame Size   : 2 words                                              *
     927              ;*                        (2 return address/alignment)                         *
     928              ;*   Min System Stack   : 1 word                                               *
     929              ;*******************************************************************************
     930 000315       _make_wait:
     931 000315 ED31          MOV dbl(*(#_runtsk)), XAR3
         000317 BF00 
         000319 000C-
     932 00031b 4EFF          AADD #-1, SP
     933 00031d A96D          MOV *AR3(#24), AR1 ; |44| 
         00031f 0018 
     934 000321 7C00          SUB #1, AR1, AR2 ; |44| 
         000323 01A9 
     935 000325 3C1B          MOV #1, AR3
     936              
     937 000327 12B8          CMPU AR2 <= AR3, TC1 ; |44| 
         000329 A4   
     938 00032a 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
     939              
     940 00032b 0464          BCC $C$L23,TC1 ; |44| 
         00032d 15   
     941                                                      ; branchcc occurs ; |44| 
     942 00032e 3C8A          MOV #8, AR2
     943              
     944 000330 1290          CMPU AR1 == AR2, TC1 ; |44| 
         000332 A4   
     945 000333 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
     946              
     947 000334 ED31          MOV dbl(*(#_runtsk)), XAR3
         000336 BF00 
         000338 000C-
     948 00033a 9664          XCC TC1
     949 00033c E66D             MOV #12, *AR3(#24) ; |51| 
         00033e 0C00 
         000340 18   
     950 000341 4A14          B $C$L24  ; |52| 
     951                                                      ; branch occurs ; |52| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   22

     952 000343       $C$L23:    
     953 000343 ED31          MOV dbl(*(#_runtsk)), XAR0
         000345 8F00 
         000347 000C-
     954              $C$DW$64        .dwtag  DW_TAG_TI_branch
     955                      .dwattr $C$DW$64, DW_AT_low_pc(0x00)
     956                      .dwattr $C$DW$64, DW_AT_name("_move_from_ready_state")
     957                      .dwattr $C$DW$64, DW_AT_TI_call
     958 000349 08FE          CALL #_move_from_ready_state ; |47| 
         00034b 9D   
     959                                                      ; call occurs [#_move_from_ready_state] ; |47| 
     960 00034c ED31          MOV dbl(*(#_runtsk)), XAR3
         00034e BF00 
         000350 000C-
     961 000352 E66D          MOV #4, *AR3(#24) ; |48| 
         000354 0400 
         000356 18   
     962 000357       $C$L24:    
     963 000357 ED31          MOV dbl(*(#_runtsk)), XAR0
         000359 8F00 
         00035b 000C-
     964 00035d 7A00          MOV #(_wait_release_tmout >> 16) << #16, AC0 ; |54| 
         00035f 000A%
     965 000361 ED31          MOV dbl(*(#_runtsk)), XAR1
         000363 9F00 
         000365 000C-
     966 000367 7E00          OR #(_wait_release_tmout & 0xffff), AC0, AC0 ; |54| 
         000369 0000%
     967 00036b 1426          AADD #38, AR0 ; |54| 
         00036d 84   
     968              $C$DW$65        .dwtag  DW_TAG_TI_branch
     969                      .dwattr $C$DW$65, DW_AT_low_pc(0x00)
     970                      .dwattr $C$DW$65, DW_AT_name("_timer_insert")
     971                      .dwattr $C$DW$65, DW_AT_TI_call
     972 00036e 08FF          CALL #_timer_insert ; |54| 
         000370 63   
     973                                                      ; call occurs [#_timer_insert] ; |54| 
     974 000371 4E01          AADD #1, SP
     975                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 56,column 1,is_stmt
     976              $C$DW$66        .dwtag  DW_TAG_TI_branch
     977                      .dwattr $C$DW$66, DW_AT_low_pc(0x00)
     978                      .dwattr $C$DW$66, DW_AT_TI_return
     979 000373 4804          RET
     980                                                      ; return occurs
     981                      .dwattr $C$DW$62, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
     982                      .dwattr $C$DW$62, DW_AT_TI_end_line(0x38)
     983                      .dwattr $C$DW$62, DW_AT_TI_end_column(0x01)
     984                      .dwendtag $C$DW$62
     985              
     986 000375               .sect   ".text"
     987                      .global _gcb_make_wait
     988              
     989              $C$DW$67        .dwtag  DW_TAG_subprogram, DW_AT_name("gcb_make_wait")
     990                      .dwattr $C$DW$67, DW_AT_low_pc(_gcb_make_wait)
     991                      .dwattr $C$DW$67, DW_AT_high_pc(0x00)
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   23

     992                      .dwattr $C$DW$67, DW_AT_TI_symbol_name("_gcb_make_wait")
     993                      .dwattr $C$DW$67, DW_AT_external
     994                      .dwattr $C$DW$67, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
     995                      .dwattr $C$DW$67, DW_AT_TI_begin_line(0x56)
     996                      .dwattr $C$DW$67, DW_AT_TI_begin_column(0x06)
     997                      .dwattr $C$DW$67, DW_AT_TI_max_frame_size(0x02)
     998                      .dwattr $C$DW$67, DW_AT_frame_base[DW_OP_bregx 0x24 2]
     999                      .dwattr $C$DW$67, DW_AT_TI_skeletal
    1000                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 87,column 1,is_stmt,ad
    1001              $C$DW$68        .dwtag  DW_TAG_formal_parameter, DW_AT_name("gcb")
    1002                      .dwattr $C$DW$68, DW_AT_TI_symbol_name("_gcb")
    1003                      .dwattr $C$DW$68, DW_AT_type(*$C$DW$T$63)
    1004                      .dwattr $C$DW$68, DW_AT_location[DW_OP_reg17]
    1005              $C$DW$69        .dwtag  DW_TAG_formal_parameter, DW_AT_name("tmout")
    1006                      .dwattr $C$DW$69, DW_AT_TI_symbol_name("_tmout")
    1007                      .dwattr $C$DW$69, DW_AT_type(*$C$DW$T$120)
    1008                      .dwattr $C$DW$69, DW_AT_location[DW_OP_reg12]
    1009              ;*******************************************************************************
    1010              ;* FUNCTION NAME: gcb_make_wait                                                *
    1011              ;*                                                                             *
    1012              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,AC3,AC3,T0,AR0,XAR0,AR1,XAR1,*
    1013              ;*                        AR2,XAR2,AR3,XAR3,AR5,XAR5,SP,TC1,M40,SATA,SATD,RDM, *
    1014              ;*                        FRCT,SMUL                                            *
    1015              ;*   Save On Entry Regs : AR5                                                  *
    1016              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    1017              ;*   Total Frame Size   : 2 words                                              *
    1018              ;*                        (1 return address/alignment)                         *
    1019              ;*                        (1 register save area)                               *
    1020              ;*   Min System Stack   : 2 words                                              *
    1021              ;*******************************************************************************
    1022 000375       _gcb_make_wait:
    1023 000375 50D5          PSHBOTH XAR5
    1024 000377 20            NOP       ;                     avoids Silicon Exception CPU_7
    1025 000378 20            NOP       ;                     avoids Silicon Exception CPU_7
    1026 000379 ED31          MOV dbl(*(#_runtsk)), XAR3
         00037b BF00 
         00037d 000C-
    1027 00037f EC01          AMAR *AR0, XAR5
         000381 DE   
    1028 000382 EB6D          MOV XAR5, dbl(*AR3(#26))
         000384 D500 
         000386 1A   
    1029              $C$DW$70        .dwtag  DW_TAG_TI_branch
    1030                      .dwattr $C$DW$70, DW_AT_low_pc(0x00)
    1031                      .dwattr $C$DW$70, DW_AT_name("_make_wait")
    1032                      .dwattr $C$DW$70, DW_AT_TI_call
    1033 000387 08FF          CALL #_make_wait ; |89| 
         000389 8B   
    1034                                                      ; call occurs [#_make_wait] ; |89| 
    1035 00038a DCAD          BTST #0, *AR5(#8), TC1 ; |90| 
         00038c 0000 
         00038e 08   
    1036 00038f 0474          BCC $C$L27,!TC1 ; |90| 
         000391 56   
    1037                                                      ; branchcc occurs ; |90| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   24

    1038 000392 90D3          MOV XAR5, AC3
    1039 000394 903A          MOV AC3, XAR2
    1040 000396 ED31          MOV dbl(*(#_runtsk)), XAR3
         000398 BF00 
         00039a 000C-
    1041 00039c ED41          MOV dbl(*AR2), XAR2
         00039e AF   
    1042 00039f 1A00          OR #0, AC3, AC1
         0003a1 13   
    1043 0003a2 90A0          MOV XAR2, AC0
    1044 0003a4 1A00          OR #0, AC0, AC2
         0003a6 20   
    1045 0003a7 1220          CMPU AC2 == AC1, TC1 ; |78| 
         0003a9 14   
    1046 0003aa A96D          MOV *AR3(#22), AR1 ; |95| 
         0003ac 0016 
    1047 0003ae 0464          BCC $C$L26,TC1 ; |78| 
         0003b0 1B   
    1048                                                      ; branchcc occurs ; |78| 
    1049 0003b1       $C$L25:    
    1050 0003b1       $C$DW$L$_gcb_make_wait$3$B:
    1051                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.h",line 78,column 0,is_stmt
    1052 0003b1 AA4D          MOV *AR2(#22), AR2 ; |80| 
         0003b3 0016 
    1053              
    1054 0003b5 1294          CMP AR2 > AR1, TC1 ; |80| 
         0003b7 A0   
    1055 0003b8 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    1056              
    1057 0003b9 0464          BCC $C$L26,TC1 ; |80| 
         0003bb 10   
    1058                                                      ; branchcc occurs ; |80| 
    1059 0003bc       $C$DW$L$_gcb_make_wait$3$E:
    1060 0003bc       $C$DW$L$_gcb_make_wait$4$B:
    1061 0003bc 900A          MOV AC0, XAR2
    1062 0003be ED41          MOV dbl(*AR2), XAR2
         0003c0 AF   
    1063 0003c1 90A0          MOV XAR2, AC0
    1064 0003c3 1A00          OR #0, AC0, AC2
         0003c5 20   
    1065 0003c6 122C          CMPU AC2 != AC1, TC1 ; |78| 
         0003c8 14   
    1066                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.h",line 82,column 0,is_stmt
    1067 0003c9 0464          BCC $C$L25,TC1 ; |78| 
         0003cb E5   
    1068                                                      ; branchcc occurs ; |78| 
    1069 0003cc       $C$DW$L$_gcb_make_wait$4$E:
    1070 0003cc       $C$L26:    
    1071 0003cc 900A          MOV AC0, XAR2
    1072 0003ce ED55          MOV dbl(*AR2(short(#2))), XAR2
         0003d0 AF   
    1073 0003d1 EB75          MOV XAR2, dbl(*AR3(short(#2)))
         0003d3 A5   
    1074 0003d4 900A          MOV AC0, XAR2
    1075 0003d6 9009          MOV AC0, XAR1
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   25

    1076 0003d8 EB61          MOV XAR1, dbl(*AR3)
         0003da 95   
    1077 0003db ED55          MOV dbl(*AR2(short(#2))), XAR2
         0003dd AF   
    1078 0003de EB41          MOV XAR3, dbl(*AR2)
         0003e0 B5   
    1079 0003e1 900A          MOV AC0, XAR2
    1080 0003e3 EB55          MOV XAR3, dbl(*AR2(short(#2)))
         0003e5 B5   
    1081 0003e6 4A18          B $C$L28  ; |51| 
    1082                                                      ; branch occurs ; |51| 
    1083 0003e8       $C$L27:    
    1084 0003e8 ED31          MOV dbl(*(#_runtsk)), XAR3
         0003ea BF00 
         0003ec 000C-
    1085 0003ee EDB5          MOV dbl(*AR5(short(#2))), XAR2
         0003f0 AF   
    1086 0003f1 EB75          MOV XAR2, dbl(*AR3(short(#2)))
         0003f3 A5   
    1087 0003f4 EB61          MOV XAR5, dbl(*AR3)
         0003f6 D5   
    1088 0003f7 EDB5          MOV dbl(*AR5(short(#2))), XAR2
         0003f9 AF   
    1089 0003fa EB41          MOV XAR3, dbl(*AR2)
         0003fc B5   
    1090 0003fd EBB5          MOV XAR3, dbl(*AR5(short(#2)))
         0003ff B5   
    1091 000400       $C$L28:    
    1092 000400 50D4          POPBOTH XAR5
    1093                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 98,column 1,is_stmt
    1094              $C$DW$71        .dwtag  DW_TAG_TI_branch
    1095                      .dwattr $C$DW$71, DW_AT_low_pc(0x00)
    1096                      .dwattr $C$DW$71, DW_AT_TI_return
    1097 000402 4804          RET
    1098                                                      ; return occurs
    1099              
    1100              $C$DW$72        .dwtag  DW_TAG_TI_loop
    1101                      .dwattr $C$DW$72, DW_AT_name("/tmp/129924KNrf8:$C$L25:1:1739870196")
    1102                      .dwattr $C$DW$72, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.h")
    1103                      .dwattr $C$DW$72, DW_AT_TI_begin_line(0x4e)
    1104                      .dwattr $C$DW$72, DW_AT_TI_end_line(0x52)
    1105              $C$DW$73        .dwtag  DW_TAG_TI_loop_range
    1106                      .dwattr $C$DW$73, DW_AT_low_pc($C$DW$L$_gcb_make_wait$3$B)
    1107                      .dwattr $C$DW$73, DW_AT_high_pc($C$DW$L$_gcb_make_wait$3$E)
    1108              $C$DW$74        .dwtag  DW_TAG_TI_loop_range
    1109                      .dwattr $C$DW$74, DW_AT_low_pc($C$DW$L$_gcb_make_wait$4$B)
    1110                      .dwattr $C$DW$74, DW_AT_high_pc($C$DW$L$_gcb_make_wait$4$E)
    1111                      .dwendtag $C$DW$72
    1112              
    1113                      .dwattr $C$DW$67, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
    1114                      .dwattr $C$DW$67, DW_AT_TI_end_line(0x62)
    1115                      .dwattr $C$DW$67, DW_AT_TI_end_column(0x01)
    1116                      .dwendtag $C$DW$67
    1117              
    1118 000404               .sect   ".text"
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   26

    1119              
    1120              $C$DW$75        .dwtag  DW_TAG_subprogram, DW_AT_name("__wai_flg")
    1121                      .dwattr $C$DW$75, DW_AT_low_pc(___wai_flg)
    1122                      .dwattr $C$DW$75, DW_AT_high_pc(0x00)
    1123                      .dwattr $C$DW$75, DW_AT_TI_symbol_name("___wai_flg")
    1124                      .dwattr $C$DW$75, DW_AT_type(*$C$DW$T$65)
    1125                      .dwattr $C$DW$75, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags
    1126                      .dwattr $C$DW$75, DW_AT_TI_begin_line(0xac)
    1127                      .dwattr $C$DW$75, DW_AT_TI_begin_column(0x0b)
    1128                      .dwattr $C$DW$75, DW_AT_TI_max_frame_size(0x04)
    1129                      .dwattr $C$DW$75, DW_AT_frame_base[DW_OP_bregx 0x24 4]
    1130                      .dwattr $C$DW$75, DW_AT_TI_skeletal
    1131                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 174,column 1,is_
    1132              $C$DW$76        .dwtag  DW_TAG_formal_parameter, DW_AT_name("flgid")
    1133                      .dwattr $C$DW$76, DW_AT_TI_symbol_name("_flgid")
    1134                      .dwattr $C$DW$76, DW_AT_type(*$C$DW$T$38)
    1135                      .dwattr $C$DW$76, DW_AT_location[DW_OP_reg12]
    1136              $C$DW$77        .dwtag  DW_TAG_formal_parameter, DW_AT_name("waiptn")
    1137                      .dwattr $C$DW$77, DW_AT_TI_symbol_name("_waiptn")
    1138                      .dwattr $C$DW$77, DW_AT_type(*$C$DW$T$22)
    1139                      .dwattr $C$DW$77, DW_AT_location[DW_OP_reg13]
    1140              $C$DW$78        .dwtag  DW_TAG_formal_parameter, DW_AT_name("wfmode")
    1141                      .dwattr $C$DW$78, DW_AT_TI_symbol_name("_wfmode")
    1142                      .dwattr $C$DW$78, DW_AT_type(*$C$DW$T$23)
    1143                      .dwattr $C$DW$78, DW_AT_location[DW_OP_reg16]
    1144              $C$DW$79        .dwtag  DW_TAG_formal_parameter, DW_AT_name("p_flgptn")
    1145                      .dwattr $C$DW$79, DW_AT_TI_symbol_name("_p_flgptn")
    1146                      .dwattr $C$DW$79, DW_AT_type(*$C$DW$T$24)
    1147                      .dwattr $C$DW$79, DW_AT_location[DW_OP_reg19]
    1148              $C$DW$80        .dwtag  DW_TAG_formal_parameter, DW_AT_name("tmout")
    1149                      .dwattr $C$DW$80, DW_AT_TI_symbol_name("_tmout")
    1150                      .dwattr $C$DW$80, DW_AT_type(*$C$DW$T$120)
    1151                      .dwattr $C$DW$80, DW_AT_location[DW_OP_reg20]
    1152              ;*******************************************************************************
    1153              ;* FUNCTION NAME: __wai_flg                                                    *
    1154              ;*                                                                             *
    1155              ;*   Function Uses Regs : T0,T1,T2,T3,AR0,XAR0,AR1,XAR1,AR2,AR3,XAR3,AR4,SP,   *
    1156              ;*                        TC1,M40,SATA,SATD,RDM,FRCT,SMUL                      *
    1157              ;*   Save On Entry Regs : T2,T3                                                *
    1158              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    1159              ;*   Total Frame Size   : 4 words                                              *
    1160              ;*                        (2 return address/alignment)                         *
    1161              ;*                        (2 register save area)                               *
    1162              ;*   Min System Stack   : 1 word                                               *
    1163              ;*******************************************************************************
    1164 000404       ___wai_flg:
    1165              
    1166 000404 228C          MOV AR0, AR4 ; |174| 
    1167 000406 3976  ||      PSH T3, T2
    1168              
    1169 000408 4EFF          AADD #-1, SP
    1170 00040a 6434          BCC $C$L29,T0 <= #0 ; |177| 
    1171                                                      ; branchcc occurs ; |177| 
    1172 00040c 3C2B          MOV #2, AR3
    1173              
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   27

    1174 00040e 1244          CMP T0 < AR3, TC1 ; |177| 
         000410 B0   
    1175 000411 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    1176              
    1177 000412 63E4          BCC $C$L30,TC1 ; |177| 
    1178                                                      ; branchcc occurs ; |177| 
    1179 000414       $C$L29:    
    1180 000414 76FF          MOV #-18, T0 ; |178| 
         000416 EE48 
    1181 000418 0600          B $C$L42  ; |178| 
         00041a BF   
    1182                                                      ; branch occurs ; |178| 
    1183 00041b       $C$L30:    
    1184 00041b 640C          BCC $C$L31,AR4 == #0 ; |180| 
    1185                                                      ; branchcc occurs ; |180| 
    1186 00041d 3C1B          MOV #1, AR3
    1187              
    1188 00041f 12CC          CMPU AR4 != AR3, TC1 ; |180| 
         000421 B4   
    1189 000422 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    1190              
    1191 000423 6164          BCC $C$L32,TC1 ; |180| 
    1192                                                      ; branchcc occurs ; |180| 
    1193 000425       $C$L31:    
    1194 000425 6395          BCC $C$L33,T1 != #0 ; |180| 
    1195                                                      ; branchcc occurs ; |180| 
    1196 000427       $C$L32:    
    1197 000427 76FF          MOV #-17, T0 ; |181| 
         000429 EF48 
    1198 00042b 0600          B $C$L42  ; |181| 
         00042d AC   
    1199                                                      ; branch occurs ; |181| 
    1200 00042e       $C$L33:    
    1201 00042e AB31          MOV *(#3), AR3 ; |183| 
         000430 0000 
         000432 03   
    1202 000433 7D08          AND #0x0800, AR3, T2 ; |183| 
         000435 006B 
    1203 000437 46B3       BSET ST1_INTM
    1204 000439 AB31          MOV *(#(_flgcb_table+9)), AR3 ; |185| 
         00043b 0000 
         00043d 09-  
    1205 00043e 041B          BCC $C$L34,AR3 != #0 ; |185| 
         000440 11   
    1206                                                      ; branchcc occurs ; |185| 
    1207 000441 ED31          MOV dbl(*(#_runtsk)), XAR3
         000443 BF00 
         000445 000C-
    1208 000447 E66D          MOV #-42, *AR3(#32) ; |186| 
         000449 D600 
         00044b 20   
    1209 00044c 0406          BCC $C$L40,T2 == #0 ; |209| 
         00044e 7F   
    1210                                                      ; branchcc occurs ; |209| 
    1211 00044f 0600          B $C$L41  ; |209| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   28

         000451 7E   
    1212                                                      ; branch occurs ; |209| 
    1213 000452       $C$L34:    
    1214 000452 EC00          BTST @#0, AR4, TC1 ; |56| 
         000454 C8   
    1215 000455 0464          BCC $C$L35,TC1 ; |56| 
         000457 17   
    1216                                                      ; branchcc occurs ; |56| 
    1217 000458 EC31          AMOV #_flgcb_table, XAR0 ; |59| 
         00045a 8E00 
         00045c 0000-
    1218 00045e 225B          MOV T1, AR3 ; |59| 
    1219 000460 A70D          MOV *AR0(#10), T3 ; |59| 
         000462 000A 
    1220 000464 287B          AND T3, AR3 ; |59| 
    1221              
    1222 000466 12BC          CMPU AR3 != T1, TC1 ; |59| 
         000468 54   
    1223 000469 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    1224              
    1225 00046a 0464          BCC $C$L36,TC1 ; |59| 
         00046c 13   
    1226                                                      ; branchcc occurs ; |59| 
    1227 00046d 4A3E          B $C$L37  ; |59| 
    1228                                                      ; branch occurs ; |59| 
    1229 00046f       $C$L35:    
    1230 00046f EC31          AMOV #_flgcb_table, XAR0 ; |57| 
         000471 8E00 
         000473 0000-
    1231 000475 225B          MOV T1, AR3 ; |57| 
    1232 000477 A70D          MOV *AR0(#10), T3 ; |57| 
         000479 000A 
    1233 00047b 287B          AND T3, AR3 ; |57| 
    1234 00047d 041B          BCC $C$L37,AR3 != #0 ; |57| 
         00047f 2D   
    1235                                                      ; branchcc occurs ; |57| 
    1236 000480       $C$L36:    
    1237 000480 ED31          MOV dbl(*(#_runtsk)), XAR3
         000482 BF00 
         000484 000C-
    1238 000486 E66D          MOV #-50, *AR3(#32) ; |198| 
         000488 CE00 
         00048a 20   
    1239 00048b 040A          BCC $C$L38,AR2 == #0 ; |199| 
         00048d 34   
    1240                                                      ; branchcc occurs ; |199| 
    1241 00048e ED31          MOV dbl(*(#_runtsk)), XAR3
         000490 BF00 
         000492 000C-
    1242 000494 22A4          MOV AR2, T0 ; |203| 
    1243 000496 C56D          MOV T1, *AR3(#28) ; |200| 
         000498 001C 
    1244 00049a CC6D          MOV AR4, *AR3(#29) ; |201| 
         00049c 001D 
    1245 00049e EB6D          MOV XAR1, dbl(*AR3(#30))
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   29

         0004a0 9500 
         0004a2 1E   
    1246              $C$DW$81        .dwtag  DW_TAG_TI_branch
    1247                      .dwattr $C$DW$81, DW_AT_low_pc(0x00)
    1248                      .dwattr $C$DW$81, DW_AT_name("_gcb_make_wait")
    1249                      .dwattr $C$DW$81, DW_AT_TI_call
    1250 0004a3 08FE          CALL #_gcb_make_wait ; |203| 
         0004a5 CF   
    1251                                                      ; call occurs [#_gcb_make_wait] ; |203| 
    1252 0004a6 951F     INTR #31
    1253 0004a8 0406          BCC $C$L40,T2 == #0 ; |209| 
         0004aa 23   
    1254                                                      ; branchcc occurs ; |209| 
    1255 0004ab 4A23          B $C$L41  ; |209| 
    1256                                                      ; branch occurs ; |209| 
    1257 0004ad       $C$L37:    
    1258 0004ad ED31          MOV dbl(*(#_runtsk)), XAR3
         0004af BF00 
         0004b1 000C-
    1259 0004b3 E66D          MOV #0, *AR3(#32) ; |194| 
         0004b5 0000 
         0004b7 20   
    1260 0004b8 C721          MOV T3, *AR1 ; |195| 
    1261 0004ba DC31          BTST #2, *(#(_flgcb_table+8)), TC1 ; |69| 
         0004bc 2000 
         0004be 0008-
    1262 0004c0 6264          BCC $C$L39,TC1 ; |69| 
    1263                                                      ; branchcc occurs ; |69| 
    1264 0004c2       $C$L38:    
    1265 0004c2 6506          BCC $C$L40,T2 == #0 ; |209| 
    1266                                                      ; branchcc occurs ; |209| 
    1267 0004c4 4A0A          B $C$L41  ; |209| 
    1268                                                      ; branch occurs ; |209| 
    1269 0004c6       $C$L39:    
    1270 0004c6 E631          MOV #0, *(#(_flgcb_table+10)) ; |70| 
         0004c8 0000 
         0004ca 000A-
    1271 0004cc 6116          BCC $C$L41,T2 != #0 ; |209| 
    1272                                                      ; branchcc occurs ; |209| 
    1273 0004ce       $C$L40:    
    1274 0004ce 46B2       BCLR ST1_INTM
    1275 0004d0       $C$L41:    
    1276 0004d0 ED31          MOV dbl(*(#_runtsk)), XAR3
         0004d2 BF00 
         0004d4 000C-
    1277 0004d6 A46D          MOV *AR3(#32), T0 ; |211| 
         0004d8 0020 
    1278 0004da       $C$L42:    
    1279 0004da 4E01          AADD #1, SP
    1280 0004dc 3A76          POP T3,T2
    1281                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 212,column 1,is_
    1282              $C$DW$82        .dwtag  DW_TAG_TI_branch
    1283                      .dwattr $C$DW$82, DW_AT_low_pc(0x00)
    1284                      .dwattr $C$DW$82, DW_AT_TI_return
    1285 0004de 4804          RET
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   30

    1286                                                      ; return occurs
    1287                      .dwattr $C$DW$75, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c
    1288                      .dwattr $C$DW$75, DW_AT_TI_end_line(0xd4)
    1289                      .dwattr $C$DW$75, DW_AT_TI_end_column(0x01)
    1290                      .dwendtag $C$DW$75
    1291              
    1292 0004e0               .sect   ".text"
    1293                      .global _wai_flg
    1294              
    1295              $C$DW$83        .dwtag  DW_TAG_subprogram, DW_AT_name("wai_flg")
    1296                      .dwattr $C$DW$83, DW_AT_low_pc(_wai_flg)
    1297                      .dwattr $C$DW$83, DW_AT_high_pc(0x00)
    1298                      .dwattr $C$DW$83, DW_AT_TI_symbol_name("_wai_flg")
    1299                      .dwattr $C$DW$83, DW_AT_external
    1300                      .dwattr $C$DW$83, DW_AT_type(*$C$DW$T$65)
    1301                      .dwattr $C$DW$83, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags
    1302                      .dwattr $C$DW$83, DW_AT_TI_begin_line(0xd6)
    1303                      .dwattr $C$DW$83, DW_AT_TI_begin_column(0x04)
    1304                      .dwattr $C$DW$83, DW_AT_TI_max_frame_size(0x02)
    1305                      .dwattr $C$DW$83, DW_AT_frame_base[DW_OP_bregx 0x24 2]
    1306                      .dwattr $C$DW$83, DW_AT_TI_skeletal
    1307                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 215,column 1,is_
    1308              $C$DW$84        .dwtag  DW_TAG_formal_parameter, DW_AT_name("flgid")
    1309                      .dwattr $C$DW$84, DW_AT_TI_symbol_name("_flgid")
    1310                      .dwattr $C$DW$84, DW_AT_type(*$C$DW$T$38)
    1311                      .dwattr $C$DW$84, DW_AT_location[DW_OP_reg12]
    1312              $C$DW$85        .dwtag  DW_TAG_formal_parameter, DW_AT_name("waiptn")
    1313                      .dwattr $C$DW$85, DW_AT_TI_symbol_name("_waiptn")
    1314                      .dwattr $C$DW$85, DW_AT_type(*$C$DW$T$22)
    1315                      .dwattr $C$DW$85, DW_AT_location[DW_OP_reg13]
    1316              $C$DW$86        .dwtag  DW_TAG_formal_parameter, DW_AT_name("wfmode")
    1317                      .dwattr $C$DW$86, DW_AT_TI_symbol_name("_wfmode")
    1318                      .dwattr $C$DW$86, DW_AT_type(*$C$DW$T$23)
    1319                      .dwattr $C$DW$86, DW_AT_location[DW_OP_reg16]
    1320              $C$DW$87        .dwtag  DW_TAG_formal_parameter, DW_AT_name("p_flgptn")
    1321                      .dwattr $C$DW$87, DW_AT_TI_symbol_name("_p_flgptn")
    1322                      .dwattr $C$DW$87, DW_AT_type(*$C$DW$T$24)
    1323                      .dwattr $C$DW$87, DW_AT_location[DW_OP_reg19]
    1324              ;*******************************************************************************
    1325              ;* FUNCTION NAME: wai_flg                                                      *
    1326              ;*                                                                             *
    1327              ;*   Function Uses Regs : T0,T1,AR0,AR1,AR2,SP,M40,SATA,SATD,RDM,FRCT,SMUL     *
    1328              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    1329              ;*   Total Frame Size   : 2 words                                              *
    1330              ;*                        (2 return address/alignment)                         *
    1331              ;*   Min System Stack   : 1 word                                               *
    1332              ;*******************************************************************************
    1333 0004e0       _wai_flg:
    1334 0004e0 4EFF          AADD #-1, SP
    1335 0004e2 3E1A          MOV #-1, AR2
    1336              $C$DW$88        .dwtag  DW_TAG_TI_branch
    1337                      .dwattr $C$DW$88, DW_AT_low_pc(0x00)
    1338                      .dwattr $C$DW$88, DW_AT_name("___wai_flg")
    1339                      .dwattr $C$DW$88, DW_AT_TI_call
    1340 0004e4 08FF          CALL #___wai_flg ; |216| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   31

         0004e6 1D   
    1341                                                      ; call occurs [#___wai_flg] ; |216| 
    1342 0004e7 4E01          AADD #1, SP
    1343                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 217,column 1,is_
    1344              $C$DW$89        .dwtag  DW_TAG_TI_branch
    1345                      .dwattr $C$DW$89, DW_AT_low_pc(0x00)
    1346                      .dwattr $C$DW$89, DW_AT_TI_return
    1347 0004e9 4804          RET
    1348                                                      ; return occurs
    1349                      .dwattr $C$DW$83, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c
    1350                      .dwattr $C$DW$83, DW_AT_TI_end_line(0xd9)
    1351                      .dwattr $C$DW$83, DW_AT_TI_end_column(0x01)
    1352                      .dwendtag $C$DW$83
    1353              
    1354 0004eb               .sect   ".text"
    1355                      .global _timer_shutdown
    1356              
    1357              $C$DW$90        .dwtag  DW_TAG_subprogram, DW_AT_name("timer_shutdown")
    1358                      .dwattr $C$DW$90, DW_AT_low_pc(_timer_shutdown)
    1359                      .dwattr $C$DW$90, DW_AT_high_pc(0x00)
    1360                      .dwattr $C$DW$90, DW_AT_TI_symbol_name("_timer_shutdown")
    1361                      .dwattr $C$DW$90, DW_AT_external
    1362                      .dwattr $C$DW$90, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c")
    1363                      .dwattr $C$DW$90, DW_AT_TI_begin_line(0x1c)
    1364                      .dwattr $C$DW$90, DW_AT_TI_begin_column(0x06)
    1365                      .dwattr $C$DW$90, DW_AT_TI_max_frame_size(0x02)
    1366                      .dwattr $C$DW$90, DW_AT_frame_base[DW_OP_bregx 0x24 2]
    1367                      .dwattr $C$DW$90, DW_AT_TI_skeletal
    1368                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c",line 29,column 1,is_stmt,a
    1369              ;*******************************************************************************
    1370              ;* FUNCTION NAME: timer_shutdown                                               *
    1371              ;*                                                                             *
    1372              ;*   Function Uses Regs : SP,M40,SATA,SATD,RDM,FRCT,SMUL                       *
    1373              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    1374              ;*   Total Frame Size   : 2 words                                              *
    1375              ;*                        (2 return address/alignment)                         *
    1376              ;*   Min System Stack   : 1 word                                               *
    1377              ;*******************************************************************************
    1378 0004eb       _timer_shutdown:
    1379 0004eb 4EFF          AADD #-1, SP
    1380              $C$DW$91        .dwtag  DW_TAG_TI_branch
    1381                      .dwattr $C$DW$91, DW_AT_low_pc(0x00)
    1382                      .dwattr $C$DW$91, DW_AT_name("_terminate_hw_timer")
    1383                      .dwattr $C$DW$91, DW_AT_TI_call
    1384 0004ed 6C00          CALL #_terminate_hw_timer ; |30| 
         0004ef 0000!
    1385                                                      ; call occurs [#_terminate_hw_timer] ; |30| 
    1386 0004f1 4E01          AADD #1, SP
    1387                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c",line 31,column 1,is_stmt
    1388              $C$DW$92        .dwtag  DW_TAG_TI_branch
    1389                      .dwattr $C$DW$92, DW_AT_low_pc(0x00)
    1390                      .dwattr $C$DW$92, DW_AT_TI_return
    1391 0004f3 4804          RET
    1392                                                      ; return occurs
    1393                      .dwattr $C$DW$90, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   32

    1394                      .dwattr $C$DW$90, DW_AT_TI_end_line(0x1f)
    1395                      .dwattr $C$DW$90, DW_AT_TI_end_column(0x01)
    1396                      .dwendtag $C$DW$90
    1397              
    1398 0004f5               .sect   ".text"
    1399                      .global _timer_initialize
    1400              
    1401              $C$DW$93        .dwtag  DW_TAG_subprogram, DW_AT_name("timer_initialize")
    1402                      .dwattr $C$DW$93, DW_AT_low_pc(_timer_initialize)
    1403                      .dwattr $C$DW$93, DW_AT_high_pc(0x00)
    1404                      .dwattr $C$DW$93, DW_AT_TI_symbol_name("_timer_initialize")
    1405                      .dwattr $C$DW$93, DW_AT_external
    1406                      .dwattr $C$DW$93, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c")
    1407                      .dwattr $C$DW$93, DW_AT_TI_begin_line(0x16)
    1408                      .dwattr $C$DW$93, DW_AT_TI_begin_column(0x06)
    1409                      .dwattr $C$DW$93, DW_AT_TI_max_frame_size(0x02)
    1410                      .dwattr $C$DW$93, DW_AT_frame_base[DW_OP_bregx 0x24 2]
    1411                      .dwattr $C$DW$93, DW_AT_TI_skeletal
    1412                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c",line 23,column 1,is_stmt,a
    1413              ;*******************************************************************************
    1414              ;* FUNCTION NAME: timer_initialize                                             *
    1415              ;*                                                                             *
    1416              ;*   Function Uses Regs : AR3,XAR3,SP,M40,SATA,SATD,RDM,FRCT,SMUL              *
    1417              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    1418              ;*   Total Frame Size   : 2 words                                              *
    1419              ;*                        (2 return address/alignment)                         *
    1420              ;*   Min System Stack   : 1 word                                               *
    1421              ;*******************************************************************************
    1422 0004f5       _timer_initialize:
    1423 0004f5 EC31          AMOV #_timer_queue, XAR3 ; |34| 
         0004f7 BE00 
         0004f9 00A6-
    1424 0004fb 4EFF          AADD #-1, SP
    1425 0004fd EB31          MOV XAR3, dbl(*(#_timer_queue))
         0004ff B500 
         000501 00A6-
    1426 000503 EB31          MOV XAR3, dbl(*(#(_timer_queue+2)))
         000505 B500 
         000507 00A8-
    1427              $C$DW$94        .dwtag  DW_TAG_TI_branch
    1428                      .dwattr $C$DW$94, DW_AT_low_pc(0x00)
    1429                      .dwattr $C$DW$94, DW_AT_name("_start_hw_timer")
    1430                      .dwattr $C$DW$94, DW_AT_TI_call
    1431 000509 6C00          CALL #_start_hw_timer ; |25| 
         00050b 0000!
    1432                                                      ; call occurs [#_start_hw_timer] ; |25| 
    1433 00050d 4E01          AADD #1, SP
    1434                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c",line 26,column 1,is_stmt
    1435              $C$DW$95        .dwtag  DW_TAG_TI_branch
    1436                      .dwattr $C$DW$95, DW_AT_low_pc(0x00)
    1437                      .dwattr $C$DW$95, DW_AT_TI_return
    1438 00050f 4804          RET
    1439                                                      ; return occurs
    1440                      .dwattr $C$DW$93, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c")
    1441                      .dwattr $C$DW$93, DW_AT_TI_end_line(0x1a)
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   33

    1442                      .dwattr $C$DW$93, DW_AT_TI_end_column(0x01)
    1443                      .dwendtag $C$DW$93
    1444              
    1445 000511               .sect   ".text"
    1446                      .global _timer_handler
    1447              
    1448              $C$DW$96        .dwtag  DW_TAG_subprogram, DW_AT_name("timer_handler")
    1449                      .dwattr $C$DW$96, DW_AT_low_pc(_timer_handler)
    1450                      .dwattr $C$DW$96, DW_AT_high_pc(0x00)
    1451                      .dwattr $C$DW$96, DW_AT_TI_symbol_name("_timer_handler")
    1452                      .dwattr $C$DW$96, DW_AT_external
    1453                      .dwattr $C$DW$96, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c")
    1454                      .dwattr $C$DW$96, DW_AT_TI_begin_line(0x3b)
    1455                      .dwattr $C$DW$96, DW_AT_TI_begin_column(0x06)
    1456                      .dwattr $C$DW$96, DW_AT_TI_max_frame_size(0x08)
    1457                      .dwattr $C$DW$96, DW_AT_frame_base[DW_OP_bregx 0x24 8]
    1458                      .dwattr $C$DW$96, DW_AT_TI_skeletal
    1459                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c",line 60,column 1,is_stmt,a
    1460              ;*******************************************************************************
    1461              ;* FUNCTION NAME: timer_handler                                                *
    1462              ;*                                                                             *
    1463              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,T0,T2,AR0,XAR0,AR1,AR2,XAR2, *
    1464              ;*                        AR3,XAR3,AR5,XAR5,SP,CARRY,TC1,M40,SATA,SATD,RDM,    *
    1465              ;*                        FRCT,SMUL                                            *
    1466              ;*   Save On Entry Regs : T2,AR5                                               *
    1467              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    1468              ;*   Total Frame Size   : 8 words                                              *
    1469              ;*                        (2 return address/alignment)                         *
    1470              ;*                        (4 local values)                                     *
    1471              ;*                        (2 register save area)                               *
    1472              ;*   Min System Stack   : 2 words                                              *
    1473              ;*******************************************************************************
    1474 000511       _timer_handler:
    1475 000511 5066          PSH T2
    1476 000513 50D5          PSHBOTH XAR5
    1477 000515 4EFB          AADD #-5, SP
    1478 000517 ED31          MOV dbl(*(#_timer_queue)), XAR3
         000519 BF00 
         00051b 00A6-
    1479 00051d EB04          MOV XAR3, dbl(*SP(#2))
         00051f B5   
    1480              $C$DW$97        .dwtag  DW_TAG_TI_branch
    1481                      .dwattr $C$DW$97, DW_AT_low_pc(0x00)
    1482                      .dwattr $C$DW$97, DW_AT_name("_timer_hw_enter")
    1483                      .dwattr $C$DW$97, DW_AT_TI_call
    1484 000520 6C00          CALL #_timer_hw_enter ; |64| 
         000522 0000!
    1485                                                      ; call occurs [#_timer_hw_enter] ; |64| 
    1486 000524 0414          BCC $C$L48,T0 != #0 ; |64| 
         000526 7E   
    1487                                                      ; branchcc occurs ; |64| 
    1488 000527 A931          MOV *(#3), AR1 ; |66| 
         000529 0000 
         00052b 03   
    1489 00052c 7D08          AND #0x0800, AR1, T2 ; |66| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   34

         00052e 0069 
    1490 000530 46B3       BSET ST1_INTM
    1491 000532 EC31          AMOV #_timer_queue, XAR3 ; |67| 
         000534 BE00 
         000536 00A6-
    1492 000538 ED04          MOV dbl(*SP(#2)), AC1 ; |67| 
         00053a 18   
    1493 00053b EB00          MOV XAR3, dbl(*SP(#0))
         00053d B5   
    1494 00053e ED00          MOV dbl(*SP(#0)), AC0 ; |67| 
         000540 08   
    1495 000541 1210          CMPU AC1 == AC0, TC1 ; |67| 
         000543 04   
    1496 000544 0464          BCC $C$L46,TC1 ; |67| 
         000546 56   
    1497                                                      ; branchcc occurs ; |67| 
    1498 000547       $C$L43:    
    1499 000547       $C$DW$L$_timer_handler$3$B:
    1500                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c",line 67,column 0,is_stmt
    1501 000547 ED04          MOV dbl(*SP(#2)), XAR3
         000549 BF   
    1502 00054a A979          MOV *AR3(short(#4)), AR1 ; |69| 
    1503 00054c 4219          SUB #1, AR1, AR1 ; |69| 
    1504 00054e ED61          MOV dbl(*AR3), XAR5
         000550 DF   
    1505 000551 C979          MOV AR1, *AR3(short(#4)) ; |69| 
    1506 000553 0419          BCC $C$L45,AR1 != #0 ; |69| 
         000555 38   
    1507                                                      ; branchcc occurs ; |69| 
    1508 000556       $C$DW$L$_timer_handler$3$E:
    1509 000556       $C$DW$L$_timer_handler$4$B:
    1510 000556 ED61          MOV dbl(*AR3), XAR3
         000558 BF   
    1511 000559 90B0          MOV XAR3, AC0
    1512              
    1513 00055e 1B00          OR #0, AC0, AC2
         000560 20   
    1514 00055b ED04  ||      MOV dbl(*SP(#2)), AC1 ; |63| 
         00055d 18   
    1515              
    1516 000561 1220          CMPU AC2 == AC1, TC1 ; |63| 
         000563 14   
    1517 000564 0464          BCC $C$L44,TC1 ; |63| 
         000566 18   
    1518                                                      ; branchcc occurs ; |63| 
    1519 000567       $C$DW$L$_timer_handler$4$E:
    1520 000567       $C$DW$L$_timer_handler$5$B:
    1521 000567 ED04          MOV dbl(*SP(#2)), XAR3
         000569 BF   
    1522 00056a ED75          MOV dbl(*AR3(short(#2))), XAR3
         00056c BF   
    1523 00056d EB61          MOV AC0, dbl(*AR3)
         00056f 08   
    1524 000570 ED04          MOV dbl(*SP(#2)), XAR3
         000572 BF   
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   35

    1525 000573 ED75          MOV dbl(*AR3(short(#2))), XAR2
         000575 AF   
    1526 000576 ED04          MOV dbl(*SP(#2)), XAR3
         000578 BF   
    1527 000579 ED61          MOV dbl(*AR3), XAR3
         00057b BF   
    1528 00057c EB75          MOV XAR2, dbl(*AR3(short(#2)))
         00057e A5   
    1529 00057f       $C$DW$L$_timer_handler$5$E:
    1530 00057f       $C$L44:    
    1531 00057f       $C$DW$L$_timer_handler$6$B:
    1532 00057f ED04          MOV dbl(*SP(#2)), XAR3
         000581 BF   
    1533 000582 ED7D          MOV dbl(*AR3(short(#6))), AC0 ; |71| 
         000584 08   
    1534 000585 6380          BCC $C$L45,AC0 == #0 ; |71| 
    1535                                                      ; branchcc occurs ; |71| 
    1536 000587       $C$DW$L$_timer_handler$6$E:
    1537 000587       $C$DW$L$_timer_handler$7$B:
    1538 000587 ED6D          MOV dbl(*AR3(#8)), XAR0
         000589 8F00 
         00058b 08   
    1539              $C$DW$98        .dwtag  DW_TAG_TI_branch
    1540                      .dwattr $C$DW$98, DW_AT_low_pc(0x00)
    1541                      .dwattr $C$DW$98, DW_AT_TI_call
    1542                      .dwattr $C$DW$98, DW_AT_TI_indirect
    1543 00058c 9200          CALL AC0  ; |72| 
    1544                                                      ; call occurs [AC0] ; |72| 
    1545 00058e       $C$DW$L$_timer_handler$7$E:
    1546 00058e       $C$L45:    
    1547 00058e       $C$DW$L$_timer_handler$8$B:
    1548 00058e EB04          MOV XAR5, dbl(*SP(#2))
         000590 D5   
    1549 000591 ED00          MOV dbl(*SP(#0)), AC0 ; |74| 
         000593 08   
    1550 000594 ED04          MOV dbl(*SP(#2)), AC1 ; |74| 
         000596 18   
    1551 000597 121C          CMPU AC1 != AC0, TC1 ; |67| 
         000599 04   
    1552                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c",line 75,column 0,is_stmt
    1553 00059a 0464          BCC $C$L43,TC1 ; |67| 
         00059c AA   
    1554                                                      ; branchcc occurs ; |67| 
    1555 00059d       $C$DW$L$_timer_handler$8$E:
    1556 00059d       $C$L46:    
    1557 00059d 6116          BCC $C$L47,T2 != #0 ; |76| 
    1558                                                      ; branchcc occurs ; |76| 
    1559 00059f 46B2       BCLR ST1_INTM
    1560              $C$L47:    
    1561              $C$DW$99        .dwtag  DW_TAG_TI_branch
    1562                      .dwattr $C$DW$99, DW_AT_low_pc(0x00)
    1563                      .dwattr $C$DW$99, DW_AT_name("_timer_hw_exit")
    1564                      .dwattr $C$DW$99, DW_AT_TI_call
    1565 0005a1 6C00          CALL #_timer_hw_exit ; |77| 
         0005a3 0000!
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   36

    1566                                                      ; call occurs [#_timer_hw_exit] ; |77| 
    1567 0005a5       $C$L48:    
    1568 0005a5 4E05          AADD #5, SP
    1569 0005a7 50D4          POPBOTH XAR5
    1570 0005a9 5062          POP T2
    1571                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c",line 78,column 1,is_stmt
    1572              $C$DW$100       .dwtag  DW_TAG_TI_branch
    1573                      .dwattr $C$DW$100, DW_AT_low_pc(0x00)
    1574                      .dwattr $C$DW$100, DW_AT_TI_return
    1575 0005ab 4804          RET
    1576                                                      ; return occurs
    1577              
    1578              $C$DW$101       .dwtag  DW_TAG_TI_loop
    1579                      .dwattr $C$DW$101, DW_AT_name("/tmp/129924KNrf8:$C$L43:1:1739870196")
    1580                      .dwattr $C$DW$101, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c")
    1581                      .dwattr $C$DW$101, DW_AT_TI_begin_line(0x43)
    1582                      .dwattr $C$DW$101, DW_AT_TI_end_line(0x4b)
    1583              $C$DW$102       .dwtag  DW_TAG_TI_loop_range
    1584                      .dwattr $C$DW$102, DW_AT_low_pc($C$DW$L$_timer_handler$3$B)
    1585                      .dwattr $C$DW$102, DW_AT_high_pc($C$DW$L$_timer_handler$3$E)
    1586              $C$DW$103       .dwtag  DW_TAG_TI_loop_range
    1587                      .dwattr $C$DW$103, DW_AT_low_pc($C$DW$L$_timer_handler$4$B)
    1588                      .dwattr $C$DW$103, DW_AT_high_pc($C$DW$L$_timer_handler$4$E)
    1589              $C$DW$104       .dwtag  DW_TAG_TI_loop_range
    1590                      .dwattr $C$DW$104, DW_AT_low_pc($C$DW$L$_timer_handler$5$B)
    1591                      .dwattr $C$DW$104, DW_AT_high_pc($C$DW$L$_timer_handler$5$E)
    1592              $C$DW$105       .dwtag  DW_TAG_TI_loop_range
    1593                      .dwattr $C$DW$105, DW_AT_low_pc($C$DW$L$_timer_handler$6$B)
    1594                      .dwattr $C$DW$105, DW_AT_high_pc($C$DW$L$_timer_handler$6$E)
    1595              $C$DW$106       .dwtag  DW_TAG_TI_loop_range
    1596                      .dwattr $C$DW$106, DW_AT_low_pc($C$DW$L$_timer_handler$7$B)
    1597                      .dwattr $C$DW$106, DW_AT_high_pc($C$DW$L$_timer_handler$7$E)
    1598              $C$DW$107       .dwtag  DW_TAG_TI_loop_range
    1599                      .dwattr $C$DW$107, DW_AT_low_pc($C$DW$L$_timer_handler$8$B)
    1600                      .dwattr $C$DW$107, DW_AT_high_pc($C$DW$L$_timer_handler$8$E)
    1601                      .dwendtag $C$DW$101
    1602              
    1603                      .dwattr $C$DW$96, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/timer.c")
    1604                      .dwattr $C$DW$96, DW_AT_TI_end_line(0x4e)
    1605                      .dwattr $C$DW$96, DW_AT_TI_end_column(0x01)
    1606                      .dwendtag $C$DW$96
    1607              
    1608 0005ad               .sect   ".text"
    1609                      .global _task_initialize
    1610              
    1611              $C$DW$108       .dwtag  DW_TAG_subprogram, DW_AT_name("task_initialize")
    1612                      .dwattr $C$DW$108, DW_AT_low_pc(_task_initialize)
    1613                      .dwattr $C$DW$108, DW_AT_high_pc(0x00)
    1614                      .dwattr $C$DW$108, DW_AT_TI_symbol_name("_task_initialize")
    1615                      .dwattr $C$DW$108, DW_AT_external
    1616                      .dwattr $C$DW$108, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
    1617                      .dwattr $C$DW$108, DW_AT_TI_begin_line(0x43)
    1618                      .dwattr $C$DW$108, DW_AT_TI_begin_column(0x06)
    1619                      .dwattr $C$DW$108, DW_AT_TI_max_frame_size(0x01)
    1620                      .dwattr $C$DW$108, DW_AT_frame_base[DW_OP_bregx 0x24 1]
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   37

    1621                      .dwattr $C$DW$108, DW_AT_TI_skeletal
    1622                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 68,column 1,is_stmt,ad
    1623              ;*******************************************************************************
    1624              ;* FUNCTION NAME: task_initialize                                              *
    1625              ;*                                                                             *
    1626              ;*   Function Uses Regs : AC0,AC0,T0,AR1,AR2,XAR2,AR3,XAR3,AR4,XAR4,SP,BRC0,   *
    1627              ;*                        CARRY,M40,SATA,SATD,RDM,FRCT,SMUL                    *
    1628              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    1629              ;*   Total Frame Size   : 1 word                                               *
    1630              ;*                        (1 return address/alignment)                         *
    1631              ;*   Min System Stack   : 1 word                                               *
    1632              ;*******************************************************************************
    1633 0005ad       _task_initialize:
    1634 0005ad EC31          AMOV #_ready_queue, XAR2
         0005af AE00 
         0005b1 0074-
    1635              
    1636 0005b3 1600          MOV #10, BRC0
         0005b5 A9   
    1637 0005b6 3D00  ||      MOV #0, AC0 ; |73| 
    1638              
    1639 0005b8 E631          MOV #11, *(#_ready_queue) ; |91| 
         0005ba 0B00 
         0005bc 0074-
    1640              
    1641 0005be EC41          AMAR *AR2, XAR3
         0005c0 BE   
    1642 0005c1 3D44  ||      MOV #4, T0
    1643              
    1644 0005c3 EB31          MOV AC0, dbl(*(#_runtsk))
         0005c5 0800 
         0005c7 000C-
    1645 0005c9 EB31          MOV AC0, dbl(*(#_schedtsk))
         0005cb 0800 
         0005cd 000E-
    1646 0005cf 1404          AADD #4, AR3
         0005d1 B4   
    1647                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queue.h",line 92,column 0,is_
    1648              
    1649 ****** PORT          RPTBLOCAL $C$L50-1
    1649 0005d5 4B86          RPTBLOCAL $C$L50-1; port of RPTBLOCAL $C$L50-1
    1650 0005d2 1402  ||      AADD #2, AR2
         0005d4 A4   
    1651              
    1652                                                          ; loop starts
    1653 0005d7       $C$L49:    
    1654 0005d7       $C$DW$L$_task_initialize$2$B:
    1655                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queue.h",line 93,column 0,is_
    1656 0005d7 EB41              MOV XAR2, dbl(*AR2)
         0005d9 A5   
    1657 0005da EB67              MOV XAR2, dbl(*(AR3+T0))
         0005dc A5   
    1658 0005dd 1404              AADD #4, AR2 ; |92| 
         0005df A4   
    1649                                        ; port of RPTBLOCAL $C$L50-1
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   38

    1659                                                      ; loop ends ; |92| 
    1660 0005e0       $C$DW$L$_task_initialize$2$E:
    1661 0005e0       $C$L50:    
    1662 0005e0 EC31          AMOV #_free_tcb, XAR3 ; |34| 
         0005e2 BE00 
         0005e4 0070-
    1663 0005e6 E631          MOV #0, *(#(_ready_queue+48)) ; |97| 
         0005e8 0000 
         0005ea 00A4-
    1664 0005ec EB31          MOV AC0, dbl(*(#(_ready_queue+46)))
         0005ee 0800 
         0005f0 00A2-
    1665 0005f2 EC31          AMOV #_tcb_table, XAR4 ; |77| 
         0005f4 CE00 
         0005f6 0010-
    1666              
    1667 0005f8 3C09          MOV #0, AR1
    1668 0005fa 1700  ||      MOV #1, BRC0
         0005fc 19   
    1669              
    1670 0005fd EB31          MOV XAR3, dbl(*(#_free_tcb))
         0005ff B500 
         000601 0070-
    1671                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 77,column 0,is_stmt
    1672              
    1673 ****** PORT          RPTBLOCAL $C$L52-1
    1673 000606 4B96          RPTBLOCAL $C$L52-1; port of RPTBLOCAL $C$L52-1
    1674 000603 EC61  ||      AMAR *AR3, XAR2
         000605 AE   
    1675              
    1676                                                          ; loop starts
    1677 000608       $C$L51:    
    1678 000608       $C$DW$L$_task_initialize$4$B:
    1679 000608 C98D              MOV AR1, *AR4(#17) ; |79| 
         00060a 0011 
    1680 00060c E68D              MOV #0, *AR4(#24) ; |80| 
         00060e 0000 
         000610 18   
    1681 000611 EB95              MOV XAR2, dbl(*AR4(short(#2)))
         000613 A5   
    1682 000614 20                NOP       ;                     avoids Silicon Exception CPU_7
    1683 000615 EB81              MOV XAR3, dbl(*AR4)
         000617 B5   
    1684 000618 EB41              MOV XAR4, dbl(*AR2)
         00061a C5   
    1685 00061b EC81              AMAR *AR4, XAR2
         00061d AE   
    1686                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 82,column 0,is_stmt
    1687              
    1688 00061e 1430              AADD #48, AR4 ; |77| 
         000620 C4   
    1689 000621 4119  ||          ADD #1, AR1 ; |77| 
    1673                                        ; port of RPTBLOCAL $C$L52-1
    1690              
    1691                                                      ; loop ends ; |77| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   39

    1692 000623       $C$DW$L$_task_initialize$4$E:
    1693 000623       $C$L52:    
    1694 000623 EB31          MOV XAR2, dbl(*(#(_free_tcb+2)))
         000625 A500 
         000627 0072-
    1695                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 86,column 1,is_stmt
    1696              $C$DW$109       .dwtag  DW_TAG_TI_branch
    1697                      .dwattr $C$DW$109, DW_AT_low_pc(0x00)
    1698                      .dwattr $C$DW$109, DW_AT_TI_return
    1699 000629 4804          RET
    1700                                                      ; return occurs
    1701              
    1702              $C$DW$110       .dwtag  DW_TAG_TI_loop
    1703                      .dwattr $C$DW$110, DW_AT_name("/tmp/129924KNrf8:$C$L51:1:1739870196")
    1704                      .dwattr $C$DW$110, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
    1705                      .dwattr $C$DW$110, DW_AT_TI_begin_line(0x4d)
    1706                      .dwattr $C$DW$110, DW_AT_TI_end_line(0x52)
    1707              $C$DW$111       .dwtag  DW_TAG_TI_loop_range
    1708                      .dwattr $C$DW$111, DW_AT_low_pc($C$DW$L$_task_initialize$4$B)
    1709                      .dwattr $C$DW$111, DW_AT_high_pc($C$DW$L$_task_initialize$4$E)
    1710                      .dwendtag $C$DW$110
    1711              
    1712              
    1713              $C$DW$112       .dwtag  DW_TAG_TI_loop
    1714                      .dwattr $C$DW$112, DW_AT_name("/tmp/129924KNrf8:$C$L49:1:1739870196")
    1715                      .dwattr $C$DW$112, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_que
    1716                      .dwattr $C$DW$112, DW_AT_TI_begin_line(0x5c)
    1717                      .dwattr $C$DW$112, DW_AT_TI_end_line(0x5d)
    1718              $C$DW$113       .dwtag  DW_TAG_TI_loop_range
    1719                      .dwattr $C$DW$113, DW_AT_low_pc($C$DW$L$_task_initialize$2$B)
    1720                      .dwattr $C$DW$113, DW_AT_high_pc($C$DW$L$_task_initialize$2$E)
    1721                      .dwendtag $C$DW$112
    1722              
    1723                      .dwattr $C$DW$108, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
    1724                      .dwattr $C$DW$108, DW_AT_TI_end_line(0x56)
    1725                      .dwattr $C$DW$108, DW_AT_TI_end_column(0x01)
    1726                      .dwendtag $C$DW$108
    1727              
    1728 00062b               .sect   ".text"
    1729                      .global _sus_tsk
    1730              
    1731              $C$DW$114       .dwtag  DW_TAG_subprogram, DW_AT_name("sus_tsk")
    1732                      .dwattr $C$DW$114, DW_AT_low_pc(_sus_tsk)
    1733                      .dwattr $C$DW$114, DW_AT_high_pc(0x00)
    1734                      .dwattr $C$DW$114, DW_AT_TI_symbol_name("_sus_tsk")
    1735                      .dwattr $C$DW$114, DW_AT_external
    1736                      .dwattr $C$DW$114, DW_AT_type(*$C$DW$T$65)
    1737                      .dwattr $C$DW$114, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_s
    1738                      .dwattr $C$DW$114, DW_AT_TI_begin_line(0x23)
    1739                      .dwattr $C$DW$114, DW_AT_TI_begin_column(0x04)
    1740                      .dwattr $C$DW$114, DW_AT_TI_max_frame_size(0x02)
    1741                      .dwattr $C$DW$114, DW_AT_frame_base[DW_OP_bregx 0x24 2]
    1742                      .dwattr $C$DW$114, DW_AT_TI_skeletal
    1743                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_syn.c",line 36,column 1,is_
    1744              $C$DW$115       .dwtag  DW_TAG_formal_parameter, DW_AT_name("tskid")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   40

    1745                      .dwattr $C$DW$115, DW_AT_TI_symbol_name("_tskid")
    1746                      .dwattr $C$DW$115, DW_AT_type(*$C$DW$T$38)
    1747                      .dwattr $C$DW$115, DW_AT_location[DW_OP_reg12]
    1748              ;*******************************************************************************
    1749              ;* FUNCTION NAME: sus_tsk                                                      *
    1750              ;*                                                                             *
    1751              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,T0,T2,AR0,XAR0,AR1,AR2,AR3,XAR3,SP,  *
    1752              ;*                        CARRY,TC1,M40,SATA,SATD,RDM,FRCT,SMUL                *
    1753              ;*   Save On Entry Regs : T2                                                   *
    1754              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    1755              ;*   Total Frame Size   : 2 words                                              *
    1756              ;*                        (1 return address/alignment)                         *
    1757              ;*                        (1 register save area)                               *
    1758              ;*   Min System Stack   : 1 word                                               *
    1759              ;*******************************************************************************
    1760 00062b       _sus_tsk:
    1761 00062b 3C29          MOV #2, AR1
    1762              
    1763 00062d 1294          CMP T0 > AR1, TC1 ; |40| 
         00062f 40   
    1764 000630 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    1765              
    1766 000631 5066          PSH T2
    1767 000633 0464          BCC $C$L53,TC1 ; |40| 
         000635 12   
    1768                                                      ; branchcc occurs ; |40| 
    1769 000636 0414          BCC $C$L55,T0 != #0 ; |40| 
         000638 1E   
    1770                                                      ; branchcc occurs ; |40| 
    1771 000639 ED31          MOV dbl(*(#_runtsk)), XAR3
         00063b BF00 
         00063d 000C-
    1772              
    1773 00063f 90B0          MOV XAR3, AC0
    1774 000641 3D01  ||      MOV #0, AC1 ; |40| 
    1775              
    1776 000643 121C          CMPU AC1 != AC0, TC1 ; |40| 
         000645 04   
    1777 000646 63E4          BCC $C$L54,TC1 ; |40| 
    1778                                                      ; branchcc occurs ; |40| 
    1779 000648       $C$L53:    
    1780 000648 76FF          MOV #-18, T0 ; |42| 
         00064a EE48 
    1781 00064c 0600          B $C$L64  ; |42| 
         00064e 91   
    1782                                                      ; branch occurs ; |42| 
    1783 00064f       $C$L54:    
    1784 00064f ED31          MOV dbl(*(#_runtsk)), XAR0
         000651 8F00 
         000653 000C-
    1785 000655 4A18          B $C$L56  ; |44| 
    1786                                                      ; branch occurs ; |44| 
    1787 000657       $C$L55:    
    1788 000657 7C00          SUB #1, T0, AR1 ; |44| 
         000659 0194 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   41

    1789 00065b 2290          MOV AR1, AC0
    1790 00065d 1045          SFTS AC0, #4, AC1 ; |44| 
         00065f 04   
    1791 000660 1043          ADD AC0 << #5, AC1 ; |44| 
         000662 05   
    1792 000663 7A00          MOV #(_tcb_table >> 16) << #16, AC0 ; |44| 
         000665 000A%
    1793 000667 7E00          OR #(_tcb_table & 0xffff), AC0, AC0 ; |44| 
         000669 0000%
    1794 00066b 2410          ADD AC1, AC0 ; |44| 
    1795 00066d 9008          MOV AC0, XAR0
    1796 00066f       $C$L56:    
    1797 00066f A931          MOV *(#3), AR1 ; |46| 
         000671 0000 
         000673 03   
    1798 000674 7D08          AND #0x0800, AR1, T2 ; |46| 
         000676 0069 
    1799 000678 46B3       BSET ST1_INTM
    1800 00067a A90D          MOV *AR0(#24), AR1 ; |48| 
         00067c 0018 
    1801 00067e 6519          BCC $C$L57,AR1 != #0 ; |48| 
    1802                                                      ; branchcc occurs ; |48| 
    1803 000680 76FF          MOV #-42, T0 ; |49| 
         000682 D648 
    1804 000684 0406          BCC $C$L62,T2 == #0 ; |65| 
         000686 55   
    1805                                                      ; branchcc occurs ; |65| 
    1806 000687 0600          B $C$L63  ; |65| 
         000689 54   
    1807                                                      ; branch occurs ; |65| 
    1808 00068a       $C$L57:    
    1809 00068a 7600          MOV #16, AR2 ; |50| 
         00068c 10A8 
    1810              
    1811 00068e 1290          CMPU AR1 == AR2, TC1 ; |50| 
         000690 A4   
    1812 000691 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    1813              
    1814 000692 0464          BCC $C$L61,TC1 ; |50| 
         000694 41   
    1815                                                      ; branchcc occurs ; |50| 
    1816 000695 3CFB          MOV #15, AR3
    1817 000697 AA0D          MOV *AR0(#34), AR2 ; |52| 
         000699 0022 
    1818              
    1819 00069b 12A0          CMP AR2 == AR3, TC1 ; |52| 
         00069d B0   
    1820 00069e 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    1821              
    1822 00069f 0464          BCC $C$L60,TC1 ; |52| 
         0006a1 2C   
    1823                                                      ; branchcc occurs ; |52| 
    1824 0006a2 401A          ADD #1, AR2, AR2 ; |55| 
    1825 0006a4 CA0D          MOV AR2, *AR0(#34) ; |55| 
         0006a6 0022 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   42

    1826 0006a8 3C1A          MOV #1, AR2
    1827              
    1828 0006aa 1290          CMPU AR1 == AR2, TC1 ; |56| 
         0006ac A4   
    1829 0006ad 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    1830              
    1831 0006ae 67E4          BCC $C$L58,TC1 ; |56| 
    1832                                                      ; branchcc occurs ; |56| 
    1833 0006b0 3C2A          MOV #2, AR2
    1834              
    1835 0006b2 1290          CMPU AR1 == AR2, TC1 ; |56| 
         0006b4 A4   
    1836 0006b5 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    1837              
    1838 0006b6 9674          XCC !TC1
    1839 0006b8 E60D             MOV #12, *AR0(#24) ; |61| 
         0006ba 0C00 
         0006bc 18   
    1840 0006bd 6474          BCC $C$L59,!TC1 ; |61| 
    1841                                                      ; branchcc occurs ; |61| 
    1842 0006bf       $C$L58:    
    1843 0006bf E60D          MOV #8, *AR0(#24) ; |57| 
         0006c1 0800 
         0006c3 18   
    1844              $C$DW$116       .dwtag  DW_TAG_TI_branch
    1845                      .dwattr $C$DW$116, DW_AT_low_pc(0x00)
    1846                      .dwattr $C$DW$116, DW_AT_name("_move_from_ready_state")
    1847                      .dwattr $C$DW$116, DW_AT_TI_call
    1848 0006c4 08FB          CALL #_move_from_ready_state ; |58| 
         0006c6 22   
    1849                                                      ; call occurs [#_move_from_ready_state] ; |58| 
    1850 0006c7       $C$L59:    
    1851 0006c7 3C04          MOV #0, T0
    1852 0006c9 0406          BCC $C$L62,T2 == #0 ; |65| 
         0006cb 10   
    1853                                                      ; branchcc occurs ; |65| 
    1854 0006cc 4A10          B $C$L63  ; |65| 
    1855                                                      ; branch occurs ; |65| 
    1856 0006ce       $C$L60:    
    1857 0006ce 76FF          MOV #-43, T0 ; |53| 
         0006d0 D548 
    1858 0006d2 6406          BCC $C$L62,T2 == #0 ; |65| 
    1859                                                      ; branchcc occurs ; |65| 
    1860 0006d4 4A08          B $C$L63  ; |65| 
    1861                                                      ; branch occurs ; |65| 
    1862 0006d6       $C$L61:    
    1863 0006d6 76FF          MOV #-41, T0 ; |51| 
         0006d8 D748 
    1864 0006da 6116          BCC $C$L63,T2 != #0 ; |65| 
    1865                                                      ; branchcc occurs ; |65| 
    1866 0006dc       $C$L62:    
    1867 0006dc 46B2       BCLR ST1_INTM
    1868 0006de       $C$L63:    
    1869 0006de 951F     INTR #31
    1870 0006e0       $C$L64:    
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   43

    1871 0006e0 5062          POP T2
    1872                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_syn.c",line 68,column 1,is_
    1873              $C$DW$117       .dwtag  DW_TAG_TI_branch
    1874                      .dwattr $C$DW$117, DW_AT_low_pc(0x00)
    1875                      .dwattr $C$DW$117, DW_AT_TI_return
    1876 0006e2 4804          RET
    1877                                                      ; return occurs
    1878                      .dwattr $C$DW$114, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_syn
    1879                      .dwattr $C$DW$114, DW_AT_TI_end_line(0x44)
    1880                      .dwattr $C$DW$114, DW_AT_TI_end_column(0x01)
    1881                      .dwendtag $C$DW$114
    1882              
    1883 0006e4               .sect   ".text"
    1884                      .global _set_tim
    1885              
    1886              $C$DW$118       .dwtag  DW_TAG_subprogram, DW_AT_name("set_tim")
    1887                      .dwattr $C$DW$118, DW_AT_low_pc(_set_tim)
    1888                      .dwattr $C$DW$118, DW_AT_high_pc(0x00)
    1889                      .dwattr $C$DW$118, DW_AT_TI_symbol_name("_set_tim")
    1890                      .dwattr $C$DW$118, DW_AT_external
    1891                      .dwattr $C$DW$118, DW_AT_type(*$C$DW$T$65)
    1892                      .dwattr $C$DW$118, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/time_mana
    1893                      .dwattr $C$DW$118, DW_AT_TI_begin_line(0x14)
    1894                      .dwattr $C$DW$118, DW_AT_TI_begin_column(0x04)
    1895                      .dwattr $C$DW$118, DW_AT_TI_max_frame_size(0x01)
    1896                      .dwattr $C$DW$118, DW_AT_frame_base[DW_OP_bregx 0x24 1]
    1897                      .dwattr $C$DW$118, DW_AT_TI_skeletal
    1898                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/time_manage.c",line 21,column 1,is_
    1899              $C$DW$119       .dwtag  DW_TAG_formal_parameter, DW_AT_name("p_systim")
    1900                      .dwattr $C$DW$119, DW_AT_TI_symbol_name("_p_systim")
    1901                      .dwattr $C$DW$119, DW_AT_type(*$C$DW$T$75)
    1902                      .dwattr $C$DW$119, DW_AT_location[DW_OP_reg17]
    1903              ;*******************************************************************************
    1904              ;* FUNCTION NAME: set_tim                                                      *
    1905              ;*                                                                             *
    1906              ;*   Function Uses Regs : AC0,AC0,T0,AR0,XAR0,AR1,SP,M40,SATA,SATD,RDM,FRCT,   *
    1907              ;*                        SMUL                                                 *
    1908              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    1909              ;*   Total Frame Size   : 1 word                                               *
    1910              ;*                        (1 return address/alignment)                         *
    1911              ;*   Min System Stack   : 1 word                                               *
    1912              ;*******************************************************************************
    1913 0006e4       _set_tim:
    1914 0006e4 A931          MOV *(#3), AR1 ; |22| 
         0006e6 0000 
         0006e8 03   
    1915 0006e9 7D08          AND #0x0800, AR1, AR1 ; |22| 
         0006eb 0099 
    1916 0006ed 46B3       BSET ST1_INTM
    1917 0006ef ED01          MOV dbl(*AR0), AC0 ; |23| 
         0006f1 08   
    1918 0006f2 EB31          MOV AC0, dbl(*(#__system_ticks)) ; |23| 
         0006f4 0800 
         0006f6 0000!
    1919 0006f8 ED15          MOV dbl(*AR0(short(#2))), AC0 ; |24| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   44

         0006fa 08   
    1920 0006fb EB31          MOV AC0, dbl(*(#(__system_ticks+2))) ; |24| 
         0006fd 0800 
         0006ff 0002!
    1921 000701 6119          BCC $C$L65,AR1 != #0 ; |25| 
    1922                                                      ; branchcc occurs ; |25| 
    1923 000703 46B2       BCLR ST1_INTM
    1924 000705       $C$L65:    
    1925 000705 3C04          MOV #0, T0
    1926                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/time_manage.c",line 27,column 1,is_
    1927              $C$DW$120       .dwtag  DW_TAG_TI_branch
    1928                      .dwattr $C$DW$120, DW_AT_low_pc(0x00)
    1929                      .dwattr $C$DW$120, DW_AT_TI_return
    1930 000707 4804          RET
    1931                                                      ; return occurs
    1932                      .dwattr $C$DW$118, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/time_manage
    1933                      .dwattr $C$DW$118, DW_AT_TI_end_line(0x1b)
    1934                      .dwattr $C$DW$118, DW_AT_TI_end_column(0x01)
    1935                      .dwendtag $C$DW$118
    1936              
    1937 000709               .sect   ".text"
    1938                      .global __set_flg
    1939              
    1940              $C$DW$121       .dwtag  DW_TAG_subprogram, DW_AT_name("_set_flg")
    1941                      .dwattr $C$DW$121, DW_AT_low_pc(__set_flg)
    1942                      .dwattr $C$DW$121, DW_AT_high_pc(0x00)
    1943                      .dwattr $C$DW$121, DW_AT_TI_symbol_name("__set_flg")
    1944                      .dwattr $C$DW$121, DW_AT_external
    1945                      .dwattr $C$DW$121, DW_AT_type(*$C$DW$T$65)
    1946                      .dwattr $C$DW$121, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflag
    1947                      .dwattr $C$DW$121, DW_AT_TI_begin_line(0x68)
    1948                      .dwattr $C$DW$121, DW_AT_TI_begin_column(0x04)
    1949                      .dwattr $C$DW$121, DW_AT_TI_max_frame_size(0x06)
    1950                      .dwattr $C$DW$121, DW_AT_frame_base[DW_OP_bregx 0x24 6]
    1951                      .dwattr $C$DW$121, DW_AT_TI_skeletal
    1952                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 105,column 1,is_
    1953              $C$DW$122       .dwtag  DW_TAG_formal_parameter, DW_AT_name("flgid")
    1954                      .dwattr $C$DW$122, DW_AT_TI_symbol_name("_flgid")
    1955                      .dwattr $C$DW$122, DW_AT_type(*$C$DW$T$38)
    1956                      .dwattr $C$DW$122, DW_AT_location[DW_OP_reg12]
    1957              $C$DW$123       .dwtag  DW_TAG_formal_parameter, DW_AT_name("setptn")
    1958                      .dwattr $C$DW$123, DW_AT_TI_symbol_name("_setptn")
    1959                      .dwattr $C$DW$123, DW_AT_type(*$C$DW$T$22)
    1960                      .dwattr $C$DW$123, DW_AT_location[DW_OP_reg13]
    1961              ;*******************************************************************************
    1962              ;* FUNCTION NAME: _set_flg                                                     *
    1963              ;*                                                                             *
    1964              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,AC3,AC3,T0,T1,T2,AR0,XAR0,   *
    1965              ;*                        AR1,AR2,XAR2,AR3,XAR3,AR4,SP,TC1,M40,SATA,SATD,RDM,  *
    1966              ;*                        FRCT,SMUL                                            *
    1967              ;*   Save On Entry Regs : T2                                                   *
    1968              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    1969              ;*   Total Frame Size   : 6 words                                              *
    1970              ;*                        (1 return address/alignment)                         *
    1971              ;*                        (4 local values)                                     *
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   45

    1972              ;*                        (1 register save area)                               *
    1973              ;*   Min System Stack   : 1 word                                               *
    1974              ;*******************************************************************************
    1975 000709       __set_flg:
    1976 000709 5066          PSH T2
    1977 00070b 4EFC          AADD #-4, SP
    1978 00070d 6434          BCC $C$L66,T0 <= #0 ; |112| 
    1979                                                      ; branchcc occurs ; |112| 
    1980 00070f 3C29          MOV #2, AR1
    1981              
    1982 000711 1244          CMP T0 < AR1, TC1 ; |112| 
         000713 90   
    1983 000714 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    1984              
    1985 000715 63E4          BCC $C$L67,TC1 ; |112| 
    1986                                                      ; branchcc occurs ; |112| 
    1987 000717       $C$L66:    
    1988 000717 76FF          MOV #-18, T0 ; |113| 
         000719 EE48 
    1989 00071b 0601          B $C$L79  ; |113| 
         00071d 27   
    1990                                                      ; branch occurs ; |113| 
    1991 00071e       $C$L67:    
    1992 00071e A931          MOV *(#3), AR1 ; |115| 
         000720 0000 
         000722 03   
    1993 000723 7D08          AND #0x0800, AR1, T2 ; |115| 
         000725 0069 
    1994 000727 46B3       BSET ST1_INTM
    1995 000729 A931          MOV *(#(_flgcb_table+9)), AR1 ; |118| 
         00072b 0000 
         00072d 09-  
    1996 00072e 6599          BCC $C$L68,AR1 != #0 ; |118| 
    1997                                                      ; branchcc occurs ; |118| 
    1998 000730 76FF          MOV #-42, T0 ; |119| 
         000732 D648 
    1999 000734 6D06          BCC $C$L78,T2 == #0 ; |137| 
         000736 010B 
    2000                                                      ; branchcc occurs ; |137| 
    2001 000738 0601          B $C$L79  ; |137| 
         00073a 0A   
    2002                                                      ; branch occurs ; |137| 
    2003 00073b       $C$L68:    
    2004 00073b EC31          AMOV #_flgcb_table, XAR3 ; |121| 
         00073d BE00 
         00073f 0000-
    2005 000741 90B0          MOV XAR3, AC0
    2006 000743 DA6D          OR *AR3(#10), T1, AR1 ; |121| 
         000745 9500 
         000747 0A   
    2007 000748 C96D          MOV AR1, *AR3(#10) ; |121| 
         00074a 000A 
    2008 00074c ED61          MOV dbl(*AR3), XAR3
         00074e BF   
    2009 00074f EB00          MOV XAR3, dbl(*SP(#0))
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   46

         000751 B5   
    2010              
    2011 000752 ED00          MOV dbl(*SP(#0)), AC1 ; |123| 
         000754 18   
    2012 000755 1B00  ||      OR #0, AC0, AC2
         000757 20   
    2013              
    2014 000758 1210          CMPU AC1 == AC2, TC1 ; |124| 
         00075a 24   
    2015 00075b 6D64          BCC $C$L77,TC1 ; |124| 
         00075d 00E0 
    2016                                                      ; branchcc occurs ; |124| 
    2017 00075f       $C$L69:    
    2018 00075f       $C$DW$L$__set_flg$8$B:
    2019                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 124,column 0,is_
    2020 00075f ED00          MOV dbl(*SP(#0)), XAR2
         000761 AF   
    2021 000762 ED00          MOV dbl(*SP(#0)), XAR3
         000764 BF   
    2022 000765 AC31          MOV *(#(_flgcb_table+10)), AR4
         000767 0000 
         000769 0A-  
    2023 00076a ED41          MOV dbl(*AR2), XAR2
         00076c AF   
    2024 00076d DC6D          BTST #0, *AR3(#29), TC1 ; |56| 
         00076f 0000 
         000771 1D   
    2025 000772 A96D          MOV *AR3(#28), AR1 ; |128| 
         000774 001C 
    2026 000776 EB00          MOV XAR2, dbl(*SP(#0))
         000778 A5   
    2027 000779 66E4          BCC $C$L70,TC1 ; |56| 
    2028                                                      ; branchcc occurs ; |56| 
    2029 00077b       $C$DW$L$__set_flg$8$E:
    2030 00077b       $C$DW$L$__set_flg$9$B:
    2031 00077b 229A          MOV AR1, AR2 ; |59| 
    2032 00077d 28CA          AND AR4, AR2 ; |59| 
    2033              
    2034 00077f 12A0          CMPU AR2 == AR1, TC1 ; |59| 
         000781 94   
    2035 000782 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    2036              
    2037 000783 64E4          BCC $C$L71,TC1 ; |59| 
    2038                                                      ; branchcc occurs ; |59| 
    2039 000785       $C$DW$L$__set_flg$9$E:
    2040 000785       $C$DW$L$__set_flg$10$B:
    2041 000785 0600          B $C$L76  ; |59| 
         000787 AA   
    2042                                                      ; branch occurs ; |59| 
    2043 000788       $C$DW$L$__set_flg$10$E:
    2044 000788       $C$L70:    
    2045 000788       $C$DW$L$__set_flg$11$B:
    2046 000788 28C9          AND AR4, AR1 ; |57| 
    2047 00078a 6D09          BCC $C$L76,AR1 == #0 ; |57| 
         00078c 00A4 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   47

    2048                                                      ; branchcc occurs ; |57| 
    2049 00078e       $C$DW$L$__set_flg$11$E:
    2050 00078e       $C$L71:    
    2051 00078e       $C$DW$L$__set_flg$12$B:
    2052 00078e ED6D          MOV dbl(*AR3(#30)), XAR2
         000790 AF00 
         000792 1E   
    2053 000793 90B0          MOV XAR3, AC0
    2054 000795 CC41          MOV AR4, *AR2 ; |129| 
    2055 000797 E66D          MOV #0, *AR3(#32) ; |26| 
         000799 0000 
         00079b 20   
    2056 00079c 1426          AADD #38, AR3 ; |63| 
         00079e B4   
    2057 00079f 90B1          MOV XAR3, AC1
    2058 0007a1 900B          MOV AC0, XAR3
    2059 0007a3 ED6D          MOV dbl(*AR3(#38)), XAR3
         0007a5 BF00 
         0007a7 26   
    2060 0007a8 EB04          MOV XAR3, dbl(*SP(#2))
         0007aa B5   
    2061              
    2062 0007ab ED04          MOV dbl(*SP(#2)), AC2 ; |63| 
         0007ad 28   
    2063 0007ae 1B00  ||      OR #0, AC1, AC3
         0007b0 31   
    2064              
    2065 0007b1 1220          CMPU AC2 == AC3, TC1 ; |63| 
         0007b3 34   
    2066 0007b4 0464          BCC $C$L72,TC1 ; |63| 
         0007b6 1C   
    2067                                                      ; branchcc occurs ; |63| 
    2068 0007b7       $C$DW$L$__set_flg$12$E:
    2069 0007b7       $C$DW$L$__set_flg$13$B:
    2070 0007b7 900B          MOV AC0, XAR3
    2071 0007b9 ED6D          MOV dbl(*AR3(#40)), XAR2
         0007bb AF00 
         0007bd 28   
    2072 0007be ED04          MOV dbl(*SP(#2)), XAR3
         0007c0 BF   
    2073 0007c1 EB41          MOV XAR3, dbl(*AR2)
         0007c3 B5   
    2074 0007c4 900B          MOV AC0, XAR3
    2075 0007c6 ED6D          MOV dbl(*AR3(#40)), XAR2
         0007c8 AF00 
         0007ca 28   
    2076 0007cb 901B          MOV AC1, XAR3
    2077 0007cd ED61          MOV dbl(*AR3), XAR3
         0007cf BF   
    2078 0007d0 EB75          MOV XAR2, dbl(*AR3(short(#2)))
         0007d2 A5   
    2079 0007d3       $C$DW$L$__set_flg$13$E:
    2080 0007d3       $C$L72:    
    2081 0007d3       $C$DW$L$__set_flg$14$B:
    2082 0007d3 900B          MOV AC0, XAR3
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   48

    2083 0007d5 ED61          MOV dbl(*AR3), XAR3
         0007d7 BF   
    2084 0007d8 1A00          OR #0, AC0, AC2
         0007da 20   
    2085 0007db 90B1          MOV XAR3, AC1
    2086 0007dd 1A00          OR #0, AC1, AC3
         0007df 31   
    2087 0007e0 1230          CMPU AC3 == AC2, TC1 ; |63| 
         0007e2 24   
    2088 0007e3 0464          BCC $C$L73,TC1 ; |63| 
         0007e5 13   
    2089                                                      ; branchcc occurs ; |63| 
    2090 0007e6       $C$DW$L$__set_flg$14$E:
    2091 0007e6       $C$DW$L$__set_flg$15$B:
    2092 0007e6 900B          MOV AC0, XAR3
    2093 0007e8 ED75          MOV dbl(*AR3(short(#2))), XAR3
         0007ea BF   
    2094 0007eb EB61          MOV AC1, dbl(*AR3)
         0007ed 18   
    2095 0007ee 900B          MOV AC0, XAR3
    2096 0007f0 ED75          MOV dbl(*AR3(short(#2))), XAR2
         0007f2 AF   
    2097 0007f3 ED61          MOV dbl(*AR3), XAR3
         0007f5 BF   
    2098 0007f6 EB75          MOV XAR2, dbl(*AR3(short(#2)))
         0007f8 A5   
    2099 0007f9       $C$DW$L$__set_flg$15$E:
    2100 0007f9       $C$L73:    
    2101 0007f9       $C$DW$L$__set_flg$16$B:
    2102 0007f9 9008          MOV AC0, XAR0
    2103 0007fb F00D          CMP *AR0(#24) == #4, TC1 ; |40| 
         0007fd 0004 
         0007ff 0018 
    2104 000801 0464          BCC $C$L74,TC1 ; |40| 
         000803 17   
    2105                                                      ; branchcc occurs ; |40| 
    2106 000804       $C$DW$L$__set_flg$16$E:
    2107 000804       $C$DW$L$__set_flg$17$B:
    2108 000804 EC31          AMOV #_flgcb_table, XAR3 ; |131| 
         000806 BE00 
         000808 0000-
    2109 00080a 90B0          MOV XAR3, AC0
    2110 00080c DC6D          BTST #2, *AR3(#8), TC1 ; |131| 
         00080e 2000 
         000810 08   
    2111 000811 E60D          MOV #8, *AR0(#24) ; |43| 
         000813 0800 
         000815 18   
    2112 000816 0464          BCC $C$L75,TC1 ; |131| 
         000818 14   
    2113                                                      ; branchcc occurs ; |131| 
    2114 000819       $C$DW$L$__set_flg$17$E:
    2115 000819       $C$DW$L$__set_flg$18$B:
    2116 000819 4A17          B $C$L76  ; |131| 
    2117                                                      ; branch occurs ; |131| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   49

    2118              $C$DW$L$__set_flg$18$E:
    2119              $C$L74:    
    2120              $C$DW$L$__set_flg$19$B:
    2121              $C$DW$124       .dwtag  DW_TAG_TI_branch
    2122                      .dwattr $C$DW$124, DW_AT_low_pc(0x00)
    2123                      .dwattr $C$DW$124, DW_AT_name("_move_to_ready_state")
    2124                      .dwattr $C$DW$124, DW_AT_TI_call
    2125 00081b 08F7          CALL #_move_to_ready_state ; |41| 
         00081d FB   
    2126                                                      ; call occurs [#_move_to_ready_state] ; |41| 
    2127 00081e EC31          AMOV #_flgcb_table, XAR3 ; |131| 
         000820 BE00 
         000822 0000-
    2128 000824 DC6D          BTST #2, *AR3(#8), TC1 ; |131| 
         000826 2000 
         000828 08   
    2129 000829 90B0          MOV XAR3, AC0
    2130 00082b 62F4          BCC $C$L76,!TC1 ; |131| 
    2131                                                      ; branchcc occurs ; |131| 
    2132 00082d       $C$DW$L$__set_flg$19$E:
    2133 00082d       $C$L75:    
    2134 00082d       $C$DW$L$__set_flg$20$B:
    2135 00082d E66D          MOV #0, *AR3(#10) ; |132| 
         00082f 0000 
         000831 0A   
    2136 000832       $C$DW$L$__set_flg$20$E:
    2137 000832       $C$L76:    
    2138 000832       $C$DW$L$__set_flg$21$B:
    2139              
    2140 000832 ED00          MOV dbl(*SP(#0)), AC1
         000834 18   
    2141 000835 1B00  ||      OR #0, AC0, AC2
         000837 20   
    2142              
    2143 000838 121C          CMPU AC1 != AC2, TC1 ; |124| 
         00083a 24   
    2144                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 134,column 0,is_
    2145 00083b 6D64          BCC $C$L69,TC1 ; |124| 
         00083d FF20 
    2146                                                      ; branchcc occurs ; |124| 
    2147 00083f       $C$DW$L$__set_flg$21$E:
    2148 00083f       $C$L77:    
    2149 00083f 3C04          MOV #0, T0
    2150 000841 6116          BCC $C$L79,T2 != #0 ; |137| 
    2151                                                      ; branchcc occurs ; |137| 
    2152 000843       $C$L78:    
    2153 000843 46B2       BCLR ST1_INTM
    2154 000845       $C$L79:    
    2155 000845 4E04          AADD #4, SP
    2156 000847 5062          POP T2
    2157                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 139,column 1,is_
    2158              $C$DW$125       .dwtag  DW_TAG_TI_branch
    2159                      .dwattr $C$DW$125, DW_AT_low_pc(0x00)
    2160                      .dwattr $C$DW$125, DW_AT_TI_return
    2161 000849 4804          RET
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   50

    2162                                                      ; return occurs
    2163              
    2164              $C$DW$126       .dwtag  DW_TAG_TI_loop
    2165                      .dwattr $C$DW$126, DW_AT_name("/tmp/129924KNrf8:$C$L69:1:1739870196")
    2166                      .dwattr $C$DW$126, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflag
    2167                      .dwattr $C$DW$126, DW_AT_TI_begin_line(0x7c)
    2168                      .dwattr $C$DW$126, DW_AT_TI_end_line(0x86)
    2169              $C$DW$127       .dwtag  DW_TAG_TI_loop_range
    2170                      .dwattr $C$DW$127, DW_AT_low_pc($C$DW$L$__set_flg$8$B)
    2171                      .dwattr $C$DW$127, DW_AT_high_pc($C$DW$L$__set_flg$8$E)
    2172              $C$DW$128       .dwtag  DW_TAG_TI_loop_range
    2173                      .dwattr $C$DW$128, DW_AT_low_pc($C$DW$L$__set_flg$12$B)
    2174                      .dwattr $C$DW$128, DW_AT_high_pc($C$DW$L$__set_flg$12$E)
    2175              $C$DW$129       .dwtag  DW_TAG_TI_loop_range
    2176                      .dwattr $C$DW$129, DW_AT_low_pc($C$DW$L$__set_flg$13$B)
    2177                      .dwattr $C$DW$129, DW_AT_high_pc($C$DW$L$__set_flg$13$E)
    2178              $C$DW$130       .dwtag  DW_TAG_TI_loop_range
    2179                      .dwattr $C$DW$130, DW_AT_low_pc($C$DW$L$__set_flg$14$B)
    2180                      .dwattr $C$DW$130, DW_AT_high_pc($C$DW$L$__set_flg$14$E)
    2181              $C$DW$131       .dwtag  DW_TAG_TI_loop_range
    2182                      .dwattr $C$DW$131, DW_AT_low_pc($C$DW$L$__set_flg$15$B)
    2183                      .dwattr $C$DW$131, DW_AT_high_pc($C$DW$L$__set_flg$15$E)
    2184              $C$DW$132       .dwtag  DW_TAG_TI_loop_range
    2185                      .dwattr $C$DW$132, DW_AT_low_pc($C$DW$L$__set_flg$16$B)
    2186                      .dwattr $C$DW$132, DW_AT_high_pc($C$DW$L$__set_flg$16$E)
    2187              $C$DW$133       .dwtag  DW_TAG_TI_loop_range
    2188                      .dwattr $C$DW$133, DW_AT_low_pc($C$DW$L$__set_flg$17$B)
    2189                      .dwattr $C$DW$133, DW_AT_high_pc($C$DW$L$__set_flg$17$E)
    2190              $C$DW$134       .dwtag  DW_TAG_TI_loop_range
    2191                      .dwattr $C$DW$134, DW_AT_low_pc($C$DW$L$__set_flg$9$B)
    2192                      .dwattr $C$DW$134, DW_AT_high_pc($C$DW$L$__set_flg$9$E)
    2193              $C$DW$135       .dwtag  DW_TAG_TI_loop_range
    2194                      .dwattr $C$DW$135, DW_AT_low_pc($C$DW$L$__set_flg$10$B)
    2195                      .dwattr $C$DW$135, DW_AT_high_pc($C$DW$L$__set_flg$10$E)
    2196              $C$DW$136       .dwtag  DW_TAG_TI_loop_range
    2197                      .dwattr $C$DW$136, DW_AT_low_pc($C$DW$L$__set_flg$11$B)
    2198                      .dwattr $C$DW$136, DW_AT_high_pc($C$DW$L$__set_flg$11$E)
    2199              $C$DW$137       .dwtag  DW_TAG_TI_loop_range
    2200                      .dwattr $C$DW$137, DW_AT_low_pc($C$DW$L$__set_flg$18$B)
    2201                      .dwattr $C$DW$137, DW_AT_high_pc($C$DW$L$__set_flg$18$E)
    2202              $C$DW$138       .dwtag  DW_TAG_TI_loop_range
    2203                      .dwattr $C$DW$138, DW_AT_low_pc($C$DW$L$__set_flg$19$B)
    2204                      .dwattr $C$DW$138, DW_AT_high_pc($C$DW$L$__set_flg$19$E)
    2205              $C$DW$139       .dwtag  DW_TAG_TI_loop_range
    2206                      .dwattr $C$DW$139, DW_AT_low_pc($C$DW$L$__set_flg$20$B)
    2207                      .dwattr $C$DW$139, DW_AT_high_pc($C$DW$L$__set_flg$20$E)
    2208              $C$DW$140       .dwtag  DW_TAG_TI_loop_range
    2209                      .dwattr $C$DW$140, DW_AT_low_pc($C$DW$L$__set_flg$21$B)
    2210                      .dwattr $C$DW$140, DW_AT_high_pc($C$DW$L$__set_flg$21$E)
    2211                      .dwendtag $C$DW$126
    2212              
    2213                      .dwattr $C$DW$121, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.
    2214                      .dwattr $C$DW$121, DW_AT_TI_end_line(0x8b)
    2215                      .dwattr $C$DW$121, DW_AT_TI_end_column(0x01)
    2216                      .dwendtag $C$DW$121
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   51

    2217              
    2218 00084b               .sect   ".text"
    2219                      .global _set_flg
    2220              
    2221              $C$DW$141       .dwtag  DW_TAG_subprogram, DW_AT_name("set_flg")
    2222                      .dwattr $C$DW$141, DW_AT_low_pc(_set_flg)
    2223                      .dwattr $C$DW$141, DW_AT_high_pc(0x00)
    2224                      .dwattr $C$DW$141, DW_AT_TI_symbol_name("_set_flg")
    2225                      .dwattr $C$DW$141, DW_AT_external
    2226                      .dwattr $C$DW$141, DW_AT_type(*$C$DW$T$65)
    2227                      .dwattr $C$DW$141, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflag
    2228                      .dwattr $C$DW$141, DW_AT_TI_begin_line(0x92)
    2229                      .dwattr $C$DW$141, DW_AT_TI_begin_column(0x04)
    2230                      .dwattr $C$DW$141, DW_AT_TI_max_frame_size(0x02)
    2231                      .dwattr $C$DW$141, DW_AT_frame_base[DW_OP_bregx 0x24 2]
    2232                      .dwattr $C$DW$141, DW_AT_TI_skeletal
    2233                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 147,column 1,is_
    2234              $C$DW$142       .dwtag  DW_TAG_formal_parameter, DW_AT_name("flgid")
    2235                      .dwattr $C$DW$142, DW_AT_TI_symbol_name("_flgid")
    2236                      .dwattr $C$DW$142, DW_AT_type(*$C$DW$T$38)
    2237                      .dwattr $C$DW$142, DW_AT_location[DW_OP_reg12]
    2238              $C$DW$143       .dwtag  DW_TAG_formal_parameter, DW_AT_name("setptn")
    2239                      .dwattr $C$DW$143, DW_AT_TI_symbol_name("_setptn")
    2240                      .dwattr $C$DW$143, DW_AT_type(*$C$DW$T$22)
    2241                      .dwattr $C$DW$143, DW_AT_location[DW_OP_reg13]
    2242              ;*******************************************************************************
    2243              ;* FUNCTION NAME: set_flg                                                      *
    2244              ;*                                                                             *
    2245              ;*   Function Uses Regs : T0,T1,SP,M40,SATA,SATD,RDM,FRCT,SMUL                 *
    2246              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    2247              ;*   Total Frame Size   : 2 words                                              *
    2248              ;*                        (2 return address/alignment)                         *
    2249              ;*   Min System Stack   : 1 word                                               *
    2250              ;*******************************************************************************
    2251 00084b       _set_flg:
    2252 00084b 4EFF          AADD #-1, SP
    2253              $C$DW$144       .dwtag  DW_TAG_TI_branch
    2254                      .dwattr $C$DW$144, DW_AT_low_pc(0x00)
    2255                      .dwattr $C$DW$144, DW_AT_name("__set_flg")
    2256                      .dwattr $C$DW$144, DW_AT_TI_call
    2257 00084d 08FE          CALL #__set_flg ; |149| 
         00084f B9   
    2258                                                      ; call occurs [#__set_flg] ; |149| 
    2259 000850 951F     INTR #31
    2260 000852 4E01          AADD #1, SP
    2261                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 152,column 1,is_
    2262              $C$DW$145       .dwtag  DW_TAG_TI_branch
    2263                      .dwattr $C$DW$145, DW_AT_low_pc(0x00)
    2264                      .dwattr $C$DW$145, DW_AT_TI_return
    2265 000854 4804          RET
    2266                                                      ; return occurs
    2267                      .dwattr $C$DW$141, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.
    2268                      .dwattr $C$DW$141, DW_AT_TI_end_line(0x98)
    2269                      .dwattr $C$DW$141, DW_AT_TI_end_column(0x01)
    2270                      .dwendtag $C$DW$141
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   52

    2271              
    2272 000856               .sect   ".text"
    2273                      .global _rsm_tsk
    2274              
    2275              $C$DW$146       .dwtag  DW_TAG_subprogram, DW_AT_name("rsm_tsk")
    2276                      .dwattr $C$DW$146, DW_AT_low_pc(_rsm_tsk)
    2277                      .dwattr $C$DW$146, DW_AT_high_pc(0x00)
    2278                      .dwattr $C$DW$146, DW_AT_TI_symbol_name("_rsm_tsk")
    2279                      .dwattr $C$DW$146, DW_AT_external
    2280                      .dwattr $C$DW$146, DW_AT_type(*$C$DW$T$65)
    2281                      .dwattr $C$DW$146, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_s
    2282                      .dwattr $C$DW$146, DW_AT_TI_begin_line(0x46)
    2283                      .dwattr $C$DW$146, DW_AT_TI_begin_column(0x04)
    2284                      .dwattr $C$DW$146, DW_AT_TI_max_frame_size(0x02)
    2285                      .dwattr $C$DW$146, DW_AT_frame_base[DW_OP_bregx 0x24 2]
    2286                      .dwattr $C$DW$146, DW_AT_TI_skeletal
    2287                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_syn.c",line 71,column 1,is_
    2288              $C$DW$147       .dwtag  DW_TAG_formal_parameter, DW_AT_name("tskid")
    2289                      .dwattr $C$DW$147, DW_AT_TI_symbol_name("_tskid")
    2290                      .dwattr $C$DW$147, DW_AT_type(*$C$DW$T$38)
    2291                      .dwattr $C$DW$147, DW_AT_location[DW_OP_reg12]
    2292              ;*******************************************************************************
    2293              ;* FUNCTION NAME: rsm_tsk                                                      *
    2294              ;*                                                                             *
    2295              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,T0,T2,AR0,XAR0,AR1,AR2,AR3,XAR3,SP,  *
    2296              ;*                        CARRY,TC1,M40,SATA,SATD,RDM,FRCT,SMUL                *
    2297              ;*   Save On Entry Regs : T2                                                   *
    2298              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    2299              ;*   Total Frame Size   : 2 words                                              *
    2300              ;*                        (1 return address/alignment)                         *
    2301              ;*                        (1 register save area)                               *
    2302              ;*   Min System Stack   : 1 word                                               *
    2303              ;*******************************************************************************
    2304 000856       _rsm_tsk:
    2305 000856 3C29          MOV #2, AR1
    2306              
    2307 000858 1294          CMP T0 > AR1, TC1 ; |75| 
         00085a 40   
    2308 00085b 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    2309              
    2310 00085c 5066          PSH T2
    2311 00085e 0464          BCC $C$L80,TC1 ; |75| 
         000860 12   
    2312                                                      ; branchcc occurs ; |75| 
    2313 000861 0414          BCC $C$L82,T0 != #0 ; |75| 
         000863 1E   
    2314                                                      ; branchcc occurs ; |75| 
    2315 000864 ED31          MOV dbl(*(#_runtsk)), XAR3
         000866 BF00 
         000868 000C-
    2316              
    2317 00086a 90B0          MOV XAR3, AC0
    2318 00086c 3D01  ||      MOV #0, AC1 ; |75| 
    2319              
    2320 00086e 121C          CMPU AC1 != AC0, TC1 ; |75| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   53

         000870 04   
    2321 000871 63E4          BCC $C$L81,TC1 ; |75| 
    2322                                                      ; branchcc occurs ; |75| 
    2323 000873       $C$L80:    
    2324 000873 76FF          MOV #-18, T0 ; |77| 
         000875 EE48 
    2325 000877 0600          B $C$L91  ; |77| 
         000879 7A   
    2326                                                      ; branch occurs ; |77| 
    2327 00087a       $C$L81:    
    2328 00087a ED31          MOV dbl(*(#_runtsk)), XAR0
         00087c 8F00 
         00087e 000C-
    2329 000880 4A18          B $C$L83  ; |79| 
    2330                                                      ; branch occurs ; |79| 
    2331 000882       $C$L82:    
    2332 000882 7C00          SUB #1, T0, AR1 ; |79| 
         000884 0194 
    2333 000886 2290          MOV AR1, AC0
    2334 000888 1045          SFTS AC0, #4, AC1 ; |79| 
         00088a 04   
    2335 00088b 1043          ADD AC0 << #5, AC1 ; |79| 
         00088d 05   
    2336 00088e 7A00          MOV #(_tcb_table >> 16) << #16, AC0 ; |79| 
         000890 000A%
    2337 000892 7E00          OR #(_tcb_table & 0xffff), AC0, AC0 ; |79| 
         000894 0000%
    2338 000896 2410          ADD AC1, AC0 ; |79| 
    2339 000898 9008          MOV AC0, XAR0
    2340 00089a       $C$L83:    
    2341 00089a A931          MOV *(#3), AR1 ; |81| 
         00089c 0000 
         00089e 03   
    2342 00089f 7D08          AND #0x0800, AR1, T2 ; |81| 
         0008a1 0069 
    2343 0008a3 46B3       BSET ST1_INTM
    2344 0008a5 A90D          MOV *AR0(#24), AR1 ; |82| 
         0008a7 0018 
    2345 0008a9 6499          BCC $C$L84,AR1 != #0 ; |82| 
    2346                                                      ; branchcc occurs ; |82| 
    2347 0008ab 76FF          MOV #-42, T0 ; |83| 
         0008ad D648 
    2348 0008af 0406          BCC $C$L89,T2 == #0 ; |95| 
         0008b1 3E   
    2349                                                      ; branchcc occurs ; |95| 
    2350 0008b2 4A3E          B $C$L90  ; |95| 
    2351                                                      ; branch occurs ; |95| 
    2352 0008b4       $C$L84:    
    2353 0008b4 3C8A          MOV #8, AR2
    2354              
    2355 0008b6 1290          CMPU AR1 == AR2, TC1 ; |84| 
         0008b8 A4   
    2356 0008b9 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    2357              
    2358 0008ba 64E4          BCC $C$L85,TC1 ; |84| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   54

    2359                                                      ; branchcc occurs ; |84| 
    2360 0008bc 3CCA          MOV #12, AR2
    2361              
    2362 0008be 129C          CMPU AR1 != AR2, TC1 ; |84| 
         0008c0 A4   
    2363 0008c1 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    2364              
    2365 0008c2 0464          BCC $C$L88,TC1 ; |84| 
         0008c4 25   
    2366                                                      ; branchcc occurs ; |84| 
    2367 0008c5       $C$L85:    
    2368 0008c5 AA0D          MOV *AR0(#34), AR2 ; |87| 
         0008c7 0022 
    2369 0008c9 421A          SUB #1, AR2, AR2 ; |87| 
    2370 0008cb CA0D          MOV AR2, *AR0(#34) ; |87| 
         0008cd 0022 
    2371 0008cf 041A          BCC $C$L87,AR2 != #0 ; |87| 
         0008d1 12   
    2372                                                      ; branchcc occurs ; |87| 
    2373 0008d2 3CCA          MOV #12, AR2
    2374              
    2375 0008d4 1290          CMPU AR1 == AR2, TC1 ; |88| 
         0008d6 A4   
    2376 0008d7 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    2377              
    2378 0008d8 62E4          BCC $C$L86,TC1 ; |88| 
    2379                                                      ; branchcc occurs ; |88| 
    2380              $C$DW$148       .dwtag  DW_TAG_TI_branch
    2381                      .dwattr $C$DW$148, DW_AT_low_pc(0x00)
    2382                      .dwattr $C$DW$148, DW_AT_name("_move_to_ready_state")
    2383                      .dwattr $C$DW$148, DW_AT_TI_call
    2384 0008da 08F7          CALL #_move_to_ready_state ; |91| 
         0008dc 3C   
    2385                                                      ; call occurs [#_move_to_ready_state] ; |91| 
    2386 0008dd 4A05          B $C$L87  ; |91| 
    2387                                                      ; branch occurs ; |91| 
    2388 0008df       $C$L86:    
    2389 0008df E60D          MOV #4, *AR0(#24) ; |89| 
         0008e1 0400 
         0008e3 18   
    2390 0008e4       $C$L87:    
    2391 0008e4 3C04          MOV #0, T0
    2392 0008e6 6406          BCC $C$L89,T2 == #0 ; |95| 
    2393                                                      ; branchcc occurs ; |95| 
    2394 0008e8 4A08          B $C$L90  ; |95| 
    2395                                                      ; branch occurs ; |95| 
    2396 0008ea       $C$L88:    
    2397 0008ea 76FF          MOV #-41, T0 ; |85| 
         0008ec D748 
    2398 0008ee 6116          BCC $C$L90,T2 != #0 ; |95| 
    2399                                                      ; branchcc occurs ; |95| 
    2400 0008f0       $C$L89:    
    2401 0008f0 46B2       BCLR ST1_INTM
    2402 0008f2       $C$L90:    
    2403 0008f2 951F     INTR #31
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   55

    2404 0008f4       $C$L91:    
    2405 0008f4 5062          POP T2
    2406                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_syn.c",line 98,column 1,is_
    2407              $C$DW$149       .dwtag  DW_TAG_TI_branch
    2408                      .dwattr $C$DW$149, DW_AT_low_pc(0x00)
    2409                      .dwattr $C$DW$149, DW_AT_TI_return
    2410 0008f6 4804          RET
    2411                                                      ; return occurs
    2412                      .dwattr $C$DW$146, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_syn
    2413                      .dwattr $C$DW$146, DW_AT_TI_end_line(0x62)
    2414                      .dwattr $C$DW$146, DW_AT_TI_end_column(0x01)
    2415                      .dwendtag $C$DW$146
    2416              
    2417 0008f8               .sect   ".text"
    2418                      .global _rotate_ready_queue_run
    2419              
    2420              $C$DW$150       .dwtag  DW_TAG_subprogram, DW_AT_name("rotate_ready_queue_run")
    2421                      .dwattr $C$DW$150, DW_AT_low_pc(_rotate_ready_queue_run)
    2422                      .dwattr $C$DW$150, DW_AT_high_pc(0x00)
    2423                      .dwattr $C$DW$150, DW_AT_TI_symbol_name("_rotate_ready_queue_run")
    2424                      .dwattr $C$DW$150, DW_AT_external
    2425                      .dwattr $C$DW$150, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
    2426                      .dwattr $C$DW$150, DW_AT_TI_begin_line(0x9d)
    2427                      .dwattr $C$DW$150, DW_AT_TI_begin_column(0x06)
    2428                      .dwattr $C$DW$150, DW_AT_TI_max_frame_size(0x01)
    2429                      .dwattr $C$DW$150, DW_AT_frame_base[DW_OP_bregx 0x24 1]
    2430                      .dwattr $C$DW$150, DW_AT_TI_skeletal
    2431                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 158,column 1,is_stmt,a
    2432              ;*******************************************************************************
    2433              ;* FUNCTION NAME: rotate_ready_queue_run                                       *
    2434              ;*                                                                             *
    2435              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,AC3,AC3,AR1,XAR1,AR2,XAR2,   *
    2436              ;*                        AR3,XAR3,AR4,XAR4,SP,CARRY,TC1,M40,SATA,SATD,RDM,    *
    2437              ;*                        FRCT,SMUL                                            *
    2438              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    2439              ;*   Total Frame Size   : 1 word                                               *
    2440              ;*                        (1 return address/alignment)                         *
    2441              ;*   Min System Stack   : 1 word                                               *
    2442              ;*******************************************************************************
    2443 0008f8       _rotate_ready_queue_run:
    2444 0008f8 ED31          MOV dbl(*(#_schedtsk)), XAR3
         0008fa BF00 
         0008fc 000E-
    2445 0008fe 90B0          MOV XAR3, AC0
    2446 000900 0400          BCC $C$L93,AC0 == #0 ; |159| 
         000902 71   
    2447                                                      ; branchcc occurs ; |159| 
    2448 000903 EC31          AMOV #_ready_queue, XAR4 ; |220| 
         000905 CE00 
         000907 0074-
    2449 000909 A031          MOV *(#_ready_queue), AC0 ; |220| 
         00090b 0000 
         00090d 74-  
    2450 00090e 90C1          MOV XAR4, AC1
    2451 000910 1005          SFTS AC0, #2, AC0 ; |220| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   56

         000912 02   
    2452 000913 4020          ADD #2, AC0 ; |220| 
    2453 000915 2401          ADD AC0, AC1 ; |220| 
    2454 000917 901B          MOV AC1, XAR3
    2455 000919 ED61          MOV dbl(*AR3), XAR3
         00091b BF   
    2456 00091c 1A00          OR #0, AC1, AC2
         00091e 21   
    2457 00091f 90B0          MOV XAR3, AC0
    2458 000921 1A00          OR #0, AC0, AC3
         000923 30   
    2459 000924 1230          CMPU AC3 == AC2, TC1 ; |110| 
         000926 24   
    2460 000927 0464          BCC $C$L92,TC1 ; |110| 
         000929 34   
    2461                                                      ; branchcc occurs ; |110| 
    2462 00092a 900A          MOV AC0, XAR2
    2463 00092c 901B          MOV AC1, XAR3
    2464 00092e 8041          MOV dbl(*AR2), dbl(*AR3)
         000930 80   
    2465 000931 ED41          MOV dbl(*AR2), XAR1
         000933 9F   
    2466 000934 EB35          MOV XAR3, dbl(*AR1(short(#2)))
         000936 B5   
    2467 000937 ED75          MOV dbl(*AR3(short(#2))), XAR1
         000939 9F   
    2468 00093a EB55          MOV XAR1, dbl(*AR2(short(#2)))
         00093c 95   
    2469 00093d EB41          MOV XAR3, dbl(*AR2)
         00093f B5   
    2470 000940 ED75          MOV dbl(*AR3(short(#2))), XAR1
         000942 9F   
    2471 000943 EB21          MOV XAR2, dbl(*AR1)
         000945 A5   
    2472 000946 A031          MOV *(#_ready_queue), AC0
         000948 0000 
         00094a 74-  
    2473 00094b 1045          SFTS AC0, #2, AC1
         00094d 02   
    2474 00094e 4021          ADD #2, AC1
    2475 000950 90C0          MOV XAR4, AC0
    2476              
    2477 000955 2510          ADD AC1, AC0
    2478 000952 EB75  ||      MOV XAR2, dbl(*AR3(short(#2)))
         000954 A5   
    2479              
    2480 000957 900B          MOV AC0, XAR3
    2481 000959 ED61          MOV dbl(*AR3), XAR3
         00095b BF   
    2482 00095c 90B0          MOV XAR3, AC0
    2483 00095e       $C$L92:    
    2484 00095e ED31          MOV dbl(*(#_schedtsk)), XAR3
         000960 BF00 
         000962 000E-
    2485 000964 1A00          OR #0, AC0, AC2
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   57

         000966 20   
    2486 000967 90B1          MOV XAR3, AC1
    2487 000969 1210          CMPU AC1 == AC2, TC1 ; |109| 
         00096b 24   
    2488 00096c 9674          XCC !TC1
    2489 00096e EB31             MOV AC0, dbl(*(#_schedtsk))
         000970 0800 
         000972 000E-
    2490 000974       $C$L93:    
    2491                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 165,column 1,is_stmt
    2492              $C$DW$151       .dwtag  DW_TAG_TI_branch
    2493                      .dwattr $C$DW$151, DW_AT_low_pc(0x00)
    2494                      .dwattr $C$DW$151, DW_AT_TI_return
    2495 000974 4804          RET
    2496                                                      ; return occurs
    2497                      .dwattr $C$DW$150, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
    2498                      .dwattr $C$DW$150, DW_AT_TI_end_line(0xa5)
    2499                      .dwattr $C$DW$150, DW_AT_TI_end_column(0x01)
    2500                      .dwendtag $C$DW$150
    2501              
    2502 000976               .sect   ".text"
    2503                      .global _rotate_ready_queue
    2504              
    2505              $C$DW$152       .dwtag  DW_TAG_subprogram, DW_AT_name("rotate_ready_queue")
    2506                      .dwattr $C$DW$152, DW_AT_low_pc(_rotate_ready_queue)
    2507                      .dwattr $C$DW$152, DW_AT_high_pc(0x00)
    2508                      .dwattr $C$DW$152, DW_AT_TI_symbol_name("_rotate_ready_queue")
    2509                      .dwattr $C$DW$152, DW_AT_external
    2510                      .dwattr $C$DW$152, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
    2511                      .dwattr $C$DW$152, DW_AT_TI_begin_line(0x94)
    2512                      .dwattr $C$DW$152, DW_AT_TI_begin_column(0x06)
    2513                      .dwattr $C$DW$152, DW_AT_TI_max_frame_size(0x01)
    2514                      .dwattr $C$DW$152, DW_AT_frame_base[DW_OP_bregx 0x24 1]
    2515                      .dwattr $C$DW$152, DW_AT_TI_skeletal
    2516                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 149,column 1,is_stmt,a
    2517              $C$DW$153       .dwtag  DW_TAG_formal_parameter, DW_AT_name("priority")
    2518                      .dwattr $C$DW$153, DW_AT_TI_symbol_name("_priority")
    2519                      .dwattr $C$DW$153, DW_AT_type(*$C$DW$T$44)
    2520                      .dwattr $C$DW$153, DW_AT_location[DW_OP_reg12]
    2521              ;*******************************************************************************
    2522              ;* FUNCTION NAME: rotate_ready_queue                                           *
    2523              ;*                                                                             *
    2524              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,AC3,AC3,T0,AR1,XAR1,AR2,XAR2,*
    2525              ;*                        AR3,XAR3,AR4,XAR4,SP,CARRY,TC1,M40,SATA,SATD,RDM,    *
    2526              ;*                        FRCT,SMUL                                            *
    2527              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    2528              ;*   Total Frame Size   : 1 word                                               *
    2529              ;*                        (1 return address/alignment)                         *
    2530              ;*   Min System Stack   : 1 word                                               *
    2531              ;*******************************************************************************
    2532 000976       _rotate_ready_queue:
    2533 000976 EC31          AMOV #_ready_queue, XAR2 ; |110| 
         000978 AE00 
         00097a 0074-
    2534 00097c 2241          MOV T0, AC1
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   58

    2535 00097e 90A0          MOV XAR2, AC0
    2536 000980 1055          SFTS AC1, #2, AC1 ; |110| 
         000982 02   
    2537 000983 4021          ADD #2, AC1 ; |110| 
    2538 000985 2410          ADD AC1, AC0 ; |110| 
    2539 000987 900B          MOV AC0, XAR3
    2540 000989 ED61          MOV dbl(*AR3), XAR3
         00098b BF   
    2541 00098c 1A00          OR #0, AC0, AC2
         00098e 20   
    2542 00098f 90B1          MOV XAR3, AC1
    2543 000991 1A00          OR #0, AC1, AC3
         000993 31   
    2544 000994 1230          CMPU AC3 == AC2, TC1 ; |110| 
         000996 24   
    2545 000997 0464          BCC $C$L94,TC1 ; |110| 
         000999 25   
    2546                                                      ; branchcc occurs ; |110| 
    2547 00099a 900C          MOV AC0, XAR4
    2548 00099c 8062          MOV dbl(*AR3), dbl(*AR4)
         00099e 00   
    2549 00099f ED61          MOV dbl(*AR3), XAR4
         0009a1 CF   
    2550 0009a2 9009          MOV AC0, XAR1
    2551 0009a4 EB95          MOV XAR1, dbl(*AR4(short(#2)))
         0009a6 95   
    2552 0009a7 900C          MOV AC0, XAR4
    2553 0009a9 ED95          MOV dbl(*AR4(short(#2))), XAR4
         0009ab CF   
    2554 0009ac EB75          MOV XAR4, dbl(*AR3(short(#2)))
         0009ae C5   
    2555 0009af 900C          MOV AC0, XAR4
    2556 0009b1 ED95          MOV dbl(*AR4(short(#2))), XAR4
         0009b3 CF   
    2557 0009b4 EB61          MOV XAR1, dbl(*AR3)
         0009b6 95   
    2558 0009b7 EB81          MOV XAR3, dbl(*AR4)
         0009b9 B5   
    2559 0009ba 900C          MOV AC0, XAR4
    2560 0009bc EB95          MOV XAR3, dbl(*AR4(short(#2)))
         0009be B5   
    2561 0009bf       $C$L94:    
    2562 0009bf A031          MOV *(#_ready_queue), AC0 ; |109| 
         0009c1 0000 
         0009c3 74-  
    2563 0009c4 1045          SFTS AC0, #2, AC1 ; |109| 
         0009c6 02   
    2564 0009c7 4021          ADD #2, AC1 ; |109| 
    2565 0009c9 90A0          MOV XAR2, AC0
    2566 0009cb 2410          ADD AC1, AC0 ; |109| 
    2567 0009cd 900B          MOV AC0, XAR3
    2568 0009cf ED61          MOV dbl(*AR3), XAR3
         0009d1 BF   
    2569 0009d2 90B0          MOV XAR3, AC0
    2570 0009d4 ED31          MOV dbl(*(#_schedtsk)), XAR3
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   59

         0009d6 BF00 
         0009d8 000E-
    2571 0009da 1A00          OR #0, AC0, AC2
         0009dc 20   
    2572 0009dd 90B1          MOV XAR3, AC1
    2573 0009df 1210          CMPU AC1 == AC2, TC1 ; |109| 
         0009e1 24   
    2574 0009e2 9674          XCC !TC1
    2575 0009e4 EB31             MOV AC0, dbl(*(#_schedtsk))
         0009e6 0800 
         0009e8 000E-
    2576                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 152,column 1,is_stmt
    2577              $C$DW$154       .dwtag  DW_TAG_TI_branch
    2578                      .dwattr $C$DW$154, DW_AT_low_pc(0x00)
    2579                      .dwattr $C$DW$154, DW_AT_TI_return
    2580 0009ea 4804          RET
    2581                                                      ; return occurs
    2582                      .dwattr $C$DW$152, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
    2583                      .dwattr $C$DW$152, DW_AT_TI_end_line(0x98)
    2584                      .dwattr $C$DW$152, DW_AT_TI_end_column(0x01)
    2585                      .dwendtag $C$DW$152
    2586              
    2587 0009ec               .sect   ".text"
    2588                      .global _ref_flg
    2589              
    2590              $C$DW$155       .dwtag  DW_TAG_subprogram, DW_AT_name("ref_flg")
    2591                      .dwattr $C$DW$155, DW_AT_low_pc(_ref_flg)
    2592                      .dwattr $C$DW$155, DW_AT_high_pc(0x00)
    2593                      .dwattr $C$DW$155, DW_AT_TI_symbol_name("_ref_flg")
    2594                      .dwattr $C$DW$155, DW_AT_external
    2595                      .dwattr $C$DW$155, DW_AT_type(*$C$DW$T$65)
    2596                      .dwattr $C$DW$155, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflag
    2597                      .dwattr $C$DW$155, DW_AT_TI_begin_line(0xe7)
    2598                      .dwattr $C$DW$155, DW_AT_TI_begin_column(0x04)
    2599                      .dwattr $C$DW$155, DW_AT_TI_max_frame_size(0x01)
    2600                      .dwattr $C$DW$155, DW_AT_frame_base[DW_OP_bregx 0x24 1]
    2601                      .dwattr $C$DW$155, DW_AT_TI_skeletal
    2602                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 232,column 1,is_
    2603              $C$DW$156       .dwtag  DW_TAG_formal_parameter, DW_AT_name("flgid")
    2604                      .dwattr $C$DW$156, DW_AT_TI_symbol_name("_flgid")
    2605                      .dwattr $C$DW$156, DW_AT_type(*$C$DW$T$38)
    2606                      .dwattr $C$DW$156, DW_AT_location[DW_OP_reg12]
    2607              $C$DW$157       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pk_rflg")
    2608                      .dwattr $C$DW$157, DW_AT_TI_symbol_name("_pk_rflg")
    2609                      .dwattr $C$DW$157, DW_AT_type(*$C$DW$T$135)
    2610                      .dwattr $C$DW$157, DW_AT_location[DW_OP_reg17]
    2611              ;*******************************************************************************
    2612              ;* FUNCTION NAME: ref_flg                                                      *
    2613              ;*                                                                             *
    2614              ;*   Function Uses Regs : T0,AR0,XAR0,AR1,AR2,SP,TC1,M40,SATA,SATD,RDM,FRCT,   *
    2615              ;*                        SMUL                                                 *
    2616              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    2617              ;*   Total Frame Size   : 1 word                                               *
    2618              ;*                        (1 return address/alignment)                         *
    2619              ;*   Min System Stack   : 1 word                                               *
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   60

    2620              ;*******************************************************************************
    2621 0009ec       _ref_flg:
    2622 0009ec 6434          BCC $C$L95,T0 <= #0 ; |236| 
    2623                                                      ; branchcc occurs ; |236| 
    2624 0009ee 3C29          MOV #2, AR1
    2625              
    2626 0009f0 1244          CMP T0 < AR1, TC1 ; |236| 
         0009f2 90   
    2627 0009f3 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    2628              
    2629 0009f4 6364          BCC $C$L96,TC1 ; |236| 
    2630                                                      ; branchcc occurs ; |236| 
    2631 0009f6       $C$L95:    
    2632 0009f6 76FF          MOV #-18, T0 ; |237| 
         0009f8 EE48 
    2633 0009fa 4A2F          B $C$L99  ; |237| 
    2634                                                      ; branch occurs ; |237| 
    2635 0009fc       $C$L96:    
    2636 0009fc A931          MOV *(#3), AR1 ; |241| 
         0009fe 0000 
         000a00 03   
    2637 000a01 7D08          AND #0x0800, AR1, AR1 ; |241| 
         000a03 0099 
    2638 000a05 46B3       BSET ST1_INTM
    2639 000a07 AA31          MOV *(#(_flgcb_table+9)), AR2 ; |242| 
         000a09 0000 
         000a0b 09-  
    2640 000a0c 649A          BCC $C$L97,AR2 != #0 ; |242| 
    2641                                                      ; branchcc occurs ; |242| 
    2642 000a0e 76FF          MOV #-42, T0 ; |243| 
         000a10 D648 
    2643 000a12 0409          BCC $C$L98,AR1 == #0 ; |249| 
         000a14 14   
    2644                                                      ; branchcc occurs ; |249| 
    2645 000a15 4A14          B $C$L99  ; |249| 
    2646                                                      ; branch occurs ; |249| 
    2647 000a17       $C$L97:    
    2648 000a17 AA31          MOV *(#(_flgcb_table+4)), AR2 ; |245| 
         000a19 0000 
         000a1b 04-  
    2649              
    2650 000a1e 3D04          MOV #0, T0
    2651 000a1c CA01  ||      MOV AR2, *AR0 ; |245| 
    2652              
    2653 000a20 AA31          MOV *(#(_flgcb_table+10)), AR2 ; |246| 
         000a22 0000 
         000a24 0A-  
    2654 000a25 CA13          MOV AR2, *AR0(short(#1)) ; |246| 
    2655 000a27 6119          BCC $C$L99,AR1 != #0 ; |249| 
    2656                                                      ; branchcc occurs ; |249| 
    2657 000a29       $C$L98:    
    2658 000a29 46B2       BCLR ST1_INTM
    2659 000a2b       $C$L99:    
    2660                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 252,column 1,is_
    2661              $C$DW$158       .dwtag  DW_TAG_TI_branch
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   61

    2662                      .dwattr $C$DW$158, DW_AT_low_pc(0x00)
    2663                      .dwattr $C$DW$158, DW_AT_TI_return
    2664 000a2b 4804          RET
    2665                                                      ; return occurs
    2666                      .dwattr $C$DW$155, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.
    2667                      .dwattr $C$DW$155, DW_AT_TI_end_line(0xfc)
    2668                      .dwattr $C$DW$155, DW_AT_TI_end_column(0x01)
    2669                      .dwendtag $C$DW$155
    2670              
    2671 000a2d               .sect   ".text"
    2672                      .global _pol_flg
    2673              
    2674              $C$DW$159       .dwtag  DW_TAG_subprogram, DW_AT_name("pol_flg")
    2675                      .dwattr $C$DW$159, DW_AT_low_pc(_pol_flg)
    2676                      .dwattr $C$DW$159, DW_AT_high_pc(0x00)
    2677                      .dwattr $C$DW$159, DW_AT_TI_symbol_name("_pol_flg")
    2678                      .dwattr $C$DW$159, DW_AT_external
    2679                      .dwattr $C$DW$159, DW_AT_type(*$C$DW$T$65)
    2680                      .dwattr $C$DW$159, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflag
    2681                      .dwattr $C$DW$159, DW_AT_TI_begin_line(0xe0)
    2682                      .dwattr $C$DW$159, DW_AT_TI_begin_column(0x04)
    2683                      .dwattr $C$DW$159, DW_AT_TI_max_frame_size(0x02)
    2684                      .dwattr $C$DW$159, DW_AT_frame_base[DW_OP_bregx 0x24 2]
    2685                      .dwattr $C$DW$159, DW_AT_TI_skeletal
    2686                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 225,column 1,is_
    2687              $C$DW$160       .dwtag  DW_TAG_formal_parameter, DW_AT_name("flgid")
    2688                      .dwattr $C$DW$160, DW_AT_TI_symbol_name("_flgid")
    2689                      .dwattr $C$DW$160, DW_AT_type(*$C$DW$T$38)
    2690                      .dwattr $C$DW$160, DW_AT_location[DW_OP_reg12]
    2691              $C$DW$161       .dwtag  DW_TAG_formal_parameter, DW_AT_name("waiptn")
    2692                      .dwattr $C$DW$161, DW_AT_TI_symbol_name("_waiptn")
    2693                      .dwattr $C$DW$161, DW_AT_type(*$C$DW$T$22)
    2694                      .dwattr $C$DW$161, DW_AT_location[DW_OP_reg13]
    2695              $C$DW$162       .dwtag  DW_TAG_formal_parameter, DW_AT_name("wfmode")
    2696                      .dwattr $C$DW$162, DW_AT_TI_symbol_name("_wfmode")
    2697                      .dwattr $C$DW$162, DW_AT_type(*$C$DW$T$23)
    2698                      .dwattr $C$DW$162, DW_AT_location[DW_OP_reg16]
    2699              $C$DW$163       .dwtag  DW_TAG_formal_parameter, DW_AT_name("p_flgptn")
    2700                      .dwattr $C$DW$163, DW_AT_TI_symbol_name("_p_flgptn")
    2701                      .dwattr $C$DW$163, DW_AT_type(*$C$DW$T$24)
    2702                      .dwattr $C$DW$163, DW_AT_location[DW_OP_reg19]
    2703              ;*******************************************************************************
    2704              ;* FUNCTION NAME: pol_flg                                                      *
    2705              ;*                                                                             *
    2706              ;*   Function Uses Regs : T0,T1,AR0,AR1,AR2,SP,M40,SATA,SATD,RDM,FRCT,SMUL     *
    2707              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    2708              ;*   Total Frame Size   : 2 words                                              *
    2709              ;*                        (2 return address/alignment)                         *
    2710              ;*   Min System Stack   : 1 word                                               *
    2711              ;*******************************************************************************
    2712 000a2d       _pol_flg:
    2713 000a2d 4EFF          AADD #-1, SP
    2714 000a2f 3C0A          MOV #0, AR2
    2715              $C$DW$164       .dwtag  DW_TAG_TI_branch
    2716                      .dwattr $C$DW$164, DW_AT_low_pc(0x00)
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   62

    2717                      .dwattr $C$DW$164, DW_AT_name("___wai_flg")
    2718                      .dwattr $C$DW$164, DW_AT_TI_call
    2719 000a31 08F9          CALL #___wai_flg ; |226| 
         000a33 D0   
    2720                                                      ; call occurs [#___wai_flg] ; |226| 
    2721 000a34 4E01          AADD #1, SP
    2722                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 227,column 1,is_
    2723              $C$DW$165       .dwtag  DW_TAG_TI_branch
    2724                      .dwattr $C$DW$165, DW_AT_low_pc(0x00)
    2725                      .dwattr $C$DW$165, DW_AT_TI_return
    2726 000a36 4804          RET
    2727                                                      ; return occurs
    2728                      .dwattr $C$DW$159, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.
    2729                      .dwattr $C$DW$159, DW_AT_TI_end_line(0xe3)
    2730                      .dwattr $C$DW$159, DW_AT_TI_end_column(0x01)
    2731                      .dwendtag $C$DW$159
    2732              
    2733 000a38               .sect   ".text"
    2734                      .global _obj_chg_pri
    2735              
    2736              $C$DW$166       .dwtag  DW_TAG_subprogram, DW_AT_name("obj_chg_pri")
    2737                      .dwattr $C$DW$166, DW_AT_low_pc(_obj_chg_pri)
    2738                      .dwattr $C$DW$166, DW_AT_high_pc(0x00)
    2739                      .dwattr $C$DW$166, DW_AT_TI_symbol_name("_obj_chg_pri")
    2740                      .dwattr $C$DW$166, DW_AT_external
    2741                      .dwattr $C$DW$166, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
    2742                      .dwattr $C$DW$166, DW_AT_TI_begin_line(0x67)
    2743                      .dwattr $C$DW$166, DW_AT_TI_begin_column(0x06)
    2744                      .dwattr $C$DW$166, DW_AT_TI_max_frame_size(0x04)
    2745                      .dwattr $C$DW$166, DW_AT_frame_base[DW_OP_bregx 0x24 4]
    2746                      .dwattr $C$DW$166, DW_AT_TI_skeletal
    2747                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 104,column 1,is_stmt,a
    2748              $C$DW$167       .dwtag  DW_TAG_formal_parameter, DW_AT_name("tcb")
    2749                      .dwattr $C$DW$167, DW_AT_TI_symbol_name("_tcb")
    2750                      .dwattr $C$DW$167, DW_AT_type(*$C$DW$T$47)
    2751                      .dwattr $C$DW$167, DW_AT_location[DW_OP_reg17]
    2752              $C$DW$168       .dwtag  DW_TAG_formal_parameter, DW_AT_name("oldpri")
    2753                      .dwattr $C$DW$168, DW_AT_TI_symbol_name("_oldpri")
    2754                      .dwattr $C$DW$168, DW_AT_type(*$C$DW$T$62)
    2755                      .dwattr $C$DW$168, DW_AT_location[DW_OP_reg12]
    2756              ;*******************************************************************************
    2757              ;* FUNCTION NAME: obj_chg_pri                                                  *
    2758              ;*                                                                             *
    2759              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,AC3,AC3,AR0,XAR0,AR1,XAR1,   *
    2760              ;*                        AR2,XAR2,AR3,XAR3,AR4,XAR4,SP,TC1,M40,SATA,SATD,RDM, *
    2761              ;*                        FRCT,SMUL                                            *
    2762              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    2763              ;*   Total Frame Size   : 4 words                                              *
    2764              ;*                        (2 return address/alignment)                         *
    2765              ;*                        (2 local values)                                     *
    2766              ;*   Min System Stack   : 1 word                                               *
    2767              ;*******************************************************************************
    2768 000a38       _obj_chg_pri:
    2769 000a38 9083          MOV XAR0, AC3
    2770 000a3a 903A          MOV AC3, XAR2
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   63

    2771 000a3c 903B          MOV AC3, XAR3
    2772 000a3e 4EFD          AADD #-3, SP
    2773 000a40 1A00          OR #0, AC3, AC1
         000a42 13   
    2774 000a43 ED41          MOV dbl(*AR2), XAR2
         000a45 AF   
    2775 000a46 ED6D          MOV dbl(*AR3(#26)), XAR3
         000a48 BF00 
         000a4a 1A   
    2776 000a4b 90A0          MOV XAR2, AC0
    2777 000a4d 1A00          OR #0, AC0, AC2
         000a4f 20   
    2778 000a50 1220          CMPU AC2 == AC1, TC1 ; |63| 
         000a52 14   
    2779 000a53 0464          BCC $C$L100,TC1 ; |63| 
         000a55 13   
    2780                                                      ; branchcc occurs ; |63| 
    2781 000a56 903A          MOV AC3, XAR2
    2782 000a58 ED55          MOV dbl(*AR2(short(#2))), XAR2
         000a5a AF   
    2783 000a5b EB41          MOV AC0, dbl(*AR2)
         000a5d 08   
    2784 000a5e 903A          MOV AC3, XAR2
    2785 000a60 ED55          MOV dbl(*AR2(short(#2))), XAR4
         000a62 CF   
    2786 000a63 ED41          MOV dbl(*AR2), XAR2
         000a65 AF   
    2787 000a66 EB55          MOV XAR4, dbl(*AR2(short(#2)))
         000a68 C5   
    2788 000a69       $C$L100:    
    2789 000a69 EB00          MOV XAR3, dbl(*SP(#0))
         000a6b B5   
    2790 000a6c 903B          MOV AC3, XAR3
    2791 000a6e A96D          MOV *AR3(#22), AR1 ; |95| 
         000a70 0016 
    2792 000a72 ED00          MOV dbl(*SP(#0)), XAR3
         000a74 BF   
    2793 000a75 ED61          MOV dbl(*AR3), XAR3
         000a77 BF   
    2794 000a78 90B0          MOV XAR3, AC0
    2795              
    2796 000a7d 1B00          OR #0, AC0, AC2
         000a7f 20   
    2797 000a7a ED00  ||      MOV dbl(*SP(#0)), AC1 ; |78| 
         000a7c 18   
    2798              
    2799 000a80 1220          CMPU AC2 == AC1, TC1 ; |78| 
         000a82 14   
    2800 000a83 0464          BCC $C$L102,TC1 ; |78| 
         000a85 1C   
    2801                                                      ; branchcc occurs ; |78| 
    2802 000a86       $C$L101:    
    2803 000a86       $C$DW$L$_obj_chg_pri$4$B:
    2804                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.h",line 78,column 0,is_stmt
    2805 000a86 AA6D          MOV *AR3(#22), AR2 ; |80| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   64

         000a88 0016 
    2806              
    2807 000a8a 1294          CMP AR2 > AR1, TC1 ; |80| 
         000a8c A0   
    2808 000a8d 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    2809              
    2810 000a8e 0464          BCC $C$L102,TC1 ; |80| 
         000a90 11   
    2811                                                      ; branchcc occurs ; |80| 
    2812 000a91       $C$DW$L$_obj_chg_pri$4$E:
    2813 000a91       $C$DW$L$_obj_chg_pri$5$B:
    2814 000a91 ED61          MOV dbl(*AR3), XAR3
         000a93 BF   
    2815 000a94 90B0          MOV XAR3, AC0
    2816              
    2817 000a99 1B00          OR #0, AC0, AC2
         000a9b 20   
    2818 000a96 ED00  ||      MOV dbl(*SP(#0)), AC1 ; |78| 
         000a98 18   
    2819              
    2820 000a9c 122C          CMPU AC2 != AC1, TC1 ; |78| 
         000a9e 14   
    2821                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.h",line 82,column 0,is_stmt
    2822 000a9f 0464          BCC $C$L101,TC1 ; |78| 
         000aa1 E4   
    2823                                                      ; branchcc occurs ; |78| 
    2824 000aa2       $C$DW$L$_obj_chg_pri$5$E:
    2825 000aa2       $C$L102:    
    2826 000aa2 ED75          MOV dbl(*AR3(short(#2))), XAR2
         000aa4 AF   
    2827 000aa5 903B          MOV AC3, XAR3
    2828 000aa7 9009          MOV AC0, XAR1
    2829 000aa9 EB75          MOV XAR2, dbl(*AR3(short(#2)))
         000aab A5   
    2830 000aac EB61          MOV XAR1, dbl(*AR3)
         000aae 95   
    2831 000aaf 900B          MOV AC0, XAR3
    2832 000ab1 ED75          MOV dbl(*AR3(short(#2))), XAR3
         000ab3 BF   
    2833 000ab4 9039          MOV AC3, XAR1
    2834 000ab6 EB61          MOV XAR1, dbl(*AR3)
         000ab8 95   
    2835 000ab9 900B          MOV AC0, XAR3
    2836 000abb EB75          MOV AC3, dbl(*AR3(short(#2)))
         000abd 38   
    2837 000abe 4E03          AADD #3, SP
    2838                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c",line 106,column 1,is_stmt
    2839              $C$DW$169       .dwtag  DW_TAG_TI_branch
    2840                      .dwattr $C$DW$169, DW_AT_low_pc(0x00)
    2841                      .dwattr $C$DW$169, DW_AT_TI_return
    2842 000ac0 4804          RET
    2843                                                      ; return occurs
    2844              
    2845              $C$DW$170       .dwtag  DW_TAG_TI_loop
    2846                      .dwattr $C$DW$170, DW_AT_name("/tmp/129924KNrf8:$C$L101:1:1739870196")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   65

    2847                      .dwattr $C$DW$170, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.h")
    2848                      .dwattr $C$DW$170, DW_AT_TI_begin_line(0x4e)
    2849                      .dwattr $C$DW$170, DW_AT_TI_end_line(0x52)
    2850              $C$DW$171       .dwtag  DW_TAG_TI_loop_range
    2851                      .dwattr $C$DW$171, DW_AT_low_pc($C$DW$L$_obj_chg_pri$4$B)
    2852                      .dwattr $C$DW$171, DW_AT_high_pc($C$DW$L$_obj_chg_pri$4$E)
    2853              $C$DW$172       .dwtag  DW_TAG_TI_loop_range
    2854                      .dwattr $C$DW$172, DW_AT_low_pc($C$DW$L$_obj_chg_pri$5$B)
    2855                      .dwattr $C$DW$172, DW_AT_high_pc($C$DW$L$_obj_chg_pri$5$E)
    2856                      .dwendtag $C$DW$170
    2857              
    2858                      .dwattr $C$DW$166, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/wait.c")
    2859                      .dwattr $C$DW$166, DW_AT_TI_end_line(0x6a)
    2860                      .dwattr $C$DW$166, DW_AT_TI_end_column(0x01)
    2861                      .dwendtag $C$DW$166
    2862              
    2863 000ac2               .sect   ".text"
    2864                      .global _make_dormant
    2865              
    2866              $C$DW$173       .dwtag  DW_TAG_subprogram, DW_AT_name("make_dormant")
    2867                      .dwattr $C$DW$173, DW_AT_low_pc(_make_dormant)
    2868                      .dwattr $C$DW$173, DW_AT_high_pc(0x00)
    2869                      .dwattr $C$DW$173, DW_AT_TI_symbol_name("_make_dormant")
    2870                      .dwattr $C$DW$173, DW_AT_external
    2871                      .dwattr $C$DW$173, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
    2872                      .dwattr $C$DW$173, DW_AT_TI_begin_line(0x59)
    2873                      .dwattr $C$DW$173, DW_AT_TI_begin_column(0x06)
    2874                      .dwattr $C$DW$173, DW_AT_TI_max_frame_size(0x01)
    2875                      .dwattr $C$DW$173, DW_AT_frame_base[DW_OP_bregx 0x24 1]
    2876                      .dwattr $C$DW$173, DW_AT_TI_skeletal
    2877                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 90,column 1,is_stmt,ad
    2878              $C$DW$174       .dwtag  DW_TAG_formal_parameter, DW_AT_name("tcb")
    2879                      .dwattr $C$DW$174, DW_AT_TI_symbol_name("_tcb")
    2880                      .dwattr $C$DW$174, DW_AT_type(*$C$DW$T$47)
    2881                      .dwattr $C$DW$174, DW_AT_location[DW_OP_reg17]
    2882              ;*******************************************************************************
    2883              ;* FUNCTION NAME: make_dormant                                                 *
    2884              ;*                                                                             *
    2885              ;*   Function Uses Regs : AR0,XAR0,AR1,SP,M40,SATA,SATD,RDM,FRCT,SMUL          *
    2886              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    2887              ;*   Total Frame Size   : 1 word                                               *
    2888              ;*                        (1 return address/alignment)                         *
    2889              ;*   Min System Stack   : 1 word                                               *
    2890              ;*******************************************************************************
    2891 000ac2       _make_dormant:
    2892 000ac2 A90D          MOV *AR0(#21), AR1 ; |92| 
         000ac4 0015 
    2893 000ac6 E60D          MOV #16, *AR0(#24) ; |91| 
         000ac8 1000 
         000aca 18   
    2894 000acb C90D          MOV AR1, *AR0(#22) ; |92| 
         000acd 0016 
    2895 000acf E60D          MOV #0, *AR0(#33) ; |93| 
         000ad1 0000 
         000ad3 21   
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   66

    2896 000ad4 E60D          MOV #0, *AR0(#34) ; |94| 
         000ad6 0000 
         000ad8 22   
    2897                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 98,column 1,is_stmt
    2898              $C$DW$175       .dwtag  DW_TAG_TI_branch
    2899                      .dwattr $C$DW$175, DW_AT_low_pc(0x00)
    2900                      .dwattr $C$DW$175, DW_AT_TI_return
    2901 000ad9 4804          RET
    2902                                                      ; return occurs
    2903                      .dwattr $C$DW$173, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
    2904                      .dwattr $C$DW$173, DW_AT_TI_end_line(0x62)
    2905                      .dwattr $C$DW$173, DW_AT_TI_end_column(0x01)
    2906                      .dwendtag $C$DW$173
    2907              
    2908 000adb               .sect   ".text"
    2909                      .global _eventflag_initialize
    2910              
    2911              $C$DW$176       .dwtag  DW_TAG_subprogram, DW_AT_name("eventflag_initialize")
    2912                      .dwattr $C$DW$176, DW_AT_low_pc(_eventflag_initialize)
    2913                      .dwattr $C$DW$176, DW_AT_high_pc(0x00)
    2914                      .dwattr $C$DW$176, DW_AT_TI_symbol_name("_eventflag_initialize")
    2915                      .dwattr $C$DW$176, DW_AT_external
    2916                      .dwattr $C$DW$176, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflag
    2917                      .dwattr $C$DW$176, DW_AT_TI_begin_line(0x23)
    2918                      .dwattr $C$DW$176, DW_AT_TI_begin_column(0x06)
    2919                      .dwattr $C$DW$176, DW_AT_TI_max_frame_size(0x01)
    2920                      .dwattr $C$DW$176, DW_AT_frame_base[DW_OP_bregx 0x24 1]
    2921                      .dwattr $C$DW$176, DW_AT_TI_skeletal
    2922                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 36,column 1,is_s
    2923              ;*******************************************************************************
    2924              ;* FUNCTION NAME: eventflag_initialize                                         *
    2925              ;*                                                                             *
    2926              ;*   Function Uses Regs : AR3,XAR3,SP,M40,SATA,SATD,RDM,FRCT,SMUL              *
    2927              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    2928              ;*   Total Frame Size   : 1 word                                               *
    2929              ;*                        (1 return address/alignment)                         *
    2930              ;*   Min System Stack   : 1 word                                               *
    2931              ;*******************************************************************************
    2932 000adb       _eventflag_initialize:
    2933 000adb EC31          AMOV #_flgcb_table, XAR3 ; |43| 
         000add BE00 
         000adf 0000-
    2934 000ae1 EB61          MOV XAR3, dbl(*AR3)
         000ae3 B5   
    2935 000ae4 EB75          MOV XAR3, dbl(*AR3(short(#2)))
         000ae6 B5   
    2936 000ae7 E679          MOV #0, *AR3(short(#4)) ; |43| 
         000ae9 00   
    2937 000aea E66D          MOV #0, *AR3(#9) ; |44| 
         000aec 0000 
         000aee 09   
    2938                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 47,column 1,is_s
    2939              $C$DW$177       .dwtag  DW_TAG_TI_branch
    2940                      .dwattr $C$DW$177, DW_AT_low_pc(0x00)
    2941                      .dwattr $C$DW$177, DW_AT_TI_return
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   67

    2942 000aef 4804          RET
    2943                                                      ; return occurs
    2944                      .dwattr $C$DW$176, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.
    2945                      .dwattr $C$DW$176, DW_AT_TI_end_line(0x2f)
    2946                      .dwattr $C$DW$176, DW_AT_TI_end_column(0x01)
    2947                      .dwendtag $C$DW$176
    2948              
    2949 000af1               .sect   ".text"
    2950                      .global _cre_tsk
    2951              
    2952              $C$DW$178       .dwtag  DW_TAG_subprogram, DW_AT_name("cre_tsk")
    2953                      .dwattr $C$DW$178, DW_AT_low_pc(_cre_tsk)
    2954                      .dwattr $C$DW$178, DW_AT_high_pc(0x00)
    2955                      .dwattr $C$DW$178, DW_AT_TI_symbol_name("_cre_tsk")
    2956                      .dwattr $C$DW$178, DW_AT_external
    2957                      .dwattr $C$DW$178, DW_AT_type(*$C$DW$T$65)
    2958                      .dwattr $C$DW$178, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manag
    2959                      .dwattr $C$DW$178, DW_AT_TI_begin_line(0x1d)
    2960                      .dwattr $C$DW$178, DW_AT_TI_begin_column(0x04)
    2961                      .dwattr $C$DW$178, DW_AT_TI_max_frame_size(0x04)
    2962                      .dwattr $C$DW$178, DW_AT_frame_base[DW_OP_bregx 0x24 4]
    2963                      .dwattr $C$DW$178, DW_AT_TI_skeletal
    2964                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manage.c",line 30,column 1,is_s
    2965              $C$DW$179       .dwtag  DW_TAG_formal_parameter, DW_AT_name("tskid")
    2966                      .dwattr $C$DW$179, DW_AT_TI_symbol_name("_tskid")
    2967                      .dwattr $C$DW$179, DW_AT_type(*$C$DW$T$38)
    2968                      .dwattr $C$DW$179, DW_AT_location[DW_OP_reg12]
    2969              $C$DW$180       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pk_ctsk")
    2970                      .dwattr $C$DW$180, DW_AT_TI_symbol_name("_pk_ctsk")
    2971                      .dwattr $C$DW$180, DW_AT_type(*$C$DW$T$141)
    2972                      .dwattr $C$DW$180, DW_AT_location[DW_OP_reg17]
    2973              ;*******************************************************************************
    2974              ;* FUNCTION NAME: cre_tsk                                                      *
    2975              ;*                                                                             *
    2976              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,AC3,AC3,T0,T1,T2,AR0,XAR0,   *
    2977              ;*                        AR1,XAR1,AR2,XAR2,AR3,XAR3,AR4,XAR4,SP,CARRY,TC1,M40,*
    2978              ;*                        SATA,SATD,RDM,FRCT,SMUL                              *
    2979              ;*   Save On Entry Regs : T2                                                   *
    2980              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    2981              ;*   Total Frame Size   : 4 words                                              *
    2982              ;*                        (1 return address/alignment)                         *
    2983              ;*                        (2 local values)                                     *
    2984              ;*                        (1 register save area)                               *
    2985              ;*   Min System Stack   : 1 word                                               *
    2986              ;*******************************************************************************
    2987 000af1       _cre_tsk:
    2988 000af1 3C29          MOV #2, AR1
    2989              
    2990 000af3 1294          CMP T0 > AR1, TC1 ; |38| 
         000af5 40   
    2991 000af6 5166  ||      PSH T2
    2992              
    2993 000af8 4EFE          AADD #-2, SP
    2994 000afa 6164          BCC $C$L103,TC1 ; |38| 
    2995                                                      ; branchcc occurs ; |38| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   68

    2996 000afc 63C4          BCC $C$L104,T0 > #0 ; |38| 
    2997                                                      ; branchcc occurs ; |38| 
    2998 000afe       $C$L103:    
    2999 000afe 76FF          MOV #-18, T0 ; |39| 
         000b00 EE48 
    3000 000b02 0600          B $C$L107 ; |39| 
         000b04 E1   
    3001                                                      ; branch occurs ; |39| 
    3002 000b05       $C$L104:    
    3003 000b05 7C00          SUB #1, T0, AR1 ; |41| 
         000b07 0194 
    3004 000b09 ED0D          MOV dbl(*AR0(#8)), XAR3
         000b0b BF00 
         000b0d 08   
    3005 000b0e 2290          MOV AR1, AC0
    3006              
    3007 000b10 1045          SFTS AC0, #4, AC1 ; |41| 
         000b12 04   
    3008 000b13 3D02  ||      MOV #0, AC2 ; |46| 
    3009              
    3010 000b18 1143          ADD AC0 << #5, AC1 ; |41| 
         000b1a 05   
    3011 000b15 EB00  ||      MOV XAR3, dbl(*SP(#0))
         000b17 B5   
    3012              
    3013 000b1b 7A00          MOV #(_tcb_table >> 16) << #16, AC0 ; |41| 
         000b1d 000A%
    3014 000b1f 7E00          OR #(_tcb_table & 0xffff), AC0, AC0 ; |41| 
         000b21 0000%
    3015              
    3016 000b23 ED00          MOV dbl(*SP(#0)), AC1 ; |46| 
         000b25 18   
    3017 000b26 2510  ||      ADD AC1, AC0 ; |41| 
    3018              
    3019 000b2a 132C          CMPU AC2 != AC1, TC1 ; |46| 
         000b2c 14   
    3020 000b28 A51F  ||      MOV *AR0(short(#7)), T1 ; |43| 
    3021              
    3022 000b31 9EF4          XCCPART !TC1 ||
    3023 000b2d 76FF             MOV #-33, T0 ; |50| 
         000b2f DF48 
    3024 000b33 6D74          BCC $C$L107,!TC1 ; |50| 
         000b35 00AF 
    3025                                                      ; branchcc occurs ; |50| 
    3026 000b37 ED0D          MOV dbl(*AR0(#10)), XAR3
         000b39 BF00 
         000b3b 0A   
    3027 000b3c 90B1          MOV XAR3, AC1
    3028 000b3e 1A00          OR #0, AC1, AC3
         000b40 31   
    3029 000b41 122C          CMPU AC2 != AC3, TC1 ; |55| 
         000b43 34   
    3030 000b48 9EF4          XCCPART !TC1 ||
    3031 000b44 76FF             MOV #-33, T0 ; |63| 
         000b46 DF48 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   69

    3032 000b4a 6D74          BCC $C$L107,!TC1 ; |63| 
         000b4c 0098 
    3033                                                      ; branchcc occurs ; |63| 
    3034 000b4e ED00          MOV dbl(*SP(#0)), XAR3
         000b50 BF   
    3035 000b51 901A          MOV AC1, XAR2
    3036 000b53 A931          MOV *(#3), AR1 ; |73| 
         000b55 0000 
         000b57 03   
    3037 000b58 7D08          AND #0x0800, AR1, T2 ; |73| 
         000b5a 0069 
    3038 000b5c 46B3       BSET ST1_INTM
    3039 000b5e 900C          MOV AC0, XAR4
    3040 000b60 ED81          MOV dbl(*AR4), XAR4
         000b62 CF   
    3041 000b63 1A00          OR #0, AC0, AC2
         000b65 20   
    3042 000b66 90C1          MOV XAR4, AC1
    3043 000b68 1A00          OR #0, AC1, AC3
         000b6a 31   
    3044 000b6b 1230          CMPU AC3 == AC2, TC1 ; |63| 
         000b6d 24   
    3045 000b6e 0464          BCC $C$L105,TC1 ; |63| 
         000b70 13   
    3046                                                      ; branchcc occurs ; |63| 
    3047 000b71 900C          MOV AC0, XAR4
    3048 000b73 ED95          MOV dbl(*AR4(short(#2))), XAR4
         000b75 CF   
    3049 000b76 EB81          MOV AC1, dbl(*AR4)
         000b78 18   
    3050 000b79 900C          MOV AC0, XAR4
    3051 000b7b ED95          MOV dbl(*AR4(short(#2))), XAR1
         000b7d 9F   
    3052 000b7e ED81          MOV dbl(*AR4), XAR4
         000b80 CF   
    3053 000b81 EB95          MOV XAR1, dbl(*AR4(short(#2)))
         000b83 95   
    3054 000b84       $C$L105:    
    3055 000b84 900C          MOV AC0, XAR4
    3056 000b86 ED15          MOV dbl(*AR0(short(#2))), XAR1
         000b88 9F   
    3057 000b89 7DFF          AND #0xffff, T1, AC2 ; |83| 
         000b8b FF25 
    3058 000b8d EB8D          MOV XAR1, dbl(*AR4(#18))
         000b8f 9500 
         000b91 12   
    3059 000b92 A901          MOV *AR0, AR1 ; |77| 
    3060 000b94 C98D          MOV AR1, *AR4(#20) ; |77| 
         000b96 0014 
    3061 000b98 ED19          MOV dbl(*AR0(short(#4))), AC1 ; |78| 
         000b9a 18   
    3062 000b9b EB8D          MOV AC1, dbl(*AR4(#10)) ; |78| 
         000b9d 1800 
         000b9f 0A   
    3063 000ba0 90B1          MOV XAR3, AC1
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   70

    3064 000ba2 A91D          MOV *AR0(short(#6)), AR1 ; |79| 
    3065 000ba4 900B          MOV AC0, XAR3
    3066 000ba6 4219          SUB #1, AR1 ; |79| 
    3067 000ba8 2412          ADD AC1, AC2 ; |83| 
    3068 000baa 90A1          MOV XAR2, AC1
    3069 000bac C98D          MOV AR1, *AR4(#21) ; |79| 
         000bae 0015 
    3070 000bb0 E66D          MOV #0, *AR3(#34) ; |94| 
         000bb2 0000 
         000bb4 22   
    3071 000bb5 E66D          MOV #0, *AR3(#33) ; |93| 
         000bb7 0000 
         000bb9 21   
    3072 000bba E66D          MOV #16, *AR3(#24) ; |91| 
         000bbc 1000 
         000bbe 18   
    3073 000bbf E68D          MOV #0, *AR4(#23) ; |81| 
         000bc1 0000 
         000bc3 17   
    3074 000bc4 C58D          MOV T1, *AR4(#16) ; |80| 
         000bc6 0010 
    3075 000bc8 EB6D          MOV AC2, dbl(*AR3(#12))
         000bca 2800 
         000bcc 0C   
    3076 000bcd 7DFF          AND #0xffff, T1, AC2 ; |85| 
         000bcf FF25 
    3077 000bd1 A96D          MOV *AR3(#21), AR1 ; |92| 
         000bd3 0015 
    3078 000bd5 2412          ADD AC1, AC2 ; |85| 
    3079 000bd7 C96D          MOV AR1, *AR3(#22) ; |92| 
         000bd9 0016 
    3080 000bdb EB6D          MOV AC2, dbl(*AR3(#14))
         000bdd 2800 
         000bdf 0E   
    3081 000be0 6116          BCC $C$L106,T2 != #0 ; |89| 
    3082                                                      ; branchcc occurs ; |89| 
    3083 000be2 46B2       BCLR ST1_INTM
    3084 000be4       $C$L106:    
    3085 000be4 3C04          MOV #0, T0
    3086 000be6       $C$L107:    
    3087 000be6 4E02          AADD #2, SP
    3088 000be8 5062          POP T2
    3089                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manage.c",line 92,column 1,is_s
    3090              $C$DW$181       .dwtag  DW_TAG_TI_branch
    3091                      .dwattr $C$DW$181, DW_AT_low_pc(0x00)
    3092                      .dwattr $C$DW$181, DW_AT_TI_return
    3093 000bea 4804          RET
    3094                                                      ; return occurs
    3095                      .dwattr $C$DW$178, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manage.
    3096                      .dwattr $C$DW$178, DW_AT_TI_end_line(0x5c)
    3097                      .dwattr $C$DW$178, DW_AT_TI_end_column(0x01)
    3098                      .dwendtag $C$DW$178
    3099              
    3100 000bec               .sect   ".text"
    3101                      .global _act_tsk
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   71

    3102              
    3103              $C$DW$182       .dwtag  DW_TAG_subprogram, DW_AT_name("act_tsk")
    3104                      .dwattr $C$DW$182, DW_AT_low_pc(_act_tsk)
    3105                      .dwattr $C$DW$182, DW_AT_high_pc(0x00)
    3106                      .dwattr $C$DW$182, DW_AT_TI_symbol_name("_act_tsk")
    3107                      .dwattr $C$DW$182, DW_AT_external
    3108                      .dwattr $C$DW$182, DW_AT_type(*$C$DW$T$65)
    3109                      .dwattr $C$DW$182, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manag
    3110                      .dwattr $C$DW$182, DW_AT_TI_begin_line(0x61)
    3111                      .dwattr $C$DW$182, DW_AT_TI_begin_column(0x04)
    3112                      .dwattr $C$DW$182, DW_AT_TI_max_frame_size(0x04)
    3113                      .dwattr $C$DW$182, DW_AT_frame_base[DW_OP_bregx 0x24 4]
    3114                      .dwattr $C$DW$182, DW_AT_TI_skeletal
    3115                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manage.c",line 98,column 1,is_s
    3116              $C$DW$183       .dwtag  DW_TAG_formal_parameter, DW_AT_name("tskid")
    3117                      .dwattr $C$DW$183, DW_AT_TI_symbol_name("_tskid")
    3118                      .dwattr $C$DW$183, DW_AT_type(*$C$DW$T$38)
    3119                      .dwattr $C$DW$183, DW_AT_location[DW_OP_reg12]
    3120              ;*******************************************************************************
    3121              ;* FUNCTION NAME: act_tsk                                                      *
    3122              ;*                                                                             *
    3123              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,T0,T2,AR0,XAR0,AR1,AR2,AR3,XAR3,AR5, *
    3124              ;*                        XAR5,SP,CARRY,TC1,M40,SATA,SATD,RDM,FRCT,SMUL        *
    3125              ;*   Save On Entry Regs : T2,AR5                                               *
    3126              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    3127              ;*   Total Frame Size   : 4 words                                              *
    3128              ;*                        (2 return address/alignment)                         *
    3129              ;*                        (2 register save area)                               *
    3130              ;*   Min System Stack   : 2 words                                              *
    3131              ;*******************************************************************************
    3132 000bec       _act_tsk:
    3133 000bec 3C29          MOV #2, AR1
    3134              
    3135 000bee 1294          CMP T0 > AR1, TC1 ; |103| 
         000bf0 40   
    3136 000bf1 5166  ||      PSH T2
    3137              
    3138 000bf3 50D5          PSHBOTH XAR5
    3139 000bf5 4EFF          AADD #-1, SP
    3140 000bf7 0464          BCC $C$L108,TC1 ; |103| 
         000bf9 12   
    3141                                                      ; branchcc occurs ; |103| 
    3142 000bfa 0414          BCC $C$L109,T0 != #0 ; |103| 
         000bfc 16   
    3143                                                      ; branchcc occurs ; |103| 
    3144 000bfd ED31          MOV dbl(*(#_runtsk)), XAR3
         000bff BF00 
         000c01 000C-
    3145              
    3146 000c03 90B0          MOV XAR3, AC0
    3147 000c05 3D01  ||      MOV #0, AC1 ; |103| 
    3148              
    3149 000c07 121C          CMPU AC1 != AC0, TC1 ; |103| 
         000c09 04   
    3150 000c0a 63E4          BCC $C$L109,TC1 ; |103| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   72

    3151                                                      ; branchcc occurs ; |103| 
    3152 000c0c       $C$L108:    
    3153 000c0c 76FF          MOV #-18, T0 ; |106| 
         000c0e EE48 
    3154 000c10 0600          B $C$L116 ; |106| 
         000c12 80   
    3155                                                      ; branch occurs ; |106| 
    3156 000c13       $C$L109:    
    3157 000c13 A931          MOV *(#3), AR1 ; |108| 
         000c15 0000 
         000c17 03   
    3158 000c18 7D08          AND #0x0800, AR1, T2 ; |108| 
         000c1a 0069 
    3159 000c1c 46B3       BSET ST1_INTM
    3160 000c1e 9604          XCC T0 == #0
    3161 000c20 ED31             MOV dbl(*(#_runtsk)), XAR5
         000c22 DF00 
         000c24 000C-
    3162 000c26 0404          BCC $C$L110,T0 == #0 ; |110| 
         000c28 18   
    3163                                                      ; branchcc occurs ; |110| 
    3164 000c29 7C00          SUB #1, T0, AR1 ; |110| 
         000c2b 0194 
    3165 000c2d 2290          MOV AR1, AC0
    3166 000c2f 1045          SFTS AC0, #4, AC1 ; |110| 
         000c31 04   
    3167 000c32 1043          ADD AC0 << #5, AC1 ; |110| 
         000c34 05   
    3168 000c35 7A00          MOV #(_tcb_table >> 16) << #16, AC0 ; |110| 
         000c37 000A%
    3169 000c39 7E00          OR #(_tcb_table & 0xffff), AC0, AC0 ; |110| 
         000c3b 0000%
    3170 000c3d 2410          ADD AC1, AC0 ; |110| 
    3171 000c3f 900D          MOV AC0, XAR5
    3172 000c41       $C$L110:    
    3173 000c41 A9AD          MOV *AR5(#24), AR1 ; |111| 
         000c43 0018 
    3174 000c45 6499          BCC $C$L111,AR1 != #0 ; |111| 
    3175                                                      ; branchcc occurs ; |111| 
    3176 000c47 76FF          MOV #-42, T0 ; |112| 
         000c49 D648 
    3177 000c4b 0406          BCC $C$L114,T2 == #0 ; |129| 
         000c4d 3F   
    3178                                                      ; branchcc occurs ; |129| 
    3179 000c4e 4A3F          B $C$L115 ; |129| 
    3180                                                      ; branch occurs ; |129| 
    3181 000c50       $C$L111:    
    3182 000c50 7600          MOV #16, AR2 ; |116| 
         000c52 10A8 
    3183              
    3184 000c54 129C          CMPU AR1 != AR2, TC1 ; |116| 
         000c56 A4   
    3185 000c57 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    3186              
    3187 000c58 0464          BCC $C$L112,TC1 ; |116| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   73

         000c5a 14   
    3188                                                      ; branchcc occurs ; |116| 
    3189 000c5b ECA1          AMAR *AR5, XAR0
         000c5d 8E   
    3190              $C$DW$184       .dwtag  DW_TAG_TI_branch
    3191                      .dwattr $C$DW$184, DW_AT_low_pc(0x00)
    3192                      .dwattr $C$DW$184, DW_AT_name("_make_task_context")
    3193                      .dwattr $C$DW$184, DW_AT_TI_call
    3194 000c5e 6C00          CALL #_make_task_context ; |124| 
         000c60 0000!
    3195                                                      ; call occurs [#_make_task_context] ; |124| 
    3196 000c62 ECA1          AMAR *AR5, XAR0
         000c64 8E   
    3197              $C$DW$185       .dwtag  DW_TAG_TI_branch
    3198                      .dwattr $C$DW$185, DW_AT_low_pc(0x00)
    3199                      .dwattr $C$DW$185, DW_AT_name("_move_to_ready_state")
    3200                      .dwattr $C$DW$185, DW_AT_TI_call
    3201 000c65 08F3          CALL #_move_to_ready_state ; |125| 
         000c67 B1   
    3202                                                      ; call occurs [#_move_to_ready_state] ; |125| 
    3203 000c68 3C04          MOV #0, T0
    3204 000c6a 0406          BCC $C$L114,T2 == #0 ; |129| 
         000c6c 20   
    3205                                                      ; branchcc occurs ; |129| 
    3206 000c6d 4A20          B $C$L115 ; |129| 
    3207                                                      ; branch occurs ; |129| 
    3208 000c6f       $C$L112:    
    3209 000c6f 3CFA          MOV #15, AR2
    3210 000c71 A9AD          MOV *AR5(#23), AR1 ; |117| 
         000c73 0017 
    3211              
    3212 000c75 1298          CMP AR1 >= AR2, TC1 ; |117| 
         000c77 A0   
    3213 000c78 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    3214              
    3215 000c79 6664          BCC $C$L113,TC1 ; |117| 
    3216                                                      ; branchcc occurs ; |117| 
    3217 000c7b 4019          ADD #1, AR1, AR1 ; |120| 
    3218 000c7d 3C04          MOV #0, T0
    3219 000c7f C9AD          MOV AR1, *AR5(#23) ; |120| 
         000c81 0017 
    3220 000c83 6406          BCC $C$L114,T2 == #0 ; |129| 
    3221                                                      ; branchcc occurs ; |129| 
    3222 000c85 4A08          B $C$L115 ; |129| 
    3223                                                      ; branch occurs ; |129| 
    3224 000c87       $C$L113:    
    3225 000c87 76FF          MOV #-43, T0 ; |118| 
         000c89 D548 
    3226 000c8b 6116          BCC $C$L115,T2 != #0 ; |129| 
    3227                                                      ; branchcc occurs ; |129| 
    3228 000c8d       $C$L114:    
    3229 000c8d 46B2       BCLR ST1_INTM
    3230 000c8f       $C$L115:    
    3231 000c8f 6114          BCC $C$L116,T0 != #0 ; |131| 
    3232                                                      ; branchcc occurs ; |131| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   74

    3233 000c91 951F     INTR #31
    3234 000c93       $C$L116:    
    3235 000c93 4E01          AADD #1, SP
    3236 000c95 50D4          POPBOTH XAR5
    3237 000c97 5062          POP T2
    3238                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manage.c",line 133,column 1,is_
    3239              $C$DW$186       .dwtag  DW_TAG_TI_branch
    3240                      .dwattr $C$DW$186, DW_AT_low_pc(0x00)
    3241                      .dwattr $C$DW$186, DW_AT_TI_return
    3242 000c99 4804          RET
    3243                                                      ; return occurs
    3244                      .dwattr $C$DW$182, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manage.
    3245                      .dwattr $C$DW$182, DW_AT_TI_end_line(0x85)
    3246                      .dwattr $C$DW$182, DW_AT_TI_end_column(0x01)
    3247                      .dwendtag $C$DW$182
    3248              
    3249 000c9b               .sect   ".text"
    3250                      .global _main
    3251              
    3252              $C$DW$187       .dwtag  DW_TAG_subprogram, DW_AT_name("main")
    3253                      .dwattr $C$DW$187, DW_AT_low_pc(_main)
    3254                      .dwattr $C$DW$187, DW_AT_high_pc(0x00)
    3255                      .dwattr $C$DW$187, DW_AT_TI_symbol_name("_main")
    3256                      .dwattr $C$DW$187, DW_AT_external
    3257                      .dwattr $C$DW$187, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/main.c")
    3258                      .dwattr $C$DW$187, DW_AT_TI_begin_line(0x20)
    3259                      .dwattr $C$DW$187, DW_AT_TI_begin_column(0x06)
    3260                      .dwattr $C$DW$187, DW_AT_TI_max_frame_size(0x0e)
    3261                      .dwattr $C$DW$187, DW_AT_frame_base[DW_OP_bregx 0x24 14]
    3262                      .dwattr $C$DW$187, DW_AT_TI_skeletal
    3263                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/main.c",line 33,column 1,is_stmt,ad
    3264              $C$DW$188       .dwtag  DW_TAG_formal_parameter, DW_AT_name("argc")
    3265                      .dwattr $C$DW$188, DW_AT_TI_symbol_name("_argc")
    3266                      .dwattr $C$DW$188, DW_AT_type(*$C$DW$T$10)
    3267                      .dwattr $C$DW$188, DW_AT_location[DW_OP_reg12]
    3268              $C$DW$189       .dwtag  DW_TAG_formal_parameter, DW_AT_name("argv")
    3269                      .dwattr $C$DW$189, DW_AT_TI_symbol_name("_argv")
    3270                      .dwattr $C$DW$189, DW_AT_type(*$C$DW$T$94)
    3271                      .dwattr $C$DW$189, DW_AT_location[DW_OP_reg17]
    3272              ;*******************************************************************************
    3273              ;* FUNCTION NAME: main                                                         *
    3274              ;*                                                                             *
    3275              ;*   Function Uses Regs : AC0,AC0,T0,AR0,XAR0,AR3,XAR3,SP,M40,SATA,SATD,RDM,   *
    3276              ;*                        FRCT,SMUL                                            *
    3277              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    3278              ;*   Total Frame Size   : 14 words                                             *
    3279              ;*                        (2 return address/alignment)                         *
    3280              ;*                        (12 local values)                                    *
    3281              ;*   Min System Stack   : 1 word                                               *
    3282              ;*******************************************************************************
    3283 000c9b       _main:
    3284 000c9b 4EF3          AADD #-13, SP
    3285              $C$DW$190       .dwtag  DW_TAG_TI_branch
    3286                      .dwattr $C$DW$190, DW_AT_low_pc(0x00)
    3287                      .dwattr $C$DW$190, DW_AT_name("_task_initialize")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   75

    3288                      .dwattr $C$DW$190, DW_AT_TI_call
    3289 000c9d 08F9          CALL #_task_initialize ; |38| 
         000c9f 0D   
    3290                                                      ; call occurs [#_task_initialize] ; |38| 
    3291 000ca0 EC31          AMOV #_timer_queue, XAR3 ; |34| 
         000ca2 BE00 
         000ca4 00A6-
    3292 000ca6 EB31          MOV XAR3, dbl(*(#_timer_queue))
         000ca8 B500 
         000caa 00A6-
    3293 000cac EB31          MOV XAR3, dbl(*(#(_timer_queue+2)))
         000cae B500 
         000cb0 00A8-
    3294              $C$DW$191       .dwtag  DW_TAG_TI_branch
    3295                      .dwattr $C$DW$191, DW_AT_low_pc(0x00)
    3296                      .dwattr $C$DW$191, DW_AT_name("_start_hw_timer")
    3297                      .dwattr $C$DW$191, DW_AT_TI_call
    3298 000cb2 6C00          CALL #_start_hw_timer ; |25| 
         000cb4 0000!
    3299                                                      ; call occurs [#_start_hw_timer] ; |25| 
    3300              $C$DW$192       .dwtag  DW_TAG_TI_branch
    3301                      .dwattr $C$DW$192, DW_AT_low_pc(0x00)
    3302                      .dwattr $C$DW$192, DW_AT_name("_eventflag_initialize")
    3303                      .dwattr $C$DW$192, DW_AT_TI_call
    3304 000cb6 08FE          CALL #_eventflag_initialize ; |41| 
         000cb8 22   
    3305                                                      ; call occurs [#_eventflag_initialize] ; |41| 
    3306              
    3307 000cb9 9048          MOV XSP, XAR0
    3308 000cbb 3D00  ||      MOV #0, AC0 ; |55| 
    3309              
    3310 000cbd EB04          MOV AC0, dbl(*SP(#2))
         000cbf 08   
    3311 000cc0 E600          MOV #0, *SP(#0) ; |54| 
         000cc2 00   
    3312 000cc3 7A00          MOV #(_init_tsk >> 16) << #16, AC0 ; |56| 
         000cc5 000A%
    3313 000cc7 7E00          OR #(_init_tsk & 0xffff), AC0, AC0 ; |56| 
         000cc9 0000%
    3314 000ccb EC31          AMOV #_init_tsk_stack, XAR3 ; |59| 
         000ccd BE00 
         000ccf 0000!
    3315 000cd1 EB10          MOV XAR3, dbl(*SP(#8))
         000cd3 B5   
    3316 000cd4 E60C          MOV #1, *SP(#6) ; |57| 
         000cd6 01   
    3317 000cd7 FB0E          MOV #512, *SP(#7) ; |58| 
         000cd9 0200 
    3318              
    3319 000cde 3D14          MOV #1, T0
    3320 000cdb EB08  ||      MOV AC0, dbl(*SP(#4)) ; |56| 
         000cdd 08   
    3321              
    3322 000ce0 EC31          AMOV #_init_tsk_sys_stack, XAR3 ; |61| 
         000ce2 BE00 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   76

         000ce4 0000!
    3323 000ce6 EB14          MOV XAR3, dbl(*SP(#10))
         000ce8 B5   
    3324              $C$DW$193       .dwtag  DW_TAG_TI_branch
    3325                      .dwattr $C$DW$193, DW_AT_low_pc(0x00)
    3326                      .dwattr $C$DW$193, DW_AT_name("_cre_tsk")
    3327                      .dwattr $C$DW$193, DW_AT_TI_call
    3328 000ce9 08FE          CALL #_cre_tsk ; |64| 
         000ceb 05   
    3329                                                      ; call occurs [#_cre_tsk] ; |64| 
    3330 000cec 3C14          MOV #1, T0
    3331                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/main.c",line 67,column 0,is_stmt
    3332              $C$DW$194       .dwtag  DW_TAG_TI_branch
    3333                      .dwattr $C$DW$194, DW_AT_low_pc(0x00)
    3334                      .dwattr $C$DW$194, DW_AT_name("_act_tsk")
    3335                      .dwattr $C$DW$194, DW_AT_TI_call
    3336 000cee 08FE          CALL #_act_tsk ; |65| 
         000cf0 FB   
    3337                                                      ; call occurs [#_act_tsk] ; |65| 
    3338 000cf1       $C$L117:    
    3339 000cf1       $C$DW$L$_main$2$B:
    3340                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/main.c",line 68,column 1,is_stmt
    3341 000cf1 4A7E          B $C$L117 ; |67| 
    3342                                                      ; branch occurs ; |67| 
    3343              $C$DW$L$_main$2$E:
    3344              
    3345              $C$DW$195       .dwtag  DW_TAG_TI_loop
    3346                      .dwattr $C$DW$195, DW_AT_name("/tmp/129924KNrf8:$C$L117:1:1739870196")
    3347                      .dwattr $C$DW$195, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/main.c")
    3348                      .dwattr $C$DW$195, DW_AT_TI_begin_line(0x43)
    3349                      .dwattr $C$DW$195, DW_AT_TI_end_line(0x44)
    3350              $C$DW$196       .dwtag  DW_TAG_TI_loop_range
    3351                      .dwattr $C$DW$196, DW_AT_low_pc($C$DW$L$_main$2$B)
    3352                      .dwattr $C$DW$196, DW_AT_high_pc($C$DW$L$_main$2$E)
    3353                      .dwendtag $C$DW$195
    3354              
    3355                      .dwattr $C$DW$187, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/main.c")
    3356                      .dwattr $C$DW$187, DW_AT_TI_end_line(0x44)
    3357                      .dwattr $C$DW$187, DW_AT_TI_end_column(0x01)
    3358                      .dwendtag $C$DW$187
    3359              
    3360 000cf3               .sect   ".text"
    3361                      .global _install_handler
    3362              
    3363              $C$DW$197       .dwtag  DW_TAG_subprogram, DW_AT_name("install_handler")
    3364                      .dwattr $C$DW$197, DW_AT_low_pc(_install_handler)
    3365                      .dwattr $C$DW$197, DW_AT_high_pc(0x00)
    3366                      .dwattr $C$DW$197, DW_AT_TI_symbol_name("_install_handler")
    3367                      .dwattr $C$DW$197, DW_AT_external
    3368                      .dwattr $C$DW$197, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../config/tms320c55
    3369                      .dwattr $C$DW$197, DW_AT_TI_begin_line(0x03)
    3370                      .dwattr $C$DW$197, DW_AT_TI_begin_column(0x06)
    3371                      .dwattr $C$DW$197, DW_AT_TI_max_frame_size(0x02)
    3372                      .dwattr $C$DW$197, DW_AT_frame_base[DW_OP_bregx 0x24 2]
    3373                      .dwattr $C$DW$197, DW_AT_TI_skeletal
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   77

    3374                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../config/tms320c55x/cpu_support.c",line 4,co
    3375              $C$DW$198       .dwtag  DW_TAG_formal_parameter, DW_AT_name("handler")
    3376                      .dwattr $C$DW$198, DW_AT_TI_symbol_name("_handler")
    3377                      .dwattr $C$DW$198, DW_AT_type(*$C$DW$T$55)
    3378                      .dwattr $C$DW$198, DW_AT_location[DW_OP_reg1]
    3379              $C$DW$199       .dwtag  DW_TAG_formal_parameter, DW_AT_name("vec_no")
    3380                      .dwattr $C$DW$199, DW_AT_TI_symbol_name("_vec_no")
    3381                      .dwattr $C$DW$199, DW_AT_type(*$C$DW$T$87)
    3382                      .dwattr $C$DW$199, DW_AT_location[DW_OP_reg12]
    3383              ;*******************************************************************************
    3384              ;* FUNCTION NAME: install_handler                                              *
    3385              ;*                                                                             *
    3386              ;*   Function Uses Regs : AC0,AC0,T0,T2,AR1,SP,M40,SATA,SATD,RDM,FRCT,SMUL     *
    3387              ;*   Save On Entry Regs : T2                                                   *
    3388              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    3389              ;*   Total Frame Size   : 2 words                                              *
    3390              ;*                        (1 return address/alignment)                         *
    3391              ;*                        (1 register save area)                               *
    3392              ;*   Min System Stack   : 1 word                                               *
    3393              ;*******************************************************************************
    3394 000cf3       _install_handler:
    3395 000cf3 5066          PSH T2
    3396 000cf5 A931          MOV *(#3), AR1 ; |5| 
         000cf7 0000 
         000cf9 03   
    3397 000cfa 7D08          AND #0x0800, AR1, T2 ; |5| 
         000cfc 0069 
    3398 000cfe 46B3       BSET ST1_INTM
    3399              $C$DW$200       .dwtag  DW_TAG_TI_branch
    3400                      .dwattr $C$DW$200, DW_AT_low_pc(0x00)
    3401                      .dwattr $C$DW$200, DW_AT_name("__install_handler")
    3402                      .dwattr $C$DW$200, DW_AT_TI_call
    3403 000d00 6C00          CALL #__install_handler ; |6| 
         000d02 0000!
    3404                                                      ; call occurs [#__install_handler] ; |6| 
    3405 000d04 6116          BCC $C$L118,T2 != #0 ; |7| 
    3406                                                      ; branchcc occurs ; |7| 
    3407 000d06 46B2       BCLR ST1_INTM
    3408 000d08       $C$L118:    
    3409 000d08 5062          POP T2
    3410                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../config/tms320c55x/cpu_support.c",line 8,co
    3411              $C$DW$201       .dwtag  DW_TAG_TI_branch
    3412                      .dwattr $C$DW$201, DW_AT_low_pc(0x00)
    3413                      .dwattr $C$DW$201, DW_AT_TI_return
    3414 000d0a 4804          RET
    3415                                                      ; return occurs
    3416                      .dwattr $C$DW$197, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../config/tms320c55x/
    3417                      .dwattr $C$DW$197, DW_AT_TI_end_line(0x08)
    3418                      .dwattr $C$DW$197, DW_AT_TI_end_column(0x01)
    3419                      .dwendtag $C$DW$197
    3420              
    3421 000d0c               .sect   ".text"
    3422                      .global _get_tim
    3423              
    3424              $C$DW$202       .dwtag  DW_TAG_subprogram, DW_AT_name("get_tim")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   78

    3425                      .dwattr $C$DW$202, DW_AT_low_pc(_get_tim)
    3426                      .dwattr $C$DW$202, DW_AT_high_pc(0x00)
    3427                      .dwattr $C$DW$202, DW_AT_TI_symbol_name("_get_tim")
    3428                      .dwattr $C$DW$202, DW_AT_external
    3429                      .dwattr $C$DW$202, DW_AT_type(*$C$DW$T$65)
    3430                      .dwattr $C$DW$202, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/time_mana
    3431                      .dwattr $C$DW$202, DW_AT_TI_begin_line(0x1d)
    3432                      .dwattr $C$DW$202, DW_AT_TI_begin_column(0x04)
    3433                      .dwattr $C$DW$202, DW_AT_TI_max_frame_size(0x01)
    3434                      .dwattr $C$DW$202, DW_AT_frame_base[DW_OP_bregx 0x24 1]
    3435                      .dwattr $C$DW$202, DW_AT_TI_skeletal
    3436                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/time_manage.c",line 30,column 1,is_
    3437              $C$DW$203       .dwtag  DW_TAG_formal_parameter, DW_AT_name("p_systim")
    3438                      .dwattr $C$DW$203, DW_AT_TI_symbol_name("_p_systim")
    3439                      .dwattr $C$DW$203, DW_AT_type(*$C$DW$T$75)
    3440                      .dwattr $C$DW$203, DW_AT_location[DW_OP_reg17]
    3441              ;*******************************************************************************
    3442              ;* FUNCTION NAME: get_tim                                                      *
    3443              ;*                                                                             *
    3444              ;*   Function Uses Regs : AC0,AC0,T0,AR0,XAR0,AR1,SP,M40,SATA,SATD,RDM,FRCT,   *
    3445              ;*                        SMUL                                                 *
    3446              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    3447              ;*   Total Frame Size   : 1 word                                               *
    3448              ;*                        (1 return address/alignment)                         *
    3449              ;*   Min System Stack   : 1 word                                               *
    3450              ;*******************************************************************************
    3451 000d0c       _get_tim:
    3452 000d0c A931          MOV *(#3), AR1 ; |31| 
         000d0e 0000 
         000d10 03   
    3453 000d11 7D08          AND #0x0800, AR1, AR1 ; |31| 
         000d13 0099 
    3454 000d15 46B3       BSET ST1_INTM
    3455 000d17 ED31          MOV dbl(*(#__system_ticks)), AC0 ; |32| 
         000d19 0800 
         000d1b 0000!
    3456 000d1d EB01          MOV AC0, dbl(*AR0) ; |32| 
         000d1f 08   
    3457 000d20 ED31          MOV dbl(*(#(__system_ticks+2))), AC0 ; |33| 
         000d22 0800 
         000d24 0002!
    3458 000d26 EB15          MOV AC0, dbl(*AR0(short(#2))) ; |33| 
         000d28 08   
    3459 000d29 6119          BCC $C$L119,AR1 != #0 ; |34| 
    3460                                                      ; branchcc occurs ; |34| 
    3461 000d2b 46B2       BCLR ST1_INTM
    3462 000d2d       $C$L119:    
    3463 000d2d 3C04          MOV #0, T0
    3464                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/time_manage.c",line 36,column 1,is_
    3465              $C$DW$204       .dwtag  DW_TAG_TI_branch
    3466                      .dwattr $C$DW$204, DW_AT_low_pc(0x00)
    3467                      .dwattr $C$DW$204, DW_AT_TI_return
    3468 000d2f 4804          RET
    3469                                                      ; return occurs
    3470                      .dwattr $C$DW$202, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/time_manage
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   79

    3471                      .dwattr $C$DW$202, DW_AT_TI_end_line(0x24)
    3472                      .dwattr $C$DW$202, DW_AT_TI_end_column(0x01)
    3473                      .dwendtag $C$DW$202
    3474              
    3475 000d31               .sect   ".text"
    3476                      .global _dly_tsk
    3477              
    3478              $C$DW$205       .dwtag  DW_TAG_subprogram, DW_AT_name("dly_tsk")
    3479                      .dwattr $C$DW$205, DW_AT_low_pc(_dly_tsk)
    3480                      .dwattr $C$DW$205, DW_AT_high_pc(0x00)
    3481                      .dwattr $C$DW$205, DW_AT_TI_symbol_name("_dly_tsk")
    3482                      .dwattr $C$DW$205, DW_AT_external
    3483                      .dwattr $C$DW$205, DW_AT_type(*$C$DW$T$65)
    3484                      .dwattr $C$DW$205, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_s
    3485                      .dwattr $C$DW$205, DW_AT_TI_begin_line(0x16)
    3486                      .dwattr $C$DW$205, DW_AT_TI_begin_column(0x04)
    3487                      .dwattr $C$DW$205, DW_AT_TI_max_frame_size(0x02)
    3488                      .dwattr $C$DW$205, DW_AT_frame_base[DW_OP_bregx 0x24 2]
    3489                      .dwattr $C$DW$205, DW_AT_TI_skeletal
    3490                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_syn.c",line 23,column 1,is_
    3491              $C$DW$206       .dwtag  DW_TAG_formal_parameter, DW_AT_name("dlytim")
    3492                      .dwattr $C$DW$206, DW_AT_TI_symbol_name("_dlytim")
    3493                      .dwattr $C$DW$206, DW_AT_type(*$C$DW$T$69)
    3494                      .dwattr $C$DW$206, DW_AT_location[DW_OP_reg12]
    3495              ;*******************************************************************************
    3496              ;* FUNCTION NAME: dly_tsk                                                      *
    3497              ;*                                                                             *
    3498              ;*   Function Uses Regs : AC0,AC0,T0,T2,AR1,AR3,XAR3,SP,M40,SATA,SATD,RDM,FRCT,*
    3499              ;*                        SMUL                                                 *
    3500              ;*   Save On Entry Regs : T2                                                   *
    3501              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    3502              ;*   Total Frame Size   : 2 words                                              *
    3503              ;*                        (1 return address/alignment)                         *
    3504              ;*                        (1 register save area)                               *
    3505              ;*   Min System Stack   : 1 word                                               *
    3506              ;*******************************************************************************
    3507 000d31       _dly_tsk:
    3508 000d31 5066          PSH T2
    3509 000d33 A931          MOV *(#3), AR1 ; |24| 
         000d35 0000 
         000d37 03   
    3510 000d38 7D08          AND #0x0800, AR1, T2 ; |24| 
         000d3a 0069 
    3511 000d3c 46B3       BSET ST1_INTM
    3512 000d3e ED31          MOV dbl(*(#_runtsk)), XAR3
         000d40 BF00 
         000d42 000C-
    3513 000d44 3C00          MOV #0, AC0 ; |26| 
    3514 000d46 E66D          MOV #0, *AR3(#32) ; |25| 
         000d48 0000 
         000d4a 20   
    3515 000d4b EB6D          MOV AC0, dbl(*AR3(#26))
         000d4d 0800 
         000d4f 1A   
    3516              $C$DW$207       .dwtag  DW_TAG_TI_branch
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   80

    3517                      .dwattr $C$DW$207, DW_AT_low_pc(0x00)
    3518                      .dwattr $C$DW$207, DW_AT_name("_make_wait")
    3519                      .dwattr $C$DW$207, DW_AT_TI_call
    3520 000d50 08F5          CALL #_make_wait ; |27| 
         000d52 C2   
    3521                                                      ; call occurs [#_make_wait] ; |27| 
    3522 000d53 ED31          MOV dbl(*(#_runtsk)), XAR3
         000d55 BF00 
         000d57 000C-
    3523 000d59 EB61          MOV XAR3, dbl(*AR3)
         000d5b B5   
    3524 000d5c EB75          MOV XAR3, dbl(*AR3(short(#2)))
         000d5e B5   
    3525 000d5f 6116          BCC $C$L120,T2 != #0 ; |29| 
    3526                                                      ; branchcc occurs ; |29| 
    3527 000d61 46B2       BCLR ST1_INTM
    3528 000d63       $C$L120:    
    3529 000d63 951F     INTR #31
    3530 000d65 ED31          MOV dbl(*(#_runtsk)), XAR3
         000d67 BF00 
         000d69 000C-
    3531 000d6b A46D          MOV *AR3(#32), T0 ; |32| 
         000d6d 0020 
    3532 000d6f 5062          POP T2
    3533                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_syn.c",line 33,column 1,is_
    3534              $C$DW$208       .dwtag  DW_TAG_TI_branch
    3535                      .dwattr $C$DW$208, DW_AT_low_pc(0x00)
    3536                      .dwattr $C$DW$208, DW_AT_TI_return
    3537 000d71 4804          RET
    3538                                                      ; return occurs
    3539                      .dwattr $C$DW$205, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_dep_syn
    3540                      .dwattr $C$DW$205, DW_AT_TI_end_line(0x21)
    3541                      .dwattr $C$DW$205, DW_AT_TI_end_column(0x01)
    3542                      .dwendtag $C$DW$205
    3543              
    3544 000d73               .sect   ".text"
    3545                      .global _cre_flg
    3546              
    3547              $C$DW$209       .dwtag  DW_TAG_subprogram, DW_AT_name("cre_flg")
    3548                      .dwattr $C$DW$209, DW_AT_low_pc(_cre_flg)
    3549                      .dwattr $C$DW$209, DW_AT_high_pc(0x00)
    3550                      .dwattr $C$DW$209, DW_AT_TI_symbol_name("_cre_flg")
    3551                      .dwattr $C$DW$209, DW_AT_external
    3552                      .dwattr $C$DW$209, DW_AT_type(*$C$DW$T$65)
    3553                      .dwattr $C$DW$209, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflag
    3554                      .dwattr $C$DW$209, DW_AT_TI_begin_line(0x4a)
    3555                      .dwattr $C$DW$209, DW_AT_TI_begin_column(0x04)
    3556                      .dwattr $C$DW$209, DW_AT_TI_max_frame_size(0x01)
    3557                      .dwattr $C$DW$209, DW_AT_frame_base[DW_OP_bregx 0x24 1]
    3558                      .dwattr $C$DW$209, DW_AT_TI_skeletal
    3559                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 75,column 1,is_s
    3560              $C$DW$210       .dwtag  DW_TAG_formal_parameter, DW_AT_name("flgid")
    3561                      .dwattr $C$DW$210, DW_AT_TI_symbol_name("_flgid")
    3562                      .dwattr $C$DW$210, DW_AT_type(*$C$DW$T$38)
    3563                      .dwattr $C$DW$210, DW_AT_location[DW_OP_reg12]
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   81

    3564              $C$DW$211       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pk_cflg")
    3565                      .dwattr $C$DW$211, DW_AT_TI_symbol_name("_pk_cflg")
    3566                      .dwattr $C$DW$211, DW_AT_type(*$C$DW$T$129)
    3567                      .dwattr $C$DW$211, DW_AT_location[DW_OP_reg17]
    3568              ;*******************************************************************************
    3569              ;* FUNCTION NAME: cre_flg                                                      *
    3570              ;*                                                                             *
    3571              ;*   Function Uses Regs : T0,AR0,XAR0,AR1,AR2,AR3,XAR3,AR4,SP,TC1,M40,SATA,    *
    3572              ;*                        SATD,RDM,FRCT,SMUL                                   *
    3573              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    3574              ;*   Total Frame Size   : 1 word                                               *
    3575              ;*                        (1 return address/alignment)                         *
    3576              ;*   Min System Stack   : 1 word                                               *
    3577              ;*******************************************************************************
    3578 000d73       _cre_flg:
    3579 000d73 6434          BCC $C$L121,T0 <= #0 ; |79| 
    3580                                                      ; branchcc occurs ; |79| 
    3581 000d75 3C29          MOV #2, AR1
    3582              
    3583 000d77 1244          CMP T0 < AR1, TC1 ; |79| 
         000d79 90   
    3584 000d7a 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    3585              
    3586 000d7b 63E4          BCC $C$L122,TC1 ; |79| 
    3587                                                      ; branchcc occurs ; |79| 
    3588 000d7d       $C$L121:    
    3589 000d7d 76FF          MOV #-18, T0 ; |80| 
         000d7f EE48 
    3590 000d81 0600          B $C$L125 ; |80| 
         000d83 48   
    3591                                                      ; branch occurs ; |80| 
    3592 000d84       $C$L122:    
    3593 000d84 AC01          MOV *AR0, AR4 ; |82| 
    3594 000d86 7DFF          AND #0xfff8, AR4, AR1 ; |82| 
         000d88 F89C 
    3595 000d8c 9E99          XCCPART AR1 != #0 ||
    3596 000d8a 3EB4             MOV #-11, T0
    3597 000d8e 0419          BCC $C$L125,AR1 != #0 ; |84| 
         000d90 3B   
    3598                                                      ; branchcc occurs ; |84| 
    3599 000d91 A931          MOV *(#3), AR1 ; |89| 
         000d93 0000 
         000d95 03   
    3600 000d96 7D08          AND #0x0800, AR1, AR1 ; |89| 
         000d98 0099 
    3601 000d9a 46B3       BSET ST1_INTM
    3602 000d9c EC31          AMOV #_flgcb_table, XAR3 ; |90| 
         000d9e BE00 
         000da0 0000-
    3603 000da2 AA6D          MOV *AR3(#9), AR2 ; |90| 
         000da4 0009 
    3604 000da6 041A          BCC $C$L123,AR2 != #0 ; |90| 
         000da8 1B   
    3605                                                      ; branchcc occurs ; |90| 
    3606 000da9 EB61          MOV XAR3, dbl(*AR3)
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   82

         000dab B5   
    3607 000dac E66D          MOV #2, *AR3(#9) ; |96| 
         000dae 0200 
         000db0 09   
    3608 000db1 EB75          MOV XAR3, dbl(*AR3(short(#2)))
         000db3 B5   
    3609              
    3610 000db6 3D04          MOV #0, T0
    3611 000db4 AA13  ||      MOV *AR0(short(#1)), AR2 ; |95| 
    3612              
    3613 000db8 CA6D          MOV AR2, *AR3(#10) ; |95| 
         000dba 000A 
    3614 000dbc CC6D          MOV AR4, *AR3(#8) ; |94| 
         000dbe 0008 
    3615 000dc0 6409          BCC $C$L124,AR1 == #0 ; |99| 
    3616                                                      ; branchcc occurs ; |99| 
    3617 000dc2 4A08          B $C$L125 ; |99| 
    3618                                                      ; branch occurs ; |99| 
    3619 000dc4       $C$L123:    
    3620 000dc4 76FF          MOV #-41, T0 ; |91| 
         000dc6 D748 
    3621 000dc8 6119          BCC $C$L125,AR1 != #0 ; |99| 
    3622                                                      ; branchcc occurs ; |99| 
    3623 000dca       $C$L124:    
    3624 000dca 46B2       BCLR ST1_INTM
    3625 000dcc       $C$L125:    
    3626                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 102,column 1,is_
    3627              $C$DW$212       .dwtag  DW_TAG_TI_branch
    3628                      .dwattr $C$DW$212, DW_AT_low_pc(0x00)
    3629                      .dwattr $C$DW$212, DW_AT_TI_return
    3630 000dcc 4804          RET
    3631                                                      ; return occurs
    3632                      .dwattr $C$DW$209, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.
    3633                      .dwattr $C$DW$209, DW_AT_TI_end_line(0x66)
    3634                      .dwattr $C$DW$209, DW_AT_TI_end_column(0x01)
    3635                      .dwendtag $C$DW$209
    3636              
    3637 000dce               .sect   ".text"
    3638                      .global _clr_flg
    3639              
    3640              $C$DW$213       .dwtag  DW_TAG_subprogram, DW_AT_name("clr_flg")
    3641                      .dwattr $C$DW$213, DW_AT_low_pc(_clr_flg)
    3642                      .dwattr $C$DW$213, DW_AT_high_pc(0x00)
    3643                      .dwattr $C$DW$213, DW_AT_TI_symbol_name("_clr_flg")
    3644                      .dwattr $C$DW$213, DW_AT_external
    3645                      .dwattr $C$DW$213, DW_AT_type(*$C$DW$T$65)
    3646                      .dwattr $C$DW$213, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflag
    3647                      .dwattr $C$DW$213, DW_AT_TI_begin_line(0x9a)
    3648                      .dwattr $C$DW$213, DW_AT_TI_begin_column(0x04)
    3649                      .dwattr $C$DW$213, DW_AT_TI_max_frame_size(0x01)
    3650                      .dwattr $C$DW$213, DW_AT_frame_base[DW_OP_bregx 0x24 1]
    3651                      .dwattr $C$DW$213, DW_AT_TI_skeletal
    3652                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 155,column 1,is_
    3653              $C$DW$214       .dwtag  DW_TAG_formal_parameter, DW_AT_name("flgid")
    3654                      .dwattr $C$DW$214, DW_AT_TI_symbol_name("_flgid")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   83

    3655                      .dwattr $C$DW$214, DW_AT_type(*$C$DW$T$38)
    3656                      .dwattr $C$DW$214, DW_AT_location[DW_OP_reg12]
    3657              $C$DW$215       .dwtag  DW_TAG_formal_parameter, DW_AT_name("clrptn")
    3658                      .dwattr $C$DW$215, DW_AT_TI_symbol_name("_clrptn")
    3659                      .dwattr $C$DW$215, DW_AT_type(*$C$DW$T$22)
    3660                      .dwattr $C$DW$215, DW_AT_location[DW_OP_reg13]
    3661              ;*******************************************************************************
    3662              ;* FUNCTION NAME: clr_flg                                                      *
    3663              ;*                                                                             *
    3664              ;*   Function Uses Regs : AC0,AC0,T0,T1,AR1,SP,TC1,M40,SATA,SATD,RDM,FRCT,SMUL *
    3665              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    3666              ;*   Total Frame Size   : 1 word                                               *
    3667              ;*                        (1 return address/alignment)                         *
    3668              ;*   Min System Stack   : 1 word                                               *
    3669              ;*******************************************************************************
    3670 000dce       _clr_flg:
    3671 000dce 6434          BCC $C$L126,T0 <= #0 ; |158| 
    3672                                                      ; branchcc occurs ; |158| 
    3673 000dd0 3C29          MOV #2, AR1
    3674              
    3675 000dd2 1244          CMP T0 < AR1, TC1 ; |158| 
         000dd4 90   
    3676 000dd5 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    3677              
    3678 000dd6 6364          BCC $C$L127,TC1 ; |158| 
    3679                                                      ; branchcc occurs ; |158| 
    3680 000dd8       $C$L126:    
    3681 000dd8 76FF          MOV #-18, T0 ; |159| 
         000dda EE48 
    3682 000ddc 4A2A          B $C$L129 ; |159| 
    3683                                                      ; branch occurs ; |159| 
    3684 000dde       $C$L127:    
    3685 000dde A931          MOV *(#(_flgcb_table+9)), AR1 ; |163| 
         000de0 0000 
         000de2 09-  
    3686 000de7 9E89          XCCPART AR1 == #0 ||
    3687 000de3 76FF             MOV #-42, T0 ; |164| 
         000de5 D648 
    3688 000de9 0409          BCC $C$L129,AR1 == #0 ; |164| 
         000deb 1C   
    3689                                                      ; branchcc occurs ; |164| 
    3690 000dec A931          MOV *(#3), AR1 ; |166| 
         000dee 0000 
         000df0 03   
    3691 000df1 7D08          AND #0x0800, AR1, AR1 ; |166| 
         000df3 0099 
    3692 000df5 46B3       BSET ST1_INTM
    3693 000df7 D931          AND *(#(_flgcb_table+10)), T1, AC0 ; |167| 
         000df9 0500 
         000dfb 000A-
    3694 000dfd C031          MOV AC0, *(#(_flgcb_table+10)) ; |167| 
         000dff 0000 
         000e01 0A-  
    3695 000e02 6119          BCC $C$L128,AR1 != #0 ; |168| 
    3696                                                      ; branchcc occurs ; |168| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   84

    3697 000e04 46B2       BCLR ST1_INTM
    3698 000e06       $C$L128:    
    3699 000e06 3C04          MOV #0, T0
    3700 000e08       $C$L129:    
    3701                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.c",line 170,column 1,is_
    3702              $C$DW$216       .dwtag  DW_TAG_TI_branch
    3703                      .dwattr $C$DW$216, DW_AT_low_pc(0x00)
    3704                      .dwattr $C$DW$216, DW_AT_TI_return
    3705 000e08 4804          RET
    3706                                                      ; return occurs
    3707                      .dwattr $C$DW$213, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/eventflags.
    3708                      .dwattr $C$DW$213, DW_AT_TI_end_line(0xaa)
    3709                      .dwattr $C$DW$213, DW_AT_TI_end_column(0x01)
    3710                      .dwendtag $C$DW$213
    3711              
    3712 000e0a               .sect   ".text"
    3713                      .global _change_task_priority
    3714              
    3715              $C$DW$217       .dwtag  DW_TAG_subprogram, DW_AT_name("change_task_priority")
    3716                      .dwattr $C$DW$217, DW_AT_low_pc(_change_task_priority)
    3717                      .dwattr $C$DW$217, DW_AT_high_pc(0x00)
    3718                      .dwattr $C$DW$217, DW_AT_TI_symbol_name("_change_task_priority")
    3719                      .dwattr $C$DW$217, DW_AT_external
    3720                      .dwattr $C$DW$217, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
    3721                      .dwattr $C$DW$217, DW_AT_TI_begin_line(0x88)
    3722                      .dwattr $C$DW$217, DW_AT_TI_begin_column(0x06)
    3723                      .dwattr $C$DW$217, DW_AT_TI_max_frame_size(0x01)
    3724                      .dwattr $C$DW$217, DW_AT_frame_base[DW_OP_bregx 0x24 1]
    3725                      .dwattr $C$DW$217, DW_AT_TI_skeletal
    3726                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 137,column 1,is_stmt,a
    3727              $C$DW$218       .dwtag  DW_TAG_formal_parameter, DW_AT_name("tcb")
    3728                      .dwattr $C$DW$218, DW_AT_TI_symbol_name("_tcb")
    3729                      .dwattr $C$DW$218, DW_AT_type(*$C$DW$T$47)
    3730                      .dwattr $C$DW$218, DW_AT_location[DW_OP_reg17]
    3731              $C$DW$219       .dwtag  DW_TAG_formal_parameter, DW_AT_name("priority")
    3732                      .dwattr $C$DW$219, DW_AT_TI_symbol_name("_priority")
    3733                      .dwattr $C$DW$219, DW_AT_type(*$C$DW$T$44)
    3734                      .dwattr $C$DW$219, DW_AT_location[DW_OP_reg12]
    3735              ;*******************************************************************************
    3736              ;* FUNCTION NAME: change_task_priority                                         *
    3737              ;*                                                                             *
    3738              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AC2,AC2,AC3,AC3,T0,T1,AR0,XAR0,AR1,  *
    3739              ;*                        XAR1,AR2,XAR2,AR3,XAR3,AR4,XAR4,SP,BRC0,CARRY,TC1,   *
    3740              ;*                        M40,SATA,SATD,RDM,FRCT,SMUL                          *
    3741              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    3742              ;*   Total Frame Size   : 1 word                                               *
    3743              ;*                        (1 return address/alignment)                         *
    3744              ;*   Min System Stack   : 1 word                                               *
    3745              ;*******************************************************************************
    3746 000e0a       _change_task_priority:
    3747 000e0a 9080          MOV XAR0, AC0
    3748 000e0c 900B          MOV AC0, XAR3
    3749 000e0e A96D          MOV *AR3(#22), AR1 ; |179| 
         000e10 0016 
    3750 000e12 ED61          MOV dbl(*AR3), XAR3
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   85

         000e14 BF   
    3751 000e15 1A00          OR #0, AC0, AC2
         000e17 20   
    3752 000e18 90B1          MOV XAR3, AC1
    3753 000e1a 1A00          OR #0, AC1, AC3
         000e1c 31   
    3754 000e1d 1230          CMPU AC3 == AC2, TC1 ; |63| 
         000e1f 24   
    3755 000e20 0464          BCC $C$L130,TC1 ; |63| 
         000e22 13   
    3756                                                      ; branchcc occurs ; |63| 
    3757 000e23 900B          MOV AC0, XAR3
    3758 000e25 ED75          MOV dbl(*AR3(short(#2))), XAR3
         000e27 BF   
    3759 000e28 EB61          MOV AC1, dbl(*AR3)
         000e2a 18   
    3760 000e2b 900B          MOV AC0, XAR3
    3761 000e2d ED75          MOV dbl(*AR3(short(#2))), XAR2
         000e2f AF   
    3762 000e30 ED61          MOV dbl(*AR3), XAR3
         000e32 BF   
    3763 000e33 EB75          MOV XAR2, dbl(*AR3(short(#2)))
         000e35 A5   
    3764 000e36       $C$L130:    
    3765 000e36 EC31          AMOV #_ready_queue, XAR3 ; |110| 
         000e38 BE00 
         000e3a 0074-
    3766 000e3c 2292          MOV AR1, AC2
    3767 000e3e 90B1          MOV XAR3, AC1
    3768 000e40 10A5          SFTS AC2, #2, AC2 ; |110| 
         000e42 02   
    3769 000e43 4022          ADD #2, AC2 ; |110| 
    3770 000e45 2421          ADD AC2, AC1 ; |110| 
    3771 000e47 901A          MOV AC1, XAR2
    3772 000e49 ED41          MOV dbl(*AR2), XAR2
         000e4b AF   
    3773 000e4c 90A2          MOV XAR2, AC2
    3774 000e4e 122C          CMPU AC2 != AC1, TC1 ; |110| 
         000e50 14   
    3775 000e51 0464          BCC $C$L137,TC1 ; |110| 
         000e53 6A   
    3776                                                      ; branchcc occurs ; |110| 
    3777 000e54 2291          MOV AR1, AC1
    3778 000e56 1055          SFTS AC1, #-4, AC1 ; |56| 
         000e58 3C   
    3779              
    3780 000e59 7B00          ADD #48, AC1, AC2 ; |56| 
         000e5b 3021 
    3781 000e5d 231C  ||      MOV AC1, AR4 ; |56| 
    3782              
    3783 000e5f 90B1          MOV XAR3, AC1
    3784 000e61 2421          ADD AC2, AC1 ; |56| 
    3785 000e63 901A          MOV AC1, XAR2
    3786 000e65 180F          AND #0x000f, AR1, T1 ; |56| 
         000e67 59   
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   86

    3787 000e68 3C11          MOV #1, AC1
    3788 000e6a 5C55          SFTS AC1, T1, AC1 ; |56| 
    3789 000e6c 3615          NOT AC1, T1 ; |56| 
    3790 000e6e D941          AND *AR2, T1, AC1 ; |56| 
         000e70 15   
    3791 000e71 C141          MOV AC1, *AR2 ; |56| 
    3792 000e73 A531          MOV *(#_ready_queue), T1 ; |191| 
         000e75 0000 
         000e77 74-  
    3793              
    3794 000e78 129C          CMP AR1 != T1, TC1 ; |191| 
         000e7a 50   
    3795 000e7b 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    3796              
    3797 000e7c 0464          BCC $C$L137,TC1 ; |191| 
         000e7e 3F   
    3798                                                      ; branchcc occurs ; |191| 
    3799              
    3800 000e7f 7600          MOV #16, AR4 ; |196| 
         000e81 10C8 
    3801 000e83 23C1  ||      MOV AR4, AC1 ; |196| 
    3802              
    3803 000e85 1298          CMP AR1 >= AR4, TC1 ; |196| 
         000e87 C0   
    3804 000e88 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    3805              
    3806 000e89 0464          BCC $C$L136,TC1 ; |196| 
         000e8b 2C   
    3807                                                      ; branchcc occurs ; |196| 
    3808 000e8c 3419          NEG AC1, AR1
    3809 000e8e 529E          MOV AR1, BRC0
    3810                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queue.h",line 196,column 0,is
    3811 ****** PORT          RPTB $C$L132-1
    3811 000e90 0E00          RPTB $C$L132-1; port of RPTB $C$L132-1
         000e92 04   
    3812                                                          ; loop starts
    3813 000e93       $C$L131:    
    3814 000e93       $C$DW$L$_change_task_priority$7$B:
    3815 000e93 A941              MOV *AR2, AR1 ; |197| 
    3816 000e95 6319              BCC $C$L133,AR1 != #0 ; |197| 
    3817                                                          ; branchcc occurs ; |197| 
    3818 000e97       $C$DW$L$_change_task_priority$7$E:
    3819 000e97       $C$DW$L$_change_task_priority$8$B:
    3820                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queue.h",line 201,column 0,is
    3821              
    3822 000e97 B443              AMAR *AR2+
    3823 000e99 4111  ||          ADD #1, AC1 ; |196| 
    3811                                    ; port of RPTB $C$L132-1
    3824              
    3825                                                      ; loop ends ; |196| 
    3826 000e9b       $C$DW$L$_change_task_priority$8$E:
    3827 000e9b       $C$L132:    
    3828 000e9b 4A1B          B $C$L136 ; |196| 
    3829                                                      ; branch occurs ; |196| 
    3830 000e9d       $C$L133:    
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   87

    3831 000e9d EC00          BTST @#0, AR1, TC1 ; |72| 
         000e9f 98   
    3832 000ea0 3C02          MOV #0, AC2
    3833 000ea2 6564          BCC $C$L135,TC1 ; |72| 
    3834                                                      ; branchcc occurs ; |72| 
    3835 000ea4       $C$L134:    
    3836 000ea4       $C$DW$L$_change_task_priority$11$B:
    3837                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queue.h",line 72,column 0,is_
    3838 000ea4 4012          ADD #1, AC2 ; |74| 
    3839 000ea6 5091          SFTL AR1, #-1 ; |72| 
    3840 000ea8 EC00          BTST @#0, AR1, TC1 ; |72| 
         000eaa 98   
    3841                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_queue.h",line 75,column 0,is_
    3842 000eab 0474          BCC $C$L134,!TC1 ; |72| 
         000ead F6   
    3843                                                      ; branchcc occurs ; |72| 
    3844 000eae       $C$DW$L$_change_task_priority$11$E:
    3845 000eae       $C$L135:    
    3846 000eae 1093          ADD AC1 << #4, AC2 ; |198| 
         000eb0 04   
    3847 000eb1 C231          MOV AC2, *(#_ready_queue) ; |198| 
         000eb3 0000 
         000eb5 74-  
    3848 000eb6 4A06          B $C$L137 ; |199| 
    3849                                                      ; branch occurs ; |199| 
    3850 000eb8       $C$L136:    
    3851 000eb8 E631          MOV #11, *(#_ready_queue) ; |205| 
         000eba 0B00 
         000ebc 0074-
    3852 000ebe       $C$L137:    
    3853 000ebe 900A          MOV AC0, XAR2
    3854 000ec0 A131          MOV *(#_ready_queue), AC1 ; |110| 
         000ec2 0000 
         000ec4 74-  
    3855 000ec5 1095          SFTS AC1, #2, AC2 ; |110| 
         000ec7 02   
    3856 000ec8 4022          ADD #2, AC2 ; |110| 
    3857 000eca 90B1          MOV XAR3, AC1
    3858 000ecc C44D          MOV T0, *AR2(#22) ; |139| 
         000ece 0016 
    3859 000ed0 2421          ADD AC2, AC1 ; |110| 
    3860 000ed2 901A          MOV AC1, XAR2
    3861 000ed4 2241          MOV T0, AC1
    3862 000ed6 ED41          MOV dbl(*AR2), XAR2
         000ed8 AF   
    3863 000ed9 1095          SFTS AC1, #2, AC2 ; |47| 
         000edb 02   
    3864 000edc EB31          MOV XAR2, dbl(*(#_schedtsk))
         000ede A500 
         000ee0 000E-
    3865 000ee2 4022          ADD #2, AC2 ; |47| 
    3866 000ee4 90B1          MOV XAR3, AC1
    3867 000ee6 2421          ADD AC2, AC1 ; |47| 
    3868 000ee8 901A          MOV AC1, XAR2
    3869 000eea 900C          MOV AC0, XAR4
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   88

    3870 000eec 2241          MOV T0, AC1
    3871 000eee ED55          MOV dbl(*AR2(short(#2))), XAR1
         000ef0 9F   
    3872 000ef1 1055          SFTS AC1, #-4, AC1 ; |46| 
         000ef3 3C   
    3873 000ef4 EB81          MOV XAR2, dbl(*AR4)
         000ef6 A5   
    3874 000ef7 A116          MOV mmap(AC1L), AC1 ; |46| 
         000ef9 98   
    3875 000efa EB95          MOV XAR1, dbl(*AR4(short(#2)))
         000efc 95   
    3876 000efd 7B00          ADD #48, AC1, AC2 ; |46| 
         000eff 3021 
    3877 000f01 ED55          MOV dbl(*AR2(short(#2))), XAR4
         000f03 CF   
    3878 000f04 90B1          MOV XAR3, AC1
    3879 000f06 2421          ADD AC2, AC1 ; |46| 
    3880 000f08 901B          MOV AC1, XAR3
    3881 000f0a 9009          MOV AC0, XAR1
    3882              
    3883 000f0c EB55          MOV XAR1, dbl(*AR2(short(#2)))
         000f0e 95   
    3884 000f0f 190F  ||      AND #0x000f, T0, T1 ; |46| 
         000f11 54   
    3885              
    3886 000f15 3D11          MOV #1, AC1
    3887 000f12 EB81  ||      MOV XAR1, dbl(*AR4)
         000f14 95   
    3888              
    3889 000f17 5C55          SFTS AC1, T1, AC1 ; |46| 
    3890 000f19 DA61          OR *AR3, AC1, AR1 ; |46| 
         000f1b 91   
    3891 000f1c C961          MOV AR1, *AR3 ; |46| 
    3892 000f1e A931          MOV *(#_ready_queue), AR1 ; |142| 
         000f20 0000 
         000f22 74-  
    3893              
    3894 000f23 1248          CMP T0 >= AR1, TC1 ; |142| 
         000f25 90   
    3895 000f26 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    3896              
    3897 000f27 9674          XCC !TC1
    3898 000f29 C431             MOV T0, *(#_ready_queue) ; |143| 
         000f2b 0000 
         000f2d 74-  
    3899 000f2e 9674          XCC !TC1
    3900 000f30 EB31             MOV AC0, dbl(*(#_schedtsk))
         000f32 0800 
         000f34 000E-
    3901                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c",line 143,column 1,is_stmt
    3902              $C$DW$220       .dwtag  DW_TAG_TI_branch
    3903                      .dwattr $C$DW$220, DW_AT_low_pc(0x00)
    3904                      .dwattr $C$DW$220, DW_AT_TI_return
    3905 000f36 4804          RET
    3906                                                      ; return occurs
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   89

    3907              
    3908              $C$DW$221       .dwtag  DW_TAG_TI_loop
    3909                      .dwattr $C$DW$221, DW_AT_name("/tmp/129924KNrf8:$C$L134:1:1739870196")
    3910                      .dwattr $C$DW$221, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_que
    3911                      .dwattr $C$DW$221, DW_AT_TI_begin_line(0x48)
    3912                      .dwattr $C$DW$221, DW_AT_TI_end_line(0x4b)
    3913              $C$DW$222       .dwtag  DW_TAG_TI_loop_range
    3914                      .dwattr $C$DW$222, DW_AT_low_pc($C$DW$L$_change_task_priority$11$B)
    3915                      .dwattr $C$DW$222, DW_AT_high_pc($C$DW$L$_change_task_priority$11$E)
    3916                      .dwendtag $C$DW$221
    3917              
    3918              
    3919              $C$DW$223       .dwtag  DW_TAG_TI_loop
    3920                      .dwattr $C$DW$223, DW_AT_name("/tmp/129924KNrf8:$C$L131:1:1739870196")
    3921                      .dwattr $C$DW$223, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/ready_que
    3922                      .dwattr $C$DW$223, DW_AT_TI_begin_line(0xc4)
    3923                      .dwattr $C$DW$223, DW_AT_TI_end_line(0xc9)
    3924              $C$DW$224       .dwtag  DW_TAG_TI_loop_range
    3925                      .dwattr $C$DW$224, DW_AT_low_pc($C$DW$L$_change_task_priority$7$B)
    3926                      .dwattr $C$DW$224, DW_AT_high_pc($C$DW$L$_change_task_priority$7$E)
    3927              $C$DW$225       .dwtag  DW_TAG_TI_loop_range
    3928                      .dwattr $C$DW$225, DW_AT_low_pc($C$DW$L$_change_task_priority$8$B)
    3929                      .dwattr $C$DW$225, DW_AT_high_pc($C$DW$L$_change_task_priority$8$E)
    3930                      .dwendtag $C$DW$223
    3931              
    3932                      .dwattr $C$DW$217, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/task.c")
    3933                      .dwattr $C$DW$217, DW_AT_TI_end_line(0x8f)
    3934                      .dwattr $C$DW$217, DW_AT_TI_end_column(0x01)
    3935                      .dwendtag $C$DW$217
    3936              
    3937 000f38               .sect   ".text"
    3938                      .global _chg_pri
    3939              
    3940              $C$DW$226       .dwtag  DW_TAG_subprogram, DW_AT_name("chg_pri")
    3941                      .dwattr $C$DW$226, DW_AT_low_pc(_chg_pri)
    3942                      .dwattr $C$DW$226, DW_AT_high_pc(0x00)
    3943                      .dwattr $C$DW$226, DW_AT_TI_symbol_name("_chg_pri")
    3944                      .dwattr $C$DW$226, DW_AT_external
    3945                      .dwattr $C$DW$226, DW_AT_type(*$C$DW$T$65)
    3946                      .dwattr $C$DW$226, DW_AT_TI_begin_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manag
    3947                      .dwattr $C$DW$226, DW_AT_TI_begin_line(0x8a)
    3948                      .dwattr $C$DW$226, DW_AT_TI_begin_column(0x04)
    3949                      .dwattr $C$DW$226, DW_AT_TI_max_frame_size(0x02)
    3950                      .dwattr $C$DW$226, DW_AT_frame_base[DW_OP_bregx 0x24 2]
    3951                      .dwattr $C$DW$226, DW_AT_TI_skeletal
    3952                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manage.c",line 139,column 1,is_
    3953              $C$DW$227       .dwtag  DW_TAG_formal_parameter, DW_AT_name("tskid")
    3954                      .dwattr $C$DW$227, DW_AT_TI_symbol_name("_tskid")
    3955                      .dwattr $C$DW$227, DW_AT_type(*$C$DW$T$38)
    3956                      .dwattr $C$DW$227, DW_AT_location[DW_OP_reg12]
    3957              $C$DW$228       .dwtag  DW_TAG_formal_parameter, DW_AT_name("tskpri")
    3958                      .dwattr $C$DW$228, DW_AT_TI_symbol_name("_tskpri")
    3959                      .dwattr $C$DW$228, DW_AT_type(*$C$DW$T$44)
    3960                      .dwattr $C$DW$228, DW_AT_location[DW_OP_reg13]
    3961              ;*******************************************************************************
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   90

    3962              ;* FUNCTION NAME: chg_pri                                                      *
    3963              ;*                                                                             *
    3964              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,T0,T1,T2,AR0,XAR0,AR1,AR2,AR3,XAR3,  *
    3965              ;*                        SP,CARRY,TC1,M40,SATA,SATD,RDM,FRCT,SMUL             *
    3966              ;*   Save On Entry Regs : T2                                                   *
    3967              ;*   Stack Frame        : Compact (No Frame Pointer)                           *
    3968              ;*   Total Frame Size   : 2 words                                              *
    3969              ;*                        (1 return address/alignment)                         *
    3970              ;*                        (1 register save area)                               *
    3971              ;*   Min System Stack   : 1 word                                               *
    3972              ;*******************************************************************************
    3973 000f38       _chg_pri:
    3974 000f38 3C29          MOV #2, AR1
    3975              
    3976 000f3a 1294          CMP T0 > AR1, TC1 ; |143| 
         000f3c 40   
    3977 000f3d 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    3978              
    3979 000f3e 5066          PSH T2
    3980 000f40 0464          BCC $C$L138,TC1 ; |143| 
         000f42 12   
    3981                                                      ; branchcc occurs ; |143| 
    3982 000f43 0414          BCC $C$L139,T0 != #0 ; |143| 
         000f45 16   
    3983                                                      ; branchcc occurs ; |143| 
    3984 000f46 ED31          MOV dbl(*(#_runtsk)), XAR3
         000f48 BF00 
         000f4a 000C-
    3985              
    3986 000f4c 90B0          MOV XAR3, AC0
    3987 000f4e 3D01  ||      MOV #0, AC1 ; |143| 
    3988              
    3989 000f50 121C          CMPU AC1 != AC0, TC1 ; |143| 
         000f52 04   
    3990 000f53 63E4          BCC $C$L139,TC1 ; |143| 
    3991                                                      ; branchcc occurs ; |143| 
    3992 000f55       $C$L138:    
    3993 000f55 76FF          MOV #-18, T0 ; |145| 
         000f57 EE48 
    3994 000f59 0600          B $C$L147 ; |145| 
         000f5b 78   
    3995                                                      ; branch occurs ; |145| 
    3996 000f5c       $C$L139:    
    3997 000f5c 6535          BCC $C$L140,T1 <= #0 ; |147| 
    3998                                                      ; branchcc occurs ; |147| 
    3999 000f5e 3CC9          MOV #12, AR1
    4000              
    4001 000f60 1258          CMP T1 >= AR1, TC1 ; |147| 
         000f62 90   
    4002 000f63 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    4003              
    4004 000f64 6264          BCC $C$L141,TC1 ; |147| 
    4005                                                      ; branchcc occurs ; |147| 
    4006 000f66 4A09          B $C$L142 ; |147| 
    4007                                                      ; branch occurs ; |147| 
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   91

    4008 000f68       $C$L140:    
    4009 000f68 6385          BCC $C$L142,T1 == #0 ; |147| 
    4010                                                      ; branchcc occurs ; |147| 
    4011 000f6a       $C$L141:    
    4012 000f6a 76FF          MOV #-17, T0 ; |148| 
         000f6c EF48 
    4013 000f6e 0600          B $C$L147 ; |148| 
         000f70 63   
    4014                                                      ; branch occurs ; |148| 
    4015 000f71       $C$L142:    
    4016 000f71 9604          XCC T0 == #0
    4017 000f73 ED31             MOV dbl(*(#_runtsk)), XAR0
         000f75 8F00 
         000f77 000C-
    4018 000f79 0404          BCC $C$L143,T0 == #0 ; |150| 
         000f7b 18   
    4019                                                      ; branchcc occurs ; |150| 
    4020 000f7c 7C00          SUB #1, T0, AR1 ; |150| 
         000f7e 0194 
    4021 000f80 2290          MOV AR1, AC0
    4022 000f82 1045          SFTS AC0, #4, AC1 ; |150| 
         000f84 04   
    4023 000f85 1043          ADD AC0 << #5, AC1 ; |150| 
         000f87 05   
    4024 000f88 7A00          MOV #(_tcb_table >> 16) << #16, AC0 ; |150| 
         000f8a 000A%
    4025 000f8c 7E00          OR #(_tcb_table & 0xffff), AC0, AC0 ; |150| 
         000f8e 0000%
    4026 000f90 2410          ADD AC1, AC0 ; |150| 
    4027 000f92 9008          MOV AC0, XAR0
    4028 000f94       $C$L143:    
    4029 000f94 A90D          MOV *AR0(#24), AR1 ; |151| 
         000f96 0018 
    4030 000f9c 9E89          XCCPART AR1 == #0 ||
    4031 000f98 76FF             MOV #-42, T0 ; |152| 
         000f9a D648 
    4032 000f9e 0409          BCC $C$L147,AR1 == #0 ; |152| 
         000fa0 33   
    4033                                                      ; branchcc occurs ; |152| 
    4034 000fa1 7600          MOV #16, AR2 ; |153| 
         000fa3 10A8 
    4035              
    4036 000fa5 129C          CMPU AR1 != AR2, TC1 ; |153| 
         000fa7 A4   
    4037 000fa8 21    ||      NOP       ;                     avoids Silicon Exception CPU_24
    4038              
    4039 000fad 9EF4          XCCPART !TC1 ||
    4040 000fa9 76FF             MOV #-41, T0 ; |154| 
         000fab D748 
    4041 000faf 0474          BCC $C$L147,!TC1 ; |154| 
         000fb1 22   
    4042                                                      ; branchcc occurs ; |154| 
    4043 000fb2 A931          MOV *(#3), AR1 ; |156| 
         000fb4 0000 
         000fb6 03   
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   92

    4044 000fb7 7D08          AND #0x0800, AR1, T2 ; |156| 
         000fb9 0069 
    4045 000fbb 46B3       BSET ST1_INTM
    4046 000fbd 6315          BCC $C$L144,T1 != #0 ; |157| 
    4047                                                      ; branchcc occurs ; |157| 
    4048 000fbf A40D          MOV *AR0(#21), T0 ; |158| 
         000fc1 0015 
    4049 000fc3 4A04          B $C$L145 ; |158| 
    4050                                                      ; branch occurs ; |158| 
    4051 000fc5       $C$L144:    
    4052 000fc5 7C00          SUB #1, T1, T0 ; |160| 
         000fc7 0145 
    4053              $C$L145:    
    4054              $C$DW$229       .dwtag  DW_TAG_TI_branch
    4055                      .dwattr $C$DW$229, DW_AT_low_pc(0x00)
    4056                      .dwattr $C$DW$229, DW_AT_name("_change_task_priority")
    4057                      .dwattr $C$DW$229, DW_AT_TI_call
    4058 000fc9 08FE          CALL #_change_task_priority ; |160| 
         000fcb 3E   
    4059                                                      ; call occurs [#_change_task_priority] ; |160| 
    4060 000fcc 6116          BCC $C$L146,T2 != #0 ; |162| 
    4061                                                      ; branchcc occurs ; |162| 
    4062 000fce 46B2       BCLR ST1_INTM
    4063 000fd0       $C$L146:    
    4064 000fd0 951F     INTR #31
    4065 000fd2 3C04          MOV #0, T0
    4066 000fd4       $C$L147:    
    4067 000fd4 5062          POP T2
    4068                      .dwpsn  file "/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manage.c",line 167,column 1,is_
    4069              $C$DW$230       .dwtag  DW_TAG_TI_branch
    4070                      .dwattr $C$DW$230, DW_AT_low_pc(0x00)
    4071                      .dwattr $C$DW$230, DW_AT_TI_return
    4072 000fd6 4804          RET
    4073                                                      ; return occurs
    4074                      .dwattr $C$DW$226, DW_AT_TI_end_file("/data/projects/crt/ittrium/sample/c55x/../../kernel/tsk_manage.
    4075                      .dwattr $C$DW$226, DW_AT_TI_end_line(0xa7)
    4076                      .dwattr $C$DW$226, DW_AT_TI_end_column(0x01)
    4077                      .dwendtag $C$DW$226
    4078              
    4079              ;******************************************************************************
    4080              ;* UNDEFINED EXTERNAL REFERENCES                                              *
    4081              ;******************************************************************************
    4082                      .global __install_handler
    4083                      .global _init_tsk
    4084                      .global _start_hw_timer
    4085                      .global _terminate_hw_timer
    4086                      .global _make_task_context
    4087                      .global _timer_hw_enter
    4088                      .global _timer_hw_exit
    4089                      .global _init_tsk_stack
    4090                      .global _init_tsk_sys_stack
    4091                      .global __system_ticks
    4092              
    4093              ;*******************************************************************************
    4094              ;* TYPE INFORMATION                                                            *
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   93

    4095              ;*******************************************************************************
    4096              
    4097              $C$DW$T$20      .dwtag  DW_TAG_structure_type
    4098                      .dwattr $C$DW$T$20, DW_AT_byte_size(0x06)
    4099              $C$DW$231       .dwtag  DW_TAG_member
    4100                      .dwattr $C$DW$231, DW_AT_type(*$C$DW$T$19)
    4101                      .dwattr $C$DW$231, DW_AT_name("sp")
    4102                      .dwattr $C$DW$231, DW_AT_TI_symbol_name("_sp")
    4103                      .dwattr $C$DW$231, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4104                      .dwattr $C$DW$231, DW_AT_accessibility(DW_ACCESS_public)
    4105              $C$DW$232       .dwtag  DW_TAG_member
    4106                      .dwattr $C$DW$232, DW_AT_type(*$C$DW$T$19)
    4107                      .dwattr $C$DW$232, DW_AT_name("ssp")
    4108                      .dwattr $C$DW$232, DW_AT_TI_symbol_name("_ssp")
    4109                      .dwattr $C$DW$232, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4110                      .dwattr $C$DW$232, DW_AT_accessibility(DW_ACCESS_public)
    4111              $C$DW$233       .dwtag  DW_TAG_member
    4112                      .dwattr $C$DW$233, DW_AT_type(*$C$DW$T$19)
    4113                      .dwattr $C$DW$233, DW_AT_name("reta")
    4114                      .dwattr $C$DW$233, DW_AT_TI_symbol_name("_reta")
    4115                      .dwattr $C$DW$233, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4116                      .dwattr $C$DW$233, DW_AT_accessibility(DW_ACCESS_public)
    4117                      .dwendtag $C$DW$T$20
    4118              
    4119              $C$DW$T$61      .dwtag  DW_TAG_typedef, DW_AT_name("CTXB")
    4120                      .dwattr $C$DW$T$61, DW_AT_type(*$C$DW$T$20)
    4121                      .dwattr $C$DW$T$61, DW_AT_language(DW_LANG_C)
    4122              
    4123              $C$DW$T$25      .dwtag  DW_TAG_structure_type
    4124                      .dwattr $C$DW$T$25, DW_AT_byte_size(0x04)
    4125              $C$DW$234       .dwtag  DW_TAG_member
    4126                      .dwattr $C$DW$234, DW_AT_type(*$C$DW$T$22)
    4127                      .dwattr $C$DW$234, DW_AT_name("waiptn")
    4128                      .dwattr $C$DW$234, DW_AT_TI_symbol_name("_waiptn")
    4129                      .dwattr $C$DW$234, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4130                      .dwattr $C$DW$234, DW_AT_accessibility(DW_ACCESS_public)
    4131              $C$DW$235       .dwtag  DW_TAG_member
    4132                      .dwattr $C$DW$235, DW_AT_type(*$C$DW$T$23)
    4133                      .dwattr $C$DW$235, DW_AT_name("wfmode")
    4134                      .dwattr $C$DW$235, DW_AT_TI_symbol_name("_wfmode")
    4135                      .dwattr $C$DW$235, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
    4136                      .dwattr $C$DW$235, DW_AT_accessibility(DW_ACCESS_public)
    4137              $C$DW$236       .dwtag  DW_TAG_member
    4138                      .dwattr $C$DW$236, DW_AT_type(*$C$DW$T$24)
    4139                      .dwattr $C$DW$236, DW_AT_name("p_flgptn")
    4140                      .dwattr $C$DW$236, DW_AT_TI_symbol_name("_p_flgptn")
    4141                      .dwattr $C$DW$236, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4142                      .dwattr $C$DW$236, DW_AT_accessibility(DW_ACCESS_public)
    4143                      .dwendtag $C$DW$T$25
    4144              
    4145              $C$DW$T$32      .dwtag  DW_TAG_typedef, DW_AT_name("WINFO_FLG")
    4146                      .dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$25)
    4147                      .dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
    4148              
    4149              $C$DW$T$29      .dwtag  DW_TAG_structure_type
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   94

    4150                      .dwattr $C$DW$T$29, DW_AT_byte_size(0x02)
    4151              $C$DW$237       .dwtag  DW_TAG_member
    4152                      .dwattr $C$DW$237, DW_AT_type(*$C$DW$T$28)
    4153                      .dwattr $C$DW$237, DW_AT_name("ppk_msg")
    4154                      .dwattr $C$DW$237, DW_AT_TI_symbol_name("_ppk_msg")
    4155                      .dwattr $C$DW$237, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4156                      .dwattr $C$DW$237, DW_AT_accessibility(DW_ACCESS_public)
    4157                      .dwendtag $C$DW$T$29
    4158              
    4159              $C$DW$T$33      .dwtag  DW_TAG_typedef, DW_AT_name("WINFO_MBX")
    4160                      .dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$29)
    4161                      .dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
    4162              
    4163              $C$DW$T$31      .dwtag  DW_TAG_structure_type
    4164                      .dwattr $C$DW$T$31, DW_AT_byte_size(0x04)
    4165              $C$DW$238       .dwtag  DW_TAG_member
    4166                      .dwattr $C$DW$238, DW_AT_type(*$C$DW$T$30)
    4167                      .dwattr $C$DW$238, DW_AT_name("st_low")
    4168                      .dwattr $C$DW$238, DW_AT_TI_symbol_name("_st_low")
    4169                      .dwattr $C$DW$238, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4170                      .dwattr $C$DW$238, DW_AT_accessibility(DW_ACCESS_public)
    4171              $C$DW$239       .dwtag  DW_TAG_member
    4172                      .dwattr $C$DW$239, DW_AT_type(*$C$DW$T$30)
    4173                      .dwattr $C$DW$239, DW_AT_name("st_high")
    4174                      .dwattr $C$DW$239, DW_AT_TI_symbol_name("_st_high")
    4175                      .dwattr $C$DW$239, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4176                      .dwattr $C$DW$239, DW_AT_accessibility(DW_ACCESS_public)
    4177                      .dwendtag $C$DW$T$31
    4178              
    4179              $C$DW$T$74      .dwtag  DW_TAG_typedef, DW_AT_name("SYSTIM")
    4180                      .dwattr $C$DW$T$74, DW_AT_type(*$C$DW$T$31)
    4181                      .dwattr $C$DW$T$74, DW_AT_language(DW_LANG_C)
    4182              $C$DW$T$75      .dwtag  DW_TAG_pointer_type
    4183                      .dwattr $C$DW$T$75, DW_AT_type(*$C$DW$T$74)
    4184                      .dwattr $C$DW$T$75, DW_AT_address_class(0x17)
    4185              
    4186              $C$DW$T$34      .dwtag  DW_TAG_union_type
    4187                      .dwattr $C$DW$T$34, DW_AT_byte_size(0x04)
    4188              $C$DW$240       .dwtag  DW_TAG_member
    4189                      .dwattr $C$DW$240, DW_AT_type(*$C$DW$T$32)
    4190                      .dwattr $C$DW$240, DW_AT_name("flg")
    4191                      .dwattr $C$DW$240, DW_AT_TI_symbol_name("_flg")
    4192                      .dwattr $C$DW$240, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4193                      .dwattr $C$DW$240, DW_AT_accessibility(DW_ACCESS_public)
    4194              $C$DW$241       .dwtag  DW_TAG_member
    4195                      .dwattr $C$DW$241, DW_AT_type(*$C$DW$T$33)
    4196                      .dwattr $C$DW$241, DW_AT_name("mbx")
    4197                      .dwattr $C$DW$241, DW_AT_TI_symbol_name("_mbx")
    4198                      .dwattr $C$DW$241, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4199                      .dwattr $C$DW$241, DW_AT_accessibility(DW_ACCESS_public)
    4200                      .dwendtag $C$DW$T$34
    4201              
    4202              $C$DW$T$64      .dwtag  DW_TAG_typedef, DW_AT_name("WINFO")
    4203                      .dwattr $C$DW$T$64, DW_AT_type(*$C$DW$T$34)
    4204                      .dwattr $C$DW$T$64, DW_AT_language(DW_LANG_C)
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   95

    4205              $C$DW$T$3       .dwtag  DW_TAG_pointer_type
    4206                      .dwattr $C$DW$T$3, DW_AT_address_class(0x17)
    4207              $C$DW$T$19      .dwtag  DW_TAG_typedef, DW_AT_name("VP")
    4208                      .dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$3)
    4209                      .dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
    4210              
    4211              $C$DW$T$58      .dwtag  DW_TAG_array_type
    4212                      .dwattr $C$DW$T$58, DW_AT_type(*$C$DW$T$19)
    4213                      .dwattr $C$DW$T$58, DW_AT_language(DW_LANG_C)
    4214                      .dwattr $C$DW$T$58, DW_AT_byte_size(0x02)
    4215              $C$DW$242       .dwtag  DW_TAG_subrange_type
    4216                      .dwattr $C$DW$242, DW_AT_upper_bound(0x00)
    4217                      .dwendtag $C$DW$T$58
    4218              
    4219              
    4220              $C$DW$T$53      .dwtag  DW_TAG_subroutine_type
    4221                      .dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
    4222              $C$DW$T$54      .dwtag  DW_TAG_pointer_type
    4223                      .dwattr $C$DW$T$54, DW_AT_type(*$C$DW$T$53)
    4224                      .dwattr $C$DW$T$54, DW_AT_address_class(0x20)
    4225              $C$DW$T$55      .dwtag  DW_TAG_typedef, DW_AT_name("FP")
    4226                      .dwattr $C$DW$T$55, DW_AT_type(*$C$DW$T$54)
    4227                      .dwattr $C$DW$T$55, DW_AT_language(DW_LANG_C)
    4228              
    4229              $C$DW$T$70      .dwtag  DW_TAG_subroutine_type
    4230                      .dwattr $C$DW$T$70, DW_AT_language(DW_LANG_C)
    4231              $C$DW$243       .dwtag  DW_TAG_formal_parameter
    4232                      .dwattr $C$DW$243, DW_AT_type(*$C$DW$T$19)
    4233                      .dwendtag $C$DW$T$70
    4234              
    4235              $C$DW$T$71      .dwtag  DW_TAG_pointer_type
    4236                      .dwattr $C$DW$T$71, DW_AT_type(*$C$DW$T$70)
    4237                      .dwattr $C$DW$T$71, DW_AT_address_class(0x20)
    4238              $C$DW$T$72      .dwtag  DW_TAG_typedef, DW_AT_name("FP_VP")
    4239                      .dwattr $C$DW$T$72, DW_AT_type(*$C$DW$T$71)
    4240                      .dwattr $C$DW$T$72, DW_AT_language(DW_LANG_C)
    4241              $C$DW$T$4       .dwtag  DW_TAG_base_type
    4242                      .dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
    4243                      .dwattr $C$DW$T$4, DW_AT_name("bool")
    4244                      .dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
    4245              $C$DW$T$5       .dwtag  DW_TAG_base_type
    4246                      .dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
    4247                      .dwattr $C$DW$T$5, DW_AT_name("signed char")
    4248                      .dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
    4249              $C$DW$T$6       .dwtag  DW_TAG_base_type
    4250                      .dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
    4251                      .dwattr $C$DW$T$6, DW_AT_name("unsigned char")
    4252                      .dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
    4253              $C$DW$T$7       .dwtag  DW_TAG_base_type
    4254                      .dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
    4255                      .dwattr $C$DW$T$7, DW_AT_name("wchar_t")
    4256                      .dwattr $C$DW$T$7, DW_AT_byte_size(0x01)
    4257              $C$DW$T$8       .dwtag  DW_TAG_base_type
    4258                      .dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
    4259                      .dwattr $C$DW$T$8, DW_AT_name("short")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   96

    4260                      .dwattr $C$DW$T$8, DW_AT_byte_size(0x01)
    4261              $C$DW$T$65      .dwtag  DW_TAG_typedef, DW_AT_name("ER")
    4262                      .dwattr $C$DW$T$65, DW_AT_type(*$C$DW$T$8)
    4263                      .dwattr $C$DW$T$65, DW_AT_language(DW_LANG_C)
    4264              $C$DW$T$66      .dwtag  DW_TAG_pointer_type
    4265                      .dwattr $C$DW$T$66, DW_AT_type(*$C$DW$T$65)
    4266                      .dwattr $C$DW$T$66, DW_AT_address_class(0x17)
    4267              $C$DW$T$119     .dwtag  DW_TAG_typedef, DW_AT_name("H")
    4268                      .dwattr $C$DW$T$119, DW_AT_type(*$C$DW$T$8)
    4269                      .dwattr $C$DW$T$119, DW_AT_language(DW_LANG_C)
    4270              $C$DW$T$120     .dwtag  DW_TAG_typedef, DW_AT_name("TMO")
    4271                      .dwattr $C$DW$T$120, DW_AT_type(*$C$DW$T$119)
    4272                      .dwattr $C$DW$T$120, DW_AT_language(DW_LANG_C)
    4273              $C$DW$T$38      .dwtag  DW_TAG_typedef, DW_AT_name("ID")
    4274                      .dwattr $C$DW$T$38, DW_AT_type(*$C$DW$T$8)
    4275                      .dwattr $C$DW$T$38, DW_AT_language(DW_LANG_C)
    4276              $C$DW$T$44      .dwtag  DW_TAG_typedef, DW_AT_name("PRI")
    4277                      .dwattr $C$DW$T$44, DW_AT_type(*$C$DW$T$8)
    4278                      .dwattr $C$DW$T$44, DW_AT_language(DW_LANG_C)
    4279              
    4280              $C$DW$T$149     .dwtag  DW_TAG_array_type
    4281                      .dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$8)
    4282                      .dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)
    4283              $C$DW$244       .dwtag  DW_TAG_subrange_type
    4284                      .dwendtag $C$DW$T$149
    4285              
    4286              $C$DW$T$9       .dwtag  DW_TAG_base_type
    4287                      .dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
    4288                      .dwattr $C$DW$T$9, DW_AT_name("unsigned short")
    4289                      .dwattr $C$DW$T$9, DW_AT_byte_size(0x01)
    4290              $C$DW$T$39      .dwtag  DW_TAG_typedef, DW_AT_name("ATR")
    4291                      .dwattr $C$DW$T$39, DW_AT_type(*$C$DW$T$9)
    4292                      .dwattr $C$DW$T$39, DW_AT_language(DW_LANG_C)
    4293              $C$DW$T$150     .dwtag  DW_TAG_typedef, DW_AT_name("BOOL")
    4294                      .dwattr $C$DW$T$150, DW_AT_type(*$C$DW$T$9)
    4295                      .dwattr $C$DW$T$150, DW_AT_language(DW_LANG_C)
    4296              $C$DW$T$23      .dwtag  DW_TAG_typedef, DW_AT_name("MODE")
    4297                      .dwattr $C$DW$T$23, DW_AT_type(*$C$DW$T$9)
    4298                      .dwattr $C$DW$T$23, DW_AT_language(DW_LANG_C)
    4299              $C$DW$T$56      .dwtag  DW_TAG_typedef, DW_AT_name("SIZE")
    4300                      .dwattr $C$DW$T$56, DW_AT_type(*$C$DW$T$9)
    4301                      .dwattr $C$DW$T$56, DW_AT_language(DW_LANG_C)
    4302              $C$DW$T$40      .dwtag  DW_TAG_typedef, DW_AT_name("STAT")
    4303                      .dwattr $C$DW$T$40, DW_AT_type(*$C$DW$T$9)
    4304                      .dwattr $C$DW$T$40, DW_AT_language(DW_LANG_C)
    4305              $C$DW$T$86      .dwtag  DW_TAG_typedef, DW_AT_name("UH")
    4306                      .dwattr $C$DW$T$86, DW_AT_type(*$C$DW$T$9)
    4307                      .dwattr $C$DW$T$86, DW_AT_language(DW_LANG_C)
    4308              $C$DW$T$87      .dwtag  DW_TAG_typedef, DW_AT_name("INHNO")
    4309                      .dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$86)
    4310                      .dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
    4311              $C$DW$T$10      .dwtag  DW_TAG_base_type
    4312                      .dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
    4313                      .dwattr $C$DW$T$10, DW_AT_name("int")
    4314                      .dwattr $C$DW$T$10, DW_AT_byte_size(0x01)
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   97

    4315              $C$DW$T$62      .dwtag  DW_TAG_typedef, DW_AT_name("INT")
    4316                      .dwattr $C$DW$T$62, DW_AT_type(*$C$DW$T$10)
    4317                      .dwattr $C$DW$T$62, DW_AT_language(DW_LANG_C)
    4318              $C$DW$T$51      .dwtag  DW_TAG_pointer_type
    4319                      .dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$10)
    4320                      .dwattr $C$DW$T$51, DW_AT_address_class(0x17)
    4321              $C$DW$T$52      .dwtag  DW_TAG_typedef, DW_AT_name("VP_INT")
    4322                      .dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$51)
    4323                      .dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
    4324              $C$DW$T$11      .dwtag  DW_TAG_base_type
    4325                      .dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
    4326                      .dwattr $C$DW$T$11, DW_AT_name("unsigned int")
    4327                      .dwattr $C$DW$T$11, DW_AT_byte_size(0x01)
    4328              $C$DW$T$21      .dwtag  DW_TAG_typedef, DW_AT_name("UINT")
    4329                      .dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$11)
    4330                      .dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)
    4331              $C$DW$T$22      .dwtag  DW_TAG_typedef, DW_AT_name("FLGPTN")
    4332                      .dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$21)
    4333                      .dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
    4334              $C$DW$T$24      .dwtag  DW_TAG_pointer_type
    4335                      .dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$22)
    4336                      .dwattr $C$DW$T$24, DW_AT_address_class(0x17)
    4337              $C$DW$T$69      .dwtag  DW_TAG_typedef, DW_AT_name("RELTIM")
    4338                      .dwattr $C$DW$T$69, DW_AT_type(*$C$DW$T$21)
    4339                      .dwattr $C$DW$T$69, DW_AT_language(DW_LANG_C)
    4340              
    4341              $C$DW$T$48      .dwtag  DW_TAG_array_type
    4342                      .dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$21)
    4343                      .dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
    4344                      .dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
    4345              $C$DW$245       .dwtag  DW_TAG_subrange_type
    4346                      .dwattr $C$DW$245, DW_AT_upper_bound(0x00)
    4347                      .dwendtag $C$DW$T$48
    4348              
    4349              $C$DW$T$12      .dwtag  DW_TAG_base_type
    4350                      .dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
    4351                      .dwattr $C$DW$T$12, DW_AT_name("long")
    4352                      .dwattr $C$DW$T$12, DW_AT_byte_size(0x02)
    4353              $C$DW$T$13      .dwtag  DW_TAG_base_type
    4354                      .dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
    4355                      .dwattr $C$DW$T$13, DW_AT_name("unsigned long")
    4356                      .dwattr $C$DW$T$13, DW_AT_byte_size(0x02)
    4357              $C$DW$T$30      .dwtag  DW_TAG_typedef, DW_AT_name("UW")
    4358                      .dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$13)
    4359                      .dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
    4360              $C$DW$T$14      .dwtag  DW_TAG_base_type
    4361                      .dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
    4362                      .dwattr $C$DW$T$14, DW_AT_name("long long")
    4363                      .dwattr $C$DW$T$14, DW_AT_byte_size(0x04)
    4364                      .dwattr $C$DW$T$14, DW_AT_bit_size(0x28)
    4365                      .dwattr $C$DW$T$14, DW_AT_bit_offset(0x18)
    4366              $C$DW$T$15      .dwtag  DW_TAG_base_type
    4367                      .dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
    4368                      .dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
    4369                      .dwattr $C$DW$T$15, DW_AT_byte_size(0x04)
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   98

    4370                      .dwattr $C$DW$T$15, DW_AT_bit_size(0x28)
    4371                      .dwattr $C$DW$T$15, DW_AT_bit_offset(0x18)
    4372              $C$DW$T$16      .dwtag  DW_TAG_base_type
    4373                      .dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
    4374                      .dwattr $C$DW$T$16, DW_AT_name("float")
    4375                      .dwattr $C$DW$T$16, DW_AT_byte_size(0x02)
    4376              $C$DW$T$17      .dwtag  DW_TAG_base_type
    4377                      .dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
    4378                      .dwattr $C$DW$T$17, DW_AT_name("double")
    4379                      .dwattr $C$DW$T$17, DW_AT_byte_size(0x02)
    4380              $C$DW$T$18      .dwtag  DW_TAG_base_type
    4381                      .dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
    4382                      .dwattr $C$DW$T$18, DW_AT_name("long double")
    4383                      .dwattr $C$DW$T$18, DW_AT_byte_size(0x02)
    4384              $C$DW$T$92      .dwtag  DW_TAG_base_type
    4385                      .dwattr $C$DW$T$92, DW_AT_encoding(DW_ATE_signed_char)
    4386                      .dwattr $C$DW$T$92, DW_AT_name("signed char")
    4387                      .dwattr $C$DW$T$92, DW_AT_byte_size(0x01)
    4388              $C$DW$T$184     .dwtag  DW_TAG_typedef, DW_AT_name("VB")
    4389                      .dwattr $C$DW$T$184, DW_AT_type(*$C$DW$T$92)
    4390                      .dwattr $C$DW$T$184, DW_AT_language(DW_LANG_C)
    4391              $C$DW$T$93      .dwtag  DW_TAG_pointer_type
    4392                      .dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$92)
    4393                      .dwattr $C$DW$T$93, DW_AT_address_class(0x17)
    4394              $C$DW$T$94      .dwtag  DW_TAG_pointer_type
    4395                      .dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
    4396                      .dwattr $C$DW$T$94, DW_AT_address_class(0x17)
    4397              
    4398              $C$DW$T$36      .dwtag  DW_TAG_structure_type
    4399                      .dwattr $C$DW$T$36, DW_AT_name("eventflag_control_block")
    4400                      .dwattr $C$DW$T$36, DW_AT_byte_size(0x0c)
    4401              $C$DW$246       .dwtag  DW_TAG_member
    4402                      .dwattr $C$DW$246, DW_AT_type(*$C$DW$T$35)
    4403                      .dwattr $C$DW$246, DW_AT_name("gcb")
    4404                      .dwattr $C$DW$246, DW_AT_TI_symbol_name("_gcb")
    4405                      .dwattr $C$DW$246, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4406                      .dwattr $C$DW$246, DW_AT_accessibility(DW_ACCESS_public)
    4407              $C$DW$247       .dwtag  DW_TAG_member
    4408                      .dwattr $C$DW$247, DW_AT_type(*$C$DW$T$22)
    4409                      .dwattr $C$DW$247, DW_AT_name("flgptn")
    4410                      .dwattr $C$DW$247, DW_AT_TI_symbol_name("_flgptn")
    4411                      .dwattr $C$DW$247, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
    4412                      .dwattr $C$DW$247, DW_AT_accessibility(DW_ACCESS_public)
    4413                      .dwendtag $C$DW$T$36
    4414              
    4415              $C$DW$T$107     .dwtag  DW_TAG_typedef, DW_AT_name("FLGCB")
    4416                      .dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$36)
    4417                      .dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
    4418              
    4419              $C$DW$T$185     .dwtag  DW_TAG_array_type
    4420                      .dwattr $C$DW$T$185, DW_AT_type(*$C$DW$T$107)
    4421                      .dwattr $C$DW$T$185, DW_AT_language(DW_LANG_C)
    4422                      .dwattr $C$DW$T$185, DW_AT_byte_size(0x0c)
    4423              $C$DW$248       .dwtag  DW_TAG_subrange_type
    4424                      .dwattr $C$DW$248, DW_AT_upper_bound(0x00)
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE   99

    4425                      .dwendtag $C$DW$T$185
    4426              
    4427              
    4428              $C$DW$T$41      .dwtag  DW_TAG_structure_type
    4429                      .dwattr $C$DW$T$41, DW_AT_name("generic_control_block")
    4430                      .dwattr $C$DW$T$41, DW_AT_byte_size(0x0a)
    4431              $C$DW$249       .dwtag  DW_TAG_member
    4432                      .dwattr $C$DW$249, DW_AT_type(*$C$DW$T$37)
    4433                      .dwattr $C$DW$249, DW_AT_name("wait_queue")
    4434                      .dwattr $C$DW$249, DW_AT_TI_symbol_name("_wait_queue")
    4435                      .dwattr $C$DW$249, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4436                      .dwattr $C$DW$249, DW_AT_accessibility(DW_ACCESS_public)
    4437              $C$DW$250       .dwtag  DW_TAG_member
    4438                      .dwattr $C$DW$250, DW_AT_type(*$C$DW$T$38)
    4439                      .dwattr $C$DW$250, DW_AT_name("objid")
    4440                      .dwattr $C$DW$250, DW_AT_TI_symbol_name("_objid")
    4441                      .dwattr $C$DW$250, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4442                      .dwattr $C$DW$250, DW_AT_accessibility(DW_ACCESS_public)
    4443              $C$DW$251       .dwtag  DW_TAG_member
    4444                      .dwattr $C$DW$251, DW_AT_type(*$C$DW$T$19)
    4445                      .dwattr $C$DW$251, DW_AT_name("exinf")
    4446                      .dwattr $C$DW$251, DW_AT_TI_symbol_name("_exinf")
    4447                      .dwattr $C$DW$251, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
    4448                      .dwattr $C$DW$251, DW_AT_accessibility(DW_ACCESS_public)
    4449              $C$DW$252       .dwtag  DW_TAG_member
    4450                      .dwattr $C$DW$252, DW_AT_type(*$C$DW$T$39)
    4451                      .dwattr $C$DW$252, DW_AT_name("objatr")
    4452                      .dwattr $C$DW$252, DW_AT_TI_symbol_name("_objatr")
    4453                      .dwattr $C$DW$252, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
    4454                      .dwattr $C$DW$252, DW_AT_accessibility(DW_ACCESS_public)
    4455              $C$DW$253       .dwtag  DW_TAG_member
    4456                      .dwattr $C$DW$253, DW_AT_type(*$C$DW$T$40)
    4457                      .dwattr $C$DW$253, DW_AT_name("state")
    4458                      .dwattr $C$DW$253, DW_AT_TI_symbol_name("_state")
    4459                      .dwattr $C$DW$253, DW_AT_data_member_location[DW_OP_plus_uconst 0x9]
    4460                      .dwattr $C$DW$253, DW_AT_accessibility(DW_ACCESS_public)
    4461                      .dwendtag $C$DW$T$41
    4462              
    4463              $C$DW$T$35      .dwtag  DW_TAG_typedef, DW_AT_name("GCB")
    4464                      .dwattr $C$DW$T$35, DW_AT_type(*$C$DW$T$41)
    4465                      .dwattr $C$DW$T$35, DW_AT_language(DW_LANG_C)
    4466              $C$DW$T$63      .dwtag  DW_TAG_pointer_type
    4467                      .dwattr $C$DW$T$63, DW_AT_type(*$C$DW$T$35)
    4468                      .dwattr $C$DW$T$63, DW_AT_address_class(0x17)
    4469              
    4470              $C$DW$T$43      .dwtag  DW_TAG_structure_type
    4471                      .dwattr $C$DW$T$43, DW_AT_name("queue")
    4472                      .dwattr $C$DW$T$43, DW_AT_byte_size(0x04)
    4473              $C$DW$254       .dwtag  DW_TAG_member
    4474                      .dwattr $C$DW$254, DW_AT_type(*$C$DW$T$42)
    4475                      .dwattr $C$DW$254, DW_AT_name("next")
    4476                      .dwattr $C$DW$254, DW_AT_TI_symbol_name("_next")
    4477                      .dwattr $C$DW$254, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4478                      .dwattr $C$DW$254, DW_AT_accessibility(DW_ACCESS_public)
    4479              $C$DW$255       .dwtag  DW_TAG_member
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE  100

    4480                      .dwattr $C$DW$255, DW_AT_type(*$C$DW$T$42)
    4481                      .dwattr $C$DW$255, DW_AT_name("prev")
    4482                      .dwattr $C$DW$255, DW_AT_TI_symbol_name("_prev")
    4483                      .dwattr $C$DW$255, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4484                      .dwattr $C$DW$255, DW_AT_accessibility(DW_ACCESS_public)
    4485                      .dwendtag $C$DW$T$43
    4486              
    4487              $C$DW$T$37      .dwtag  DW_TAG_typedef, DW_AT_name("QUEUE")
    4488                      .dwattr $C$DW$T$37, DW_AT_type(*$C$DW$T$43)
    4489                      .dwattr $C$DW$T$37, DW_AT_language(DW_LANG_C)
    4490              
    4491              $C$DW$T$45      .dwtag  DW_TAG_array_type
    4492                      .dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$37)
    4493                      .dwattr $C$DW$T$45, DW_AT_language(DW_LANG_C)
    4494                      .dwattr $C$DW$T$45, DW_AT_byte_size(0x2c)
    4495              $C$DW$256       .dwtag  DW_TAG_subrange_type
    4496                      .dwattr $C$DW$256, DW_AT_upper_bound(0x0a)
    4497                      .dwendtag $C$DW$T$45
    4498              
    4499              $C$DW$T$96      .dwtag  DW_TAG_pointer_type
    4500                      .dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$37)
    4501                      .dwattr $C$DW$T$96, DW_AT_address_class(0x17)
    4502              $C$DW$T$42      .dwtag  DW_TAG_pointer_type
    4503                      .dwattr $C$DW$T$42, DW_AT_type(*$C$DW$T$43)
    4504                      .dwattr $C$DW$T$42, DW_AT_address_class(0x17)
    4505              
    4506              $C$DW$T$49      .dwtag  DW_TAG_structure_type
    4507                      .dwattr $C$DW$T$49, DW_AT_name("ready_queue")
    4508                      .dwattr $C$DW$T$49, DW_AT_byte_size(0x32)
    4509              $C$DW$257       .dwtag  DW_TAG_member
    4510                      .dwattr $C$DW$257, DW_AT_type(*$C$DW$T$44)
    4511                      .dwattr $C$DW$257, DW_AT_name("top_priority")
    4512                      .dwattr $C$DW$257, DW_AT_TI_symbol_name("_top_priority")
    4513                      .dwattr $C$DW$257, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4514                      .dwattr $C$DW$257, DW_AT_accessibility(DW_ACCESS_public)
    4515              $C$DW$258       .dwtag  DW_TAG_member
    4516                      .dwattr $C$DW$258, DW_AT_type(*$C$DW$T$45)
    4517                      .dwattr $C$DW$258, DW_AT_name("tskque")
    4518                      .dwattr $C$DW$258, DW_AT_TI_symbol_name("_tskque")
    4519                      .dwattr $C$DW$258, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4520                      .dwattr $C$DW$258, DW_AT_accessibility(DW_ACCESS_public)
    4521              $C$DW$259       .dwtag  DW_TAG_member
    4522                      .dwattr $C$DW$259, DW_AT_type(*$C$DW$T$47)
    4523                      .dwattr $C$DW$259, DW_AT_name("null")
    4524                      .dwattr $C$DW$259, DW_AT_TI_symbol_name("_null")
    4525                      .dwattr $C$DW$259, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
    4526                      .dwattr $C$DW$259, DW_AT_accessibility(DW_ACCESS_public)
    4527              $C$DW$260       .dwtag  DW_TAG_member
    4528                      .dwattr $C$DW$260, DW_AT_type(*$C$DW$T$48)
    4529                      .dwattr $C$DW$260, DW_AT_name("bitmap")
    4530                      .dwattr $C$DW$260, DW_AT_TI_symbol_name("_bitmap")
    4531                      .dwattr $C$DW$260, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
    4532                      .dwattr $C$DW$260, DW_AT_accessibility(DW_ACCESS_public)
    4533                      .dwendtag $C$DW$T$49
    4534              
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE  101

    4535              $C$DW$T$110     .dwtag  DW_TAG_typedef, DW_AT_name("RDYQUE")
    4536                      .dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$49)
    4537                      .dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)
    4538              
    4539              $C$DW$T$50      .dwtag  DW_TAG_structure_type
    4540                      .dwattr $C$DW$T$50, DW_AT_name("t_cflg")
    4541                      .dwattr $C$DW$T$50, DW_AT_byte_size(0x02)
    4542              $C$DW$261       .dwtag  DW_TAG_member
    4543                      .dwattr $C$DW$261, DW_AT_type(*$C$DW$T$39)
    4544                      .dwattr $C$DW$261, DW_AT_name("flgatr")
    4545                      .dwattr $C$DW$261, DW_AT_TI_symbol_name("_flgatr")
    4546                      .dwattr $C$DW$261, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4547                      .dwattr $C$DW$261, DW_AT_accessibility(DW_ACCESS_public)
    4548              $C$DW$262       .dwtag  DW_TAG_member
    4549                      .dwattr $C$DW$262, DW_AT_type(*$C$DW$T$22)
    4550                      .dwattr $C$DW$262, DW_AT_name("iflgptn")
    4551                      .dwattr $C$DW$262, DW_AT_TI_symbol_name("_iflgptn")
    4552                      .dwattr $C$DW$262, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
    4553                      .dwattr $C$DW$262, DW_AT_accessibility(DW_ACCESS_public)
    4554                      .dwendtag $C$DW$T$50
    4555              
    4556              $C$DW$T$128     .dwtag  DW_TAG_typedef, DW_AT_name("T_CFLG")
    4557                      .dwattr $C$DW$T$128, DW_AT_type(*$C$DW$T$50)
    4558                      .dwattr $C$DW$T$128, DW_AT_language(DW_LANG_C)
    4559              $C$DW$T$129     .dwtag  DW_TAG_pointer_type
    4560                      .dwattr $C$DW$T$129, DW_AT_type(*$C$DW$T$128)
    4561                      .dwattr $C$DW$T$129, DW_AT_address_class(0x17)
    4562              
    4563              $C$DW$T$57      .dwtag  DW_TAG_structure_type
    4564                      .dwattr $C$DW$T$57, DW_AT_name("t_ctsk")
    4565                      .dwattr $C$DW$T$57, DW_AT_byte_size(0x0c)
    4566              $C$DW$263       .dwtag  DW_TAG_member
    4567                      .dwattr $C$DW$263, DW_AT_type(*$C$DW$T$39)
    4568                      .dwattr $C$DW$263, DW_AT_name("tskatr")
    4569                      .dwattr $C$DW$263, DW_AT_TI_symbol_name("_tskatr")
    4570                      .dwattr $C$DW$263, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4571                      .dwattr $C$DW$263, DW_AT_accessibility(DW_ACCESS_public)
    4572              $C$DW$264       .dwtag  DW_TAG_member
    4573                      .dwattr $C$DW$264, DW_AT_type(*$C$DW$T$52)
    4574                      .dwattr $C$DW$264, DW_AT_name("exinf")
    4575                      .dwattr $C$DW$264, DW_AT_TI_symbol_name("_exinf")
    4576                      .dwattr $C$DW$264, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4577                      .dwattr $C$DW$264, DW_AT_accessibility(DW_ACCESS_public)
    4578              $C$DW$265       .dwtag  DW_TAG_member
    4579                      .dwattr $C$DW$265, DW_AT_type(*$C$DW$T$55)
    4580                      .dwattr $C$DW$265, DW_AT_name("task")
    4581                      .dwattr $C$DW$265, DW_AT_TI_symbol_name("_task")
    4582                      .dwattr $C$DW$265, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4583                      .dwattr $C$DW$265, DW_AT_accessibility(DW_ACCESS_public)
    4584              $C$DW$266       .dwtag  DW_TAG_member
    4585                      .dwattr $C$DW$266, DW_AT_type(*$C$DW$T$44)
    4586                      .dwattr $C$DW$266, DW_AT_name("itskpri")
    4587                      .dwattr $C$DW$266, DW_AT_TI_symbol_name("_itskpri")
    4588                      .dwattr $C$DW$266, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
    4589                      .dwattr $C$DW$266, DW_AT_accessibility(DW_ACCESS_public)
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE  102

    4590              $C$DW$267       .dwtag  DW_TAG_member
    4591                      .dwattr $C$DW$267, DW_AT_type(*$C$DW$T$56)
    4592                      .dwattr $C$DW$267, DW_AT_name("stksz")
    4593                      .dwattr $C$DW$267, DW_AT_TI_symbol_name("_stksz")
    4594                      .dwattr $C$DW$267, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
    4595                      .dwattr $C$DW$267, DW_AT_accessibility(DW_ACCESS_public)
    4596              $C$DW$268       .dwtag  DW_TAG_member
    4597                      .dwattr $C$DW$268, DW_AT_type(*$C$DW$T$19)
    4598                      .dwattr $C$DW$268, DW_AT_name("stk")
    4599                      .dwattr $C$DW$268, DW_AT_TI_symbol_name("_stk")
    4600                      .dwattr $C$DW$268, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
    4601                      .dwattr $C$DW$268, DW_AT_accessibility(DW_ACCESS_public)
    4602              $C$DW$269       .dwtag  DW_TAG_member
    4603                      .dwattr $C$DW$269, DW_AT_type(*$C$DW$T$19)
    4604                      .dwattr $C$DW$269, DW_AT_name("sstk")
    4605                      .dwattr $C$DW$269, DW_AT_TI_symbol_name("_sstk")
    4606                      .dwattr $C$DW$269, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
    4607                      .dwattr $C$DW$269, DW_AT_accessibility(DW_ACCESS_public)
    4608                      .dwendtag $C$DW$T$57
    4609              
    4610              $C$DW$T$140     .dwtag  DW_TAG_typedef, DW_AT_name("T_CTSK")
    4611                      .dwattr $C$DW$T$140, DW_AT_type(*$C$DW$T$57)
    4612                      .dwattr $C$DW$T$140, DW_AT_language(DW_LANG_C)
    4613              $C$DW$T$141     .dwtag  DW_TAG_pointer_type
    4614                      .dwattr $C$DW$T$141, DW_AT_type(*$C$DW$T$140)
    4615                      .dwattr $C$DW$T$141, DW_AT_address_class(0x17)
    4616              
    4617              $C$DW$T$59      .dwtag  DW_TAG_structure_type
    4618                      .dwattr $C$DW$T$59, DW_AT_name("t_msg")
    4619                      .dwattr $C$DW$T$59, DW_AT_byte_size(0x02)
    4620              $C$DW$270       .dwtag  DW_TAG_member
    4621                      .dwattr $C$DW$270, DW_AT_type(*$C$DW$T$58)
    4622                      .dwattr $C$DW$270, DW_AT_name("msgque")
    4623                      .dwattr $C$DW$270, DW_AT_TI_symbol_name("_msgque")
    4624                      .dwattr $C$DW$270, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4625                      .dwattr $C$DW$270, DW_AT_accessibility(DW_ACCESS_public)
    4626                      .dwendtag $C$DW$T$59
    4627              
    4628              $C$DW$T$26      .dwtag  DW_TAG_typedef, DW_AT_name("T_MSG")
    4629                      .dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$59)
    4630                      .dwattr $C$DW$T$26, DW_AT_language(DW_LANG_C)
    4631              $C$DW$T$27      .dwtag  DW_TAG_pointer_type
    4632                      .dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$26)
    4633                      .dwattr $C$DW$T$27, DW_AT_address_class(0x17)
    4634              $C$DW$T$28      .dwtag  DW_TAG_pointer_type
    4635                      .dwattr $C$DW$T$28, DW_AT_type(*$C$DW$T$27)
    4636                      .dwattr $C$DW$T$28, DW_AT_address_class(0x17)
    4637              
    4638              $C$DW$T$60      .dwtag  DW_TAG_structure_type
    4639                      .dwattr $C$DW$T$60, DW_AT_name("t_rflg")
    4640                      .dwattr $C$DW$T$60, DW_AT_byte_size(0x02)
    4641              $C$DW$271       .dwtag  DW_TAG_member
    4642                      .dwattr $C$DW$271, DW_AT_type(*$C$DW$T$38)
    4643                      .dwattr $C$DW$271, DW_AT_name("wtskid")
    4644                      .dwattr $C$DW$271, DW_AT_TI_symbol_name("_wtskid")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE  103

    4645                      .dwattr $C$DW$271, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4646                      .dwattr $C$DW$271, DW_AT_accessibility(DW_ACCESS_public)
    4647              $C$DW$272       .dwtag  DW_TAG_member
    4648                      .dwattr $C$DW$272, DW_AT_type(*$C$DW$T$22)
    4649                      .dwattr $C$DW$272, DW_AT_name("flgptn")
    4650                      .dwattr $C$DW$272, DW_AT_TI_symbol_name("_flgptn")
    4651                      .dwattr $C$DW$272, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
    4652                      .dwattr $C$DW$272, DW_AT_accessibility(DW_ACCESS_public)
    4653                      .dwendtag $C$DW$T$60
    4654              
    4655              $C$DW$T$134     .dwtag  DW_TAG_typedef, DW_AT_name("T_RFLG")
    4656                      .dwattr $C$DW$T$134, DW_AT_type(*$C$DW$T$60)
    4657                      .dwattr $C$DW$T$134, DW_AT_language(DW_LANG_C)
    4658              $C$DW$T$135     .dwtag  DW_TAG_pointer_type
    4659                      .dwattr $C$DW$T$135, DW_AT_type(*$C$DW$T$134)
    4660                      .dwattr $C$DW$T$135, DW_AT_address_class(0x17)
    4661              
    4662              $C$DW$T$68      .dwtag  DW_TAG_structure_type
    4663                      .dwattr $C$DW$T$68, DW_AT_name("task_control_block")
    4664                      .dwattr $C$DW$T$68, DW_AT_byte_size(0x30)
    4665              $C$DW$273       .dwtag  DW_TAG_member
    4666                      .dwattr $C$DW$273, DW_AT_type(*$C$DW$T$37)
    4667                      .dwattr $C$DW$273, DW_AT_name("tskque")
    4668                      .dwattr $C$DW$273, DW_AT_TI_symbol_name("_tskque")
    4669                      .dwattr $C$DW$273, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4670                      .dwattr $C$DW$273, DW_AT_accessibility(DW_ACCESS_public)
    4671              $C$DW$274       .dwtag  DW_TAG_member
    4672                      .dwattr $C$DW$274, DW_AT_type(*$C$DW$T$61)
    4673                      .dwattr $C$DW$274, DW_AT_name("tskctxb")
    4674                      .dwattr $C$DW$274, DW_AT_TI_symbol_name("_tskctxb")
    4675                      .dwattr $C$DW$274, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4676                      .dwattr $C$DW$274, DW_AT_accessibility(DW_ACCESS_public)
    4677              $C$DW$275       .dwtag  DW_TAG_member
    4678                      .dwattr $C$DW$275, DW_AT_type(*$C$DW$T$55)
    4679                      .dwattr $C$DW$275, DW_AT_name("task")
    4680                      .dwattr $C$DW$275, DW_AT_TI_symbol_name("_task")
    4681                      .dwattr $C$DW$275, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
    4682                      .dwattr $C$DW$275, DW_AT_accessibility(DW_ACCESS_public)
    4683              $C$DW$276       .dwtag  DW_TAG_member
    4684                      .dwattr $C$DW$276, DW_AT_type(*$C$DW$T$19)
    4685                      .dwattr $C$DW$276, DW_AT_name("stk")
    4686                      .dwattr $C$DW$276, DW_AT_TI_symbol_name("_stk")
    4687                      .dwattr $C$DW$276, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
    4688                      .dwattr $C$DW$276, DW_AT_accessibility(DW_ACCESS_public)
    4689              $C$DW$277       .dwtag  DW_TAG_member
    4690                      .dwattr $C$DW$277, DW_AT_type(*$C$DW$T$19)
    4691                      .dwattr $C$DW$277, DW_AT_name("sstk")
    4692                      .dwattr $C$DW$277, DW_AT_TI_symbol_name("_sstk")
    4693                      .dwattr $C$DW$277, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
    4694                      .dwattr $C$DW$277, DW_AT_accessibility(DW_ACCESS_public)
    4695              $C$DW$278       .dwtag  DW_TAG_member
    4696                      .dwattr $C$DW$278, DW_AT_type(*$C$DW$T$56)
    4697                      .dwattr $C$DW$278, DW_AT_name("stksz")
    4698                      .dwattr $C$DW$278, DW_AT_TI_symbol_name("_stksz")
    4699                      .dwattr $C$DW$278, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE  104

    4700                      .dwattr $C$DW$278, DW_AT_accessibility(DW_ACCESS_public)
    4701              $C$DW$279       .dwtag  DW_TAG_member
    4702                      .dwattr $C$DW$279, DW_AT_type(*$C$DW$T$38)
    4703                      .dwattr $C$DW$279, DW_AT_name("tskid")
    4704                      .dwattr $C$DW$279, DW_AT_TI_symbol_name("_tskid")
    4705                      .dwattr $C$DW$279, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
    4706                      .dwattr $C$DW$279, DW_AT_accessibility(DW_ACCESS_public)
    4707              $C$DW$280       .dwtag  DW_TAG_member
    4708                      .dwattr $C$DW$280, DW_AT_type(*$C$DW$T$52)
    4709                      .dwattr $C$DW$280, DW_AT_name("exinf")
    4710                      .dwattr $C$DW$280, DW_AT_TI_symbol_name("_exinf")
    4711                      .dwattr $C$DW$280, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
    4712                      .dwattr $C$DW$280, DW_AT_accessibility(DW_ACCESS_public)
    4713              $C$DW$281       .dwtag  DW_TAG_member
    4714                      .dwattr $C$DW$281, DW_AT_type(*$C$DW$T$39)
    4715                      .dwattr $C$DW$281, DW_AT_name("tskatr")
    4716                      .dwattr $C$DW$281, DW_AT_TI_symbol_name("_tskatr")
    4717                      .dwattr $C$DW$281, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
    4718                      .dwattr $C$DW$281, DW_AT_accessibility(DW_ACCESS_public)
    4719              $C$DW$282       .dwtag  DW_TAG_member
    4720                      .dwattr $C$DW$282, DW_AT_type(*$C$DW$T$44)
    4721                      .dwattr $C$DW$282, DW_AT_name("itskpri")
    4722                      .dwattr $C$DW$282, DW_AT_TI_symbol_name("_itskpri")
    4723                      .dwattr $C$DW$282, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
    4724                      .dwattr $C$DW$282, DW_AT_accessibility(DW_ACCESS_public)
    4725              $C$DW$283       .dwtag  DW_TAG_member
    4726                      .dwattr $C$DW$283, DW_AT_type(*$C$DW$T$44)
    4727                      .dwattr $C$DW$283, DW_AT_name("tskpri")
    4728                      .dwattr $C$DW$283, DW_AT_TI_symbol_name("_tskpri")
    4729                      .dwattr $C$DW$283, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
    4730                      .dwattr $C$DW$283, DW_AT_accessibility(DW_ACCESS_public)
    4731              $C$DW$284       .dwtag  DW_TAG_member
    4732                      .dwattr $C$DW$284, DW_AT_type(*$C$DW$T$62)
    4733                      .dwattr $C$DW$284, DW_AT_name("actcnt")
    4734                      .dwattr $C$DW$284, DW_AT_TI_symbol_name("_actcnt")
    4735                      .dwattr $C$DW$284, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
    4736                      .dwattr $C$DW$284, DW_AT_accessibility(DW_ACCESS_public)
    4737              $C$DW$285       .dwtag  DW_TAG_member
    4738                      .dwattr $C$DW$285, DW_AT_type(*$C$DW$T$40)
    4739                      .dwattr $C$DW$285, DW_AT_name("state")
    4740                      .dwattr $C$DW$285, DW_AT_TI_symbol_name("_state")
    4741                      .dwattr $C$DW$285, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
    4742                      .dwattr $C$DW$285, DW_AT_accessibility(DW_ACCESS_public)
    4743              $C$DW$286       .dwtag  DW_TAG_member
    4744                      .dwattr $C$DW$286, DW_AT_type(*$C$DW$T$63)
    4745                      .dwattr $C$DW$286, DW_AT_name("wgcb")
    4746                      .dwattr $C$DW$286, DW_AT_TI_symbol_name("_wgcb")
    4747                      .dwattr $C$DW$286, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
    4748                      .dwattr $C$DW$286, DW_AT_accessibility(DW_ACCESS_public)
    4749              $C$DW$287       .dwtag  DW_TAG_member
    4750                      .dwattr $C$DW$287, DW_AT_type(*$C$DW$T$64)
    4751                      .dwattr $C$DW$287, DW_AT_name("winfo")
    4752                      .dwattr $C$DW$287, DW_AT_TI_symbol_name("_winfo")
    4753                      .dwattr $C$DW$287, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
    4754                      .dwattr $C$DW$287, DW_AT_accessibility(DW_ACCESS_public)
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE  105

    4755              $C$DW$288       .dwtag  DW_TAG_member
    4756                      .dwattr $C$DW$288, DW_AT_type(*$C$DW$T$65)
    4757                      .dwattr $C$DW$288, DW_AT_name("ercd")
    4758                      .dwattr $C$DW$288, DW_AT_TI_symbol_name("_ercd")
    4759                      .dwattr $C$DW$288, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
    4760                      .dwattr $C$DW$288, DW_AT_accessibility(DW_ACCESS_public)
    4761              $C$DW$289       .dwtag  DW_TAG_member
    4762                      .dwattr $C$DW$289, DW_AT_type(*$C$DW$T$62)
    4763                      .dwattr $C$DW$289, DW_AT_name("wupcnt")
    4764                      .dwattr $C$DW$289, DW_AT_TI_symbol_name("_wupcnt")
    4765                      .dwattr $C$DW$289, DW_AT_data_member_location[DW_OP_plus_uconst 0x21]
    4766                      .dwattr $C$DW$289, DW_AT_accessibility(DW_ACCESS_public)
    4767              $C$DW$290       .dwtag  DW_TAG_member
    4768                      .dwattr $C$DW$290, DW_AT_type(*$C$DW$T$62)
    4769                      .dwattr $C$DW$290, DW_AT_name("suscnt")
    4770                      .dwattr $C$DW$290, DW_AT_TI_symbol_name("_suscnt")
    4771                      .dwattr $C$DW$290, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
    4772                      .dwattr $C$DW$290, DW_AT_accessibility(DW_ACCESS_public)
    4773              $C$DW$291       .dwtag  DW_TAG_member
    4774                      .dwattr $C$DW$291, DW_AT_type(*$C$DW$T$66)
    4775                      .dwattr $C$DW$291, DW_AT_name("wercd")
    4776                      .dwattr $C$DW$291, DW_AT_TI_symbol_name("_wercd")
    4777                      .dwattr $C$DW$291, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
    4778                      .dwattr $C$DW$291, DW_AT_accessibility(DW_ACCESS_public)
    4779              $C$DW$292       .dwtag  DW_TAG_member
    4780                      .dwattr $C$DW$292, DW_AT_type(*$C$DW$T$67)
    4781                      .dwattr $C$DW$292, DW_AT_name("wtmeb")
    4782                      .dwattr $C$DW$292, DW_AT_TI_symbol_name("_wtmeb")
    4783                      .dwattr $C$DW$292, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
    4784                      .dwattr $C$DW$292, DW_AT_accessibility(DW_ACCESS_public)
    4785                      .dwendtag $C$DW$T$68
    4786              
    4787              $C$DW$T$46      .dwtag  DW_TAG_typedef, DW_AT_name("TCB")
    4788                      .dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$68)
    4789                      .dwattr $C$DW$T$46, DW_AT_language(DW_LANG_C)
    4790              $C$DW$T$47      .dwtag  DW_TAG_pointer_type
    4791                      .dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$46)
    4792                      .dwattr $C$DW$T$47, DW_AT_address_class(0x17)
    4793              
    4794              $C$DW$T$208     .dwtag  DW_TAG_array_type
    4795                      .dwattr $C$DW$T$208, DW_AT_type(*$C$DW$T$46)
    4796                      .dwattr $C$DW$T$208, DW_AT_language(DW_LANG_C)
    4797                      .dwattr $C$DW$T$208, DW_AT_byte_size(0x60)
    4798              $C$DW$293       .dwtag  DW_TAG_subrange_type
    4799                      .dwattr $C$DW$293, DW_AT_upper_bound(0x01)
    4800                      .dwendtag $C$DW$T$208
    4801              
    4802              
    4803              $C$DW$T$73      .dwtag  DW_TAG_structure_type
    4804                      .dwattr $C$DW$T$73, DW_AT_name("timer_event_block")
    4805                      .dwattr $C$DW$T$73, DW_AT_byte_size(0x0a)
    4806              $C$DW$294       .dwtag  DW_TAG_member
    4807                      .dwattr $C$DW$294, DW_AT_type(*$C$DW$T$37)
    4808                      .dwattr $C$DW$294, DW_AT_name("queue")
    4809                      .dwattr $C$DW$294, DW_AT_TI_symbol_name("_queue")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE  106

    4810                      .dwattr $C$DW$294, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4811                      .dwattr $C$DW$294, DW_AT_accessibility(DW_ACCESS_public)
    4812              $C$DW$295       .dwtag  DW_TAG_member
    4813                      .dwattr $C$DW$295, DW_AT_type(*$C$DW$T$69)
    4814                      .dwattr $C$DW$295, DW_AT_name("count")
    4815                      .dwattr $C$DW$295, DW_AT_TI_symbol_name("_count")
    4816                      .dwattr $C$DW$295, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4817                      .dwattr $C$DW$295, DW_AT_accessibility(DW_ACCESS_public)
    4818              $C$DW$296       .dwtag  DW_TAG_member
    4819                      .dwattr $C$DW$296, DW_AT_type(*$C$DW$T$72)
    4820                      .dwattr $C$DW$296, DW_AT_name("callback")
    4821                      .dwattr $C$DW$296, DW_AT_TI_symbol_name("_callback")
    4822                      .dwattr $C$DW$296, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
    4823                      .dwattr $C$DW$296, DW_AT_accessibility(DW_ACCESS_public)
    4824              $C$DW$297       .dwtag  DW_TAG_member
    4825                      .dwattr $C$DW$297, DW_AT_type(*$C$DW$T$19)
    4826                      .dwattr $C$DW$297, DW_AT_name("arg")
    4827                      .dwattr $C$DW$297, DW_AT_TI_symbol_name("_arg")
    4828                      .dwattr $C$DW$297, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
    4829                      .dwattr $C$DW$297, DW_AT_accessibility(DW_ACCESS_public)
    4830                      .dwendtag $C$DW$T$73
    4831              
    4832              $C$DW$T$67      .dwtag  DW_TAG_typedef, DW_AT_name("TMEB")
    4833                      .dwattr $C$DW$T$67, DW_AT_type(*$C$DW$T$73)
    4834                      .dwattr $C$DW$T$67, DW_AT_language(DW_LANG_C)
    4835              $C$DW$T$101     .dwtag  DW_TAG_pointer_type
    4836                      .dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$67)
    4837                      .dwattr $C$DW$T$101, DW_AT_address_class(0x17)
    4838                      .dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)
    4839              
    4840              ;***************************************************************
    4841              ;* DWARF REGISTER MAP                                          *
    4842              ;***************************************************************
    4843              
    4844              $C$DW$298       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC0")
    4845                      .dwattr $C$DW$298, DW_AT_location[DW_OP_reg0]
    4846              $C$DW$299       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC0")
    4847                      .dwattr $C$DW$299, DW_AT_location[DW_OP_reg1]
    4848              $C$DW$300       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC0_G")
    4849                      .dwattr $C$DW$300, DW_AT_location[DW_OP_reg2]
    4850              $C$DW$301       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC1")
    4851                      .dwattr $C$DW$301, DW_AT_location[DW_OP_reg3]
    4852              $C$DW$302       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC1")
    4853                      .dwattr $C$DW$302, DW_AT_location[DW_OP_reg4]
    4854              $C$DW$303       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC1_G")
    4855                      .dwattr $C$DW$303, DW_AT_location[DW_OP_reg5]
    4856              $C$DW$304       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC2")
    4857                      .dwattr $C$DW$304, DW_AT_location[DW_OP_reg6]
    4858              $C$DW$305       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC2")
    4859                      .dwattr $C$DW$305, DW_AT_location[DW_OP_reg7]
    4860              $C$DW$306       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC2_G")
    4861                      .dwattr $C$DW$306, DW_AT_location[DW_OP_reg8]
    4862              $C$DW$307       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC3")
    4863                      .dwattr $C$DW$307, DW_AT_location[DW_OP_reg9]
    4864              $C$DW$308       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC3")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE  107

    4865                      .dwattr $C$DW$308, DW_AT_location[DW_OP_reg10]
    4866              $C$DW$309       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC3_G")
    4867                      .dwattr $C$DW$309, DW_AT_location[DW_OP_reg11]
    4868              $C$DW$310       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T0")
    4869                      .dwattr $C$DW$310, DW_AT_location[DW_OP_reg12]
    4870              $C$DW$311       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T1")
    4871                      .dwattr $C$DW$311, DW_AT_location[DW_OP_reg13]
    4872              $C$DW$312       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T2")
    4873                      .dwattr $C$DW$312, DW_AT_location[DW_OP_reg14]
    4874              $C$DW$313       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T3")
    4875                      .dwattr $C$DW$313, DW_AT_location[DW_OP_reg15]
    4876              $C$DW$314       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR0")
    4877                      .dwattr $C$DW$314, DW_AT_location[DW_OP_reg16]
    4878              $C$DW$315       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR0")
    4879                      .dwattr $C$DW$315, DW_AT_location[DW_OP_reg17]
    4880              $C$DW$316       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR1")
    4881                      .dwattr $C$DW$316, DW_AT_location[DW_OP_reg18]
    4882              $C$DW$317       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR1")
    4883                      .dwattr $C$DW$317, DW_AT_location[DW_OP_reg19]
    4884              $C$DW$318       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR2")
    4885                      .dwattr $C$DW$318, DW_AT_location[DW_OP_reg20]
    4886              $C$DW$319       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR2")
    4887                      .dwattr $C$DW$319, DW_AT_location[DW_OP_reg21]
    4888              $C$DW$320       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR3")
    4889                      .dwattr $C$DW$320, DW_AT_location[DW_OP_reg22]
    4890              $C$DW$321       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR3")
    4891                      .dwattr $C$DW$321, DW_AT_location[DW_OP_reg23]
    4892              $C$DW$322       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR4")
    4893                      .dwattr $C$DW$322, DW_AT_location[DW_OP_reg24]
    4894              $C$DW$323       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR4")
    4895                      .dwattr $C$DW$323, DW_AT_location[DW_OP_reg25]
    4896              $C$DW$324       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR5")
    4897                      .dwattr $C$DW$324, DW_AT_location[DW_OP_reg26]
    4898              $C$DW$325       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR5")
    4899                      .dwattr $C$DW$325, DW_AT_location[DW_OP_reg27]
    4900              $C$DW$326       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR6")
    4901                      .dwattr $C$DW$326, DW_AT_location[DW_OP_reg28]
    4902              $C$DW$327       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR6")
    4903                      .dwattr $C$DW$327, DW_AT_location[DW_OP_reg29]
    4904              $C$DW$328       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR7")
    4905                      .dwattr $C$DW$328, DW_AT_location[DW_OP_reg30]
    4906              $C$DW$329       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR7")
    4907                      .dwattr $C$DW$329, DW_AT_location[DW_OP_reg31]
    4908              $C$DW$330       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("FP")
    4909                      .dwattr $C$DW$330, DW_AT_location[DW_OP_regx 0x20]
    4910              $C$DW$331       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XFP")
    4911                      .dwattr $C$DW$331, DW_AT_location[DW_OP_regx 0x21]
    4912              $C$DW$332       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("PC")
    4913                      .dwattr $C$DW$332, DW_AT_location[DW_OP_regx 0x22]
    4914              $C$DW$333       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SP")
    4915                      .dwattr $C$DW$333, DW_AT_location[DW_OP_regx 0x23]
    4916              $C$DW$334       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XSP")
    4917                      .dwattr $C$DW$334, DW_AT_location[DW_OP_regx 0x24]
    4918              $C$DW$335       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BKC")
    4919                      .dwattr $C$DW$335, DW_AT_location[DW_OP_regx 0x25]
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE  108

    4920              $C$DW$336       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BK03")
    4921                      .dwattr $C$DW$336, DW_AT_location[DW_OP_regx 0x26]
    4922              $C$DW$337       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BK47")
    4923                      .dwattr $C$DW$337, DW_AT_location[DW_OP_regx 0x27]
    4924              $C$DW$338       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST0")
    4925                      .dwattr $C$DW$338, DW_AT_location[DW_OP_regx 0x28]
    4926              $C$DW$339       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST1")
    4927                      .dwattr $C$DW$339, DW_AT_location[DW_OP_regx 0x29]
    4928              $C$DW$340       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST2")
    4929                      .dwattr $C$DW$340, DW_AT_location[DW_OP_regx 0x2a]
    4930              $C$DW$341       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST3")
    4931                      .dwattr $C$DW$341, DW_AT_location[DW_OP_regx 0x2b]
    4932              $C$DW$342       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("MDP")
    4933                      .dwattr $C$DW$342, DW_AT_location[DW_OP_regx 0x2c]
    4934              $C$DW$343       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("MDP05")
    4935                      .dwattr $C$DW$343, DW_AT_location[DW_OP_regx 0x2d]
    4936              $C$DW$344       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("MDP67")
    4937                      .dwattr $C$DW$344, DW_AT_location[DW_OP_regx 0x2e]
    4938              $C$DW$345       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BRC0")
    4939                      .dwattr $C$DW$345, DW_AT_location[DW_OP_regx 0x2f]
    4940              $C$DW$346       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA0")
    4941                      .dwattr $C$DW$346, DW_AT_location[DW_OP_regx 0x30]
    4942              $C$DW$347       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA0_H")
    4943                      .dwattr $C$DW$347, DW_AT_location[DW_OP_regx 0x31]
    4944              $C$DW$348       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA0")
    4945                      .dwattr $C$DW$348, DW_AT_location[DW_OP_regx 0x32]
    4946              $C$DW$349       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA0_H")
    4947                      .dwattr $C$DW$349, DW_AT_location[DW_OP_regx 0x33]
    4948              $C$DW$350       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BRS1")
    4949                      .dwattr $C$DW$350, DW_AT_location[DW_OP_regx 0x34]
    4950              $C$DW$351       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BRC1")
    4951                      .dwattr $C$DW$351, DW_AT_location[DW_OP_regx 0x35]
    4952              $C$DW$352       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA1")
    4953                      .dwattr $C$DW$352, DW_AT_location[DW_OP_regx 0x36]
    4954              $C$DW$353       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA1_H")
    4955                      .dwattr $C$DW$353, DW_AT_location[DW_OP_regx 0x37]
    4956              $C$DW$354       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA1")
    4957                      .dwattr $C$DW$354, DW_AT_location[DW_OP_regx 0x38]
    4958              $C$DW$355       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA1_H")
    4959                      .dwattr $C$DW$355, DW_AT_location[DW_OP_regx 0x39]
    4960              $C$DW$356       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CSR")
    4961                      .dwattr $C$DW$356, DW_AT_location[DW_OP_regx 0x3a]
    4962              $C$DW$357       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RPTC")
    4963                      .dwattr $C$DW$357, DW_AT_location[DW_OP_regx 0x3b]
    4964              $C$DW$358       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CDP")
    4965                      .dwattr $C$DW$358, DW_AT_location[DW_OP_regx 0x3c]
    4966              $C$DW$359       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XCDP")
    4967                      .dwattr $C$DW$359, DW_AT_location[DW_OP_regx 0x3d]
    4968              $C$DW$360       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TRN0")
    4969                      .dwattr $C$DW$360, DW_AT_location[DW_OP_regx 0x3e]
    4970              $C$DW$361       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TRN1")
    4971                      .dwattr $C$DW$361, DW_AT_location[DW_OP_regx 0x3f]
    4972              $C$DW$362       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA01")
    4973                      .dwattr $C$DW$362, DW_AT_location[DW_OP_regx 0x40]
    4974              $C$DW$363       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA23")
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE  109

    4975                      .dwattr $C$DW$363, DW_AT_location[DW_OP_regx 0x41]
    4976              $C$DW$364       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA45")
    4977                      .dwattr $C$DW$364, DW_AT_location[DW_OP_regx 0x42]
    4978              $C$DW$365       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA67")
    4979                      .dwattr $C$DW$365, DW_AT_location[DW_OP_regx 0x43]
    4980              $C$DW$366       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSAC")
    4981                      .dwattr $C$DW$366, DW_AT_location[DW_OP_regx 0x44]
    4982              $C$DW$367       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CARRY")
    4983                      .dwattr $C$DW$367, DW_AT_location[DW_OP_regx 0x45]
    4984              $C$DW$368       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TC1")
    4985                      .dwattr $C$DW$368, DW_AT_location[DW_OP_regx 0x46]
    4986              $C$DW$369       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TC2")
    4987                      .dwattr $C$DW$369, DW_AT_location[DW_OP_regx 0x47]
    4988              $C$DW$370       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("M40")
    4989                      .dwattr $C$DW$370, DW_AT_location[DW_OP_regx 0x48]
    4990              $C$DW$371       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SXMD")
    4991                      .dwattr $C$DW$371, DW_AT_location[DW_OP_regx 0x49]
    4992              $C$DW$372       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ARMS")
    4993                      .dwattr $C$DW$372, DW_AT_location[DW_OP_regx 0x4a]
    4994              $C$DW$373       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("C54CM")
    4995                      .dwattr $C$DW$373, DW_AT_location[DW_OP_regx 0x4b]
    4996              $C$DW$374       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SATA")
    4997                      .dwattr $C$DW$374, DW_AT_location[DW_OP_regx 0x4c]
    4998              $C$DW$375       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SATD")
    4999                      .dwattr $C$DW$375, DW_AT_location[DW_OP_regx 0x4d]
    5000              $C$DW$376       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RDM")
    5001                      .dwattr $C$DW$376, DW_AT_location[DW_OP_regx 0x4e]
    5002              $C$DW$377       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("FRCT")
    5003                      .dwattr $C$DW$377, DW_AT_location[DW_OP_regx 0x4f]
    5004              $C$DW$378       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SMUL")
    5005                      .dwattr $C$DW$378, DW_AT_location[DW_OP_regx 0x50]
    5006              $C$DW$379       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("INTM")
    5007                      .dwattr $C$DW$379, DW_AT_location[DW_OP_regx 0x51]
    5008              $C$DW$380       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR0LC")
    5009                      .dwattr $C$DW$380, DW_AT_location[DW_OP_regx 0x52]
    5010              $C$DW$381       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR1LC")
    5011                      .dwattr $C$DW$381, DW_AT_location[DW_OP_regx 0x53]
    5012              $C$DW$382       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR2LC")
    5013                      .dwattr $C$DW$382, DW_AT_location[DW_OP_regx 0x54]
    5014              $C$DW$383       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR3LC")
    5015                      .dwattr $C$DW$383, DW_AT_location[DW_OP_regx 0x55]
    5016              $C$DW$384       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR4LC")
    5017                      .dwattr $C$DW$384, DW_AT_location[DW_OP_regx 0x56]
    5018              $C$DW$385       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR5LC")
    5019                      .dwattr $C$DW$385, DW_AT_location[DW_OP_regx 0x57]
    5020              $C$DW$386       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR6LC")
    5021                      .dwattr $C$DW$386, DW_AT_location[DW_OP_regx 0x58]
    5022              $C$DW$387       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR7LC")
    5023                      .dwattr $C$DW$387, DW_AT_location[DW_OP_regx 0x59]
    5024              $C$DW$388       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CDPLC")
    5025                      .dwattr $C$DW$388, DW_AT_location[DW_OP_regx 0x5a]
    5026              $C$DW$389       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CIE_RETA")
    5027                      .dwattr $C$DW$389, DW_AT_location[DW_OP_regx 0x5b]
    5028                      .dwendtag $C$DW$CU
    5029              
TMS320C55x Assembler Unix v4.4.1 Tue Feb 18 12:16:37 2025

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
/tmp/129924KNrf8                                                     PAGE  110

    5029              
    5029              

No Assembly Errors, No Assembly Warnings
